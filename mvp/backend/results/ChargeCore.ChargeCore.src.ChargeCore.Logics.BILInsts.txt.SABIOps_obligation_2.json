{
    "json_file_path": "<_io.TextIOWrapper name='/app/results/ChargeCore.ChargeCore.src.ChargeCore.Logics.BILInsts.txt.SABIOps_obligation_1.json' mode='w' encoding='UTF-8'>",
    "query_context_path": "/app/query_data/ChargeCore/ChargeCore.ChargeCore.src.ChargeCore.Logics.BILInsts.txt",
    "state": "PROVING",
    "model": "llemma-base",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 1,
    "num_evaluate_queries": 0,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "@lentails B ILOps (@lexists B ILOps A (fun x1 : A => @lexists B ILOps A (fun x2 : A => @lexists B ILOps (@sa_mul A SAOps x1 x2 t) (fun _ : @sa_mul A SAOps x1 x2 t => @land B ILOps (@ILPreFrm_pred A rel B ILOps P x1) (@ILPreFrm_pred A rel B ILOps Q x2))))) (@lexists B ILOps A (fun x1 : A => @lexists B ILOps A (fun x2 : A => @lexists B ILOps (@sa_mul A SAOps x1 x2 t') (fun _ : @sa_mul A SAOps x1 x2 t' => @land B ILOps (@ILPreFrm_pred A rel B ILOps P x1) (@ILPreFrm_pred A rel B ILOps Q x2)))))"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": []
    },
    "successful_tactic_path": null
}