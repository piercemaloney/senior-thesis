{
    "json_file_path": "data/chinese/Nat_complements.json",
    "query_context_path": "/app/query_data/chinese/chinese.Nat_complements.txt",
    "state": "SUCCESS",
    "model": "llemma-base",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 1,
    "num_evaluate_queries": 1,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall n : nat, @eq nat (Init.Nat.mul (S O) n) n"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros; elim n; simpl in |- *.",
                "fg_goals": [
                    "forall (n : nat) (_ : @eq nat (Init.Nat.add n O) n), @eq nat (S (Init.Nat.add n O)) (S n)",
                    "@eq nat O O"
                ],
                "bg_goals": [],
                "eval_score": 0.8,
                "cost": 0.2,
                "f_score": 0.39999999999999997,
                "children": []
            },
            {
                "tactic": "intros; elim n; simpl in |- *; auto with arith.",
                "fg_goals": [],
                "bg_goals": [],
                "eval_score": Infinity,
                "cost": 0.0,
                "f_score": 0.0,
                "children": []
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "intros; elim n; simpl in |- *; auto with arith."
    ]
}