{
    "json_file_path": "data/chinese/Lci.json",
    "query_context_path": "/app/query_data/chinese/chinese.Lci.txt",
    "state": "SUCCESS",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 2,
    "num_evaluate_queries": 2,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (_ : commutativity) (x y : S) (_ : G x) (_ : G y) (_ : @eq S (Add x y) O), is_opposite x y"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros.",
                "fg_goals": [
                    "is_opposite x y"
                ],
                "bg_goals": [],
                "eval_score": 0.3,
                "cost": 0.2,
                "f_score": 0.8999999999999999,
                "children": []
            },
            {
                "tactic": "intros; split; [ assumption | split; [ assumption | split; [ assumption | idtac ] ] ].",
                "fg_goals": [
                    "@eq S (Add y x) O"
                ],
                "bg_goals": [],
                "eval_score": 0.75,
                "cost": 0.2,
                "f_score": 0.45,
                "children": [
                    {
                        "tactic": "rewrite H; rewrite H2; trivial.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "intros; split; [ assumption | split; [ assumption | split; [ assumption | idtac ] ] ].",
        "rewrite H; rewrite H2; trivial."
    ]
}