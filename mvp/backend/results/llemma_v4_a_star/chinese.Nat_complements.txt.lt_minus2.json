{
    "json_file_path": "data/chinese/Nat_complements.json",
    "query_context_path": "/app/query_data/chinese/chinese.Nat_complements.txt",
    "state": "TIMEOUT",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 12,
    "num_evaluate_queries": 17,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (n m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros; elim (le_or_lt n m); auto with arith.",
                "fg_goals": [
                    "forall _ : lt m n, lt O (Init.Nat.sub m n)",
                    "forall _ : le n m, lt O (Init.Nat.sub m n)"
                ],
                "bg_goals": [],
                "eval_score": 0.6,
                "cost": 0.2,
                "f_score": 0.6000000000000001,
                "children": [
                    {
                        "tactic": "intros; elim H0; auto with arith.",
                        "fg_goals": [
                            "forall _ : lt m n, lt O (Init.Nat.sub m n)",
                            "forall (m : nat) (_ : le n m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                            "lt O (Init.Nat.sub n n)"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.7,
                        "cost": 0.4,
                        "f_score": 0.7000000000000001,
                        "children": [
                            {
                                "tactic": "intros; elim H0; auto with arith; intros; elim H1; auto with arith.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            },
                            {
                                "tactic": "intros; elim H0; auto with arith.",
                                "fg_goals": [
                                    "forall _ : lt m n, lt O (Init.Nat.sub m n)",
                                    "forall (m : nat) (_ : le n m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                    "lt O (Init.Nat.sub n n)"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.3,
                                "cost": 0.6000000000000001,
                                "f_score": 1.3,
                                "children": []
                            }
                        ]
                    },
                    {
                        "tactic": "intros; apply le_lt_trans with n; auto with arith.",
                        "fg_goals": [
                            "forall _ : lt m n, lt O (Init.Nat.sub m n)",
                            "lt n (Init.Nat.sub m n)"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.7,
                        "cost": 0.4,
                        "f_score": 0.7000000000000001,
                        "children": [
                            {
                                "tactic": "intros; apply lt_minus; auto with arith.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            },
                            {
                                "tactic": "intros; apply lt_minus; auto with arith; auto with arith.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "tactic": "intros n m H; elim H; auto with arith.",
                "fg_goals": [
                    "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                    "lt O (Init.Nat.sub (S n) n)"
                ],
                "bg_goals": [],
                "eval_score": 0.6,
                "cost": 0.2,
                "f_score": 0.6000000000000001,
                "children": [
                    {
                        "tactic": "intros; apply lt_O_minus_lt; auto with arith.",
                        "fg_goals": [
                            "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                            "lt O (Init.Nat.sub (Init.Nat.sub (S n) n) O)"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.85,
                        "cost": 0.4,
                        "f_score": 0.55,
                        "children": [
                            {
                                "tactic": "intros; apply lt_O_minus_lt; auto with arith.",
                                "fg_goals": [
                                    "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                    "lt O (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (S n) n) O) O)"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.7,
                                "cost": 0.6000000000000001,
                                "f_score": 0.9000000000000001,
                                "children": [
                                    {
                                        "tactic": "intros; apply lt_O_minus_lt; auto with arith.",
                                        "fg_goals": [
                                            "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                            "lt O (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (S n) n) O) O) O)"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.1,
                                        "cost": 0.8,
                                        "f_score": 1.7000000000000002,
                                        "children": []
                                    },
                                    {
                                        "tactic": "intros; apply lt_O_minus_lt; auto with arith; auto with arith.",
                                        "fg_goals": [
                                            "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                            "lt O (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (S n) n) O) O) O)"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.8,
                                        "cost": 0.8,
                                        "f_score": 1.0,
                                        "children": [
                                            {
                                                "tactic": "intros; apply lt_O_minus_lt; auto with arith.",
                                                "fg_goals": [
                                                    "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                                    "lt O (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (S n) n) O) O) O) O)"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.3,
                                                "cost": 1.0,
                                                "f_score": 1.7,
                                                "children": []
                                            },
                                            {
                                                "tactic": "intros; apply lt_O_minus_lt; auto with arith; auto with arith.",
                                                "fg_goals": [
                                                    "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                                    "lt O (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (S n) n) O) O) O) O)"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.1,
                                                "cost": 1.0,
                                                "f_score": 1.9,
                                                "children": []
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "tactic": "intros; apply lt_O_minus_lt; auto with arith; auto with arith.",
                                "fg_goals": [
                                    "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                    "lt O (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (S n) n) O) O)"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.9,
                                "cost": 0.6000000000000001,
                                "f_score": 0.7000000000000001,
                                "children": [
                                    {
                                        "tactic": "intros; apply lt_O_minus_lt; auto with arith.",
                                        "fg_goals": [
                                            "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                            "lt O (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (Init.Nat.sub (S n) n) O) O) O)"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.1,
                                        "cost": 0.8,
                                        "f_score": 1.7000000000000002,
                                        "children": []
                                    },
                                    {
                                        "tactic": "Qed.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "tactic": "intros; elim (eq_gt_O_dec (S n - n)); auto with arith.",
                        "fg_goals": [
                            "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                            "forall _ : @eq nat (Init.Nat.sub (S n) n) O, lt O (Init.Nat.sub (S n) n)"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.8,
                        "cost": 0.4,
                        "f_score": 0.6,
                        "children": [
                            {
                                "tactic": "intros; elim (eq_gt_O_dec (S n - n)); auto with arith; intros.",
                                "fg_goals": [
                                    "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                    "lt O (Init.Nat.sub (S n) n)"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.7,
                                "cost": 0.6000000000000001,
                                "f_score": 0.9000000000000001,
                                "children": [
                                    {
                                        "tactic": "elim (le_lt_or_eq _ _ H0); auto with arith.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    },
                                    {
                                        "tactic": "elim (eq_gt_O_dec (S n - n)); auto with arith.",
                                        "fg_goals": [
                                            "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                            "forall _ : @eq nat (Init.Nat.sub (S n) n) O, lt O (Init.Nat.sub (S n) n)"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.6,
                                        "cost": 0.8,
                                        "f_score": 1.2000000000000002,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "intros; elim (eq_gt_O_dec (S n - n)); auto with arith.",
                                "fg_goals": [
                                    "forall (m : nat) (_ : le (S n) m) (_ : lt O (Init.Nat.sub m n)), lt O (Init.Nat.sub (S m) n)",
                                    "forall _ : @eq nat (Init.Nat.sub (S n) n) O, lt O (Init.Nat.sub (S n) n)"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.7,
                                "cost": 0.6000000000000001,
                                "f_score": 0.9000000000000001,
                                "children": [
                                    {
                                        "tactic": "Qed with arith.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    },
                                    {
                                        "tactic": "Qed.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": null
}