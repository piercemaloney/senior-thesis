{
    "json_file_path": "data/UnifySL/ModalLogic/ShallowEmbedded/MonoPredicateModalLogic.json",
    "query_context_path": "/app/query_data/UnifySL/UnifySL.ModalLogic.ShallowEmbedded.MonoPredicateModalLogic.txt",
    "state": "TIMEOUT",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 13,
    "num_evaluate_queries": 20,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "@SystemK (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@MonoPred_pL A R1 po_R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@MonoPred_Gamma A R1 po_R1) (@MonoPred_minAX A R1 po_R1) (@MonoPred_ipGamma A R1 po_R1)"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "constructor; intros; try apply Same_set_refl.",
                "fg_goals": [
                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                ],
                "bg_goals": [],
                "eval_score": 0.0,
                "cost": 0.2,
                "f_score": 1.2,
                "children": [
                    {
                        "tactic": "intros.",
                        "fg_goals": [
                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.0,
                        "cost": 0.4,
                        "f_score": 1.4,
                        "children": [
                            {
                                "tactic": "intros.",
                                "fg_goals": [
                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": [
                                    {
                                        "tactic": "intros x y.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    },
                                    {
                                        "tactic": "intros.",
                                        "fg_goals": [
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "intros; apply Same_set_refl.",
                                "fg_goals": [
                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": [
                                    {
                                        "tactic": "intros.",
                                        "fg_goals": [
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": []
                                    },
                                    {
                                        "tactic": "intros; apply Same_set_refl.",
                                        "fg_goals": [
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": [
                                            {
                                                "tactic": "intros.",
                                                "fg_goals": [
                                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.0,
                                                "cost": 1.0,
                                                "f_score": 2.0,
                                                "children": []
                                            },
                                            {
                                                "tactic": "intros; apply Same_set_refl.",
                                                "fg_goals": [
                                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.0,
                                                "cost": 1.0,
                                                "f_score": 2.0,
                                                "children": []
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "tactic": "intros; apply Same_set_refl.",
                        "fg_goals": [
                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.0,
                        "cost": 0.4,
                        "f_score": 1.4,
                        "children": [
                            {
                                "tactic": "intros.",
                                "fg_goals": [
                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": [
                                    {
                                        "tactic": "intros.",
                                        "fg_goals": [
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": []
                                    },
                                    {
                                        "tactic": "apply (Same_set_intro (fun x => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a)).",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "intros; apply Same_set_refl.",
                                "fg_goals": [
                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                    "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": [
                                    {
                                        "tactic": "intros.",
                                        "fg_goals": [
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": []
                                    },
                                    {
                                        "tactic": "intros; apply Same_set_refl.",
                                        "fg_goals": [
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                            "Ensembles.In (@expr (@MonoPred_L A R1)) (fun x : @expr (@MonoPred_L A R1) => forall a : A, @proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) x a) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "tactic": "constructor.",
                "fg_goals": [
                    "forall (x : @expr (@MonoPred_L A R1)) (_ : @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) x), @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                    "forall x y : @expr (@MonoPred_L A R1), @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                ],
                "bg_goals": [],
                "eval_score": 0.0,
                "cost": 0.2,
                "f_score": 1.2,
                "children": [
                    {
                        "tactic": "intros x y H.",
                        "fg_goals": [
                            "forall (x : @expr (@MonoPred_L A R1)) (_ : @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) x), @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                            "@proj1_sig (forall _ : A, Prop) (@upwards_closed_Kdenote A R1) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y))) H"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.0,
                        "cost": 0.4,
                        "f_score": 1.4,
                        "children": [
                            {
                                "tactic": "apply (proj1_sig (H tt)).",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            },
                            {
                                "tactic": "apply (proj1_sig (upwards_closed_Kdenote A R1) H).",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            }
                        ]
                    },
                    {
                        "tactic": "intros.",
                        "fg_goals": [
                            "forall (x : @expr (@MonoPred_L A R1)) (_ : @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) x), @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                            "@provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.0,
                        "cost": 0.4,
                        "f_score": 1.4,
                        "children": [
                            {
                                "tactic": "intros.",
                                "fg_goals": [
                                    "forall (x : @expr (@MonoPred_L A R1)) (_ : @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) x), @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                    "@provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": [
                                    {
                                        "tactic": "intros.",
                                        "fg_goals": [
                                            "forall (x : @expr (@MonoPred_L A R1)) (_ : @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) x), @provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x)",
                                            "@provable (@MonoPred_L A R1) (@MonoPred_Gamma A R1 po_R1) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) x y)) (@impp (@MonoPred_L A R1) (@MonoPred_minL A R1 po_R1) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) x) (@boxp (@MonoPred_L A R1) (@MonoPred_mL A R1 po_R1 R2 uR2) y)))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": null
}