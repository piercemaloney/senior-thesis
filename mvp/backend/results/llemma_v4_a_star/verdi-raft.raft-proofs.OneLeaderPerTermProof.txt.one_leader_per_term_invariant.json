{
    "json_file_path": "data/verdi-raft/raft-proofs/OneLeaderPerTermProof.json",
    "query_context_path": "/app/query_data/verdi-raft/verdi-raft.raft-proofs.OneLeaderPerTermProof.txt",
    "state": "TIMEOUT",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 12,
    "num_evaluate_queries": 17,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (net : @network (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) (_ : @raft_intermediate_reachable orig_base_params one_node_params raft_params net), @one_leader_per_term orig_base_params one_node_params raft_params net"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros net H H0.",
                "fg_goals": [
                    "forall (h' : @Net.name (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (@nwState (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) net H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (@nwState (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) net h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (@nwState (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) net H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (@nwState (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) net h')) Leader), @eq (@Net.name (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) H0 h'"
                ],
                "bg_goals": [],
                "eval_score": 0.2,
                "cost": 0.2,
                "f_score": 1.0,
                "children": [
                    {
                        "tactic": "intros.",
                        "fg_goals": [
                            "@eq (@Net.name (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) H0 h'"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.3,
                        "cost": 0.4,
                        "f_score": 1.1,
                        "children": [
                            {
                                "tactic": "unfold one_leader_per_term.",
                                "fg_goals": [
                                    "@eq (@Net.name (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) H0 h'"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.2,
                                "cost": 0.6000000000000001,
                                "f_score": 1.4000000000000001,
                                "children": [
                                    {
                                        "tactic": "eapply one_leader_per_term_invariant; eauto.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    },
                                    {
                                        "tactic": "copy_eapply_prop_hyp one_leader_per_term H.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "unfold one_leader_per_term in *.",
                                "fg_goals": [
                                    "@eq (@Net.name (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) H0 h'"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.2,
                                "cost": 0.6000000000000001,
                                "f_score": 1.4000000000000001,
                                "children": [
                                    {
                                        "tactic": "intros.",
                                        "fg_goals": [
                                            "@eq (@Net.name (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) H0 h'"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.3,
                                        "cost": 0.8,
                                        "f_score": 1.5,
                                        "children": [
                                            {
                                                "tactic": "eapply_prop_hyp cronies_correct cronies_correct; eauto.",
                                                "fg_goals": [],
                                                "bg_goals": [],
                                                "eval_score": -Infinity,
                                                "cost": 0.0,
                                                "f_score": 0.0,
                                                "children": []
                                            },
                                            {
                                                "tactic": "destruct (in_find_name_in_list_dec h' (nwPackets net)).",
                                                "fg_goals": [],
                                                "bg_goals": [],
                                                "eval_score": -Infinity,
                                                "cost": 0.0,
                                                "f_score": 0.0,
                                                "children": []
                                            }
                                        ]
                                    },
                                    {
                                        "tactic": "copy_eapply_prop_hyp cronies_correct cronies_correct_invariant.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "tactic": "induction net.",
                        "fg_goals": [
                            "forall (h' : @Net.name (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (@Net.nwState (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) (@mkNetwork (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) nwPackets nwState) H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (@Net.nwState (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) (@mkNetwork (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) nwPackets nwState) h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (@Net.nwState (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) (@mkNetwork (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) nwPackets nwState) H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (@Net.nwState (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) (@mkNetwork (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params) nwPackets nwState) h')) Leader), @eq (@Net.name (@base_params orig_base_params raft_params) (@multi_params orig_base_params one_node_params raft_params)) H0 h'"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.3,
                        "cost": 0.4,
                        "f_score": 1.1,
                        "children": [
                            {
                                "tactic": "- simpl.",
                                "fg_goals": [
                                    "forall (h' : @name orig_base_params raft_params) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h')) Leader), @eq (@name orig_base_params raft_params) H0 h'"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.3,
                                "cost": 0.6000000000000001,
                                "f_score": 1.3,
                                "children": [
                                    {
                                        "tactic": "simpl in *.",
                                        "fg_goals": [
                                            "forall (h' : @name orig_base_params raft_params) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h')) Leader), @eq (@name orig_base_params raft_params) H0 h'"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.3,
                                        "cost": 0.8,
                                        "f_score": 1.5,
                                        "children": [
                                            {
                                                "tactic": "intros.",
                                                "fg_goals": [
                                                    "@eq (@name orig_base_params raft_params) H0 h'"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.4,
                                                "cost": 1.0,
                                                "f_score": 1.6,
                                                "children": []
                                            },
                                            {
                                                "tactic": "simpl.",
                                                "fg_goals": [
                                                    "forall (h' : @name orig_base_params raft_params) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h')) Leader), @eq (@name orig_base_params raft_params) H0 h'"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.2,
                                                "cost": 1.0,
                                                "f_score": 1.8,
                                                "children": []
                                            }
                                        ]
                                    },
                                    {
                                        "tactic": "simpl.",
                                        "fg_goals": [
                                            "forall (h' : @name orig_base_params raft_params) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h')) Leader), @eq (@name orig_base_params raft_params) H0 h'"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.1,
                                        "cost": 0.8,
                                        "f_score": 1.7000000000000002,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "- simpl in *.",
                                "fg_goals": [
                                    "forall (h' : @name orig_base_params raft_params) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h')) Leader), @eq (@name orig_base_params raft_params) H0 h'"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.3,
                                "cost": 0.6000000000000001,
                                "f_score": 1.3,
                                "children": [
                                    {
                                        "tactic": "simpl.",
                                        "fg_goals": [
                                            "forall (h' : @name orig_base_params raft_params) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h')) Leader), @eq (@name orig_base_params raft_params) H0 h'"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.2,
                                        "cost": 0.8,
                                        "f_score": 1.6,
                                        "children": []
                                    },
                                    {
                                        "tactic": "simpl in *.",
                                        "fg_goals": [
                                            "forall (h' : @name orig_base_params raft_params) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h')) Leader), @eq (@name orig_base_params raft_params) H0 h'"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.3,
                                        "cost": 0.8,
                                        "f_score": 1.5,
                                        "children": [
                                            {
                                                "tactic": "intros.",
                                                "fg_goals": [
                                                    "@eq (@name orig_base_params raft_params) H0 h'"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.1,
                                                "cost": 1.0,
                                                "f_score": 1.9,
                                                "children": []
                                            },
                                            {
                                                "tactic": "simpl.",
                                                "fg_goals": [
                                                    "forall (h' : @name orig_base_params raft_params) (_ : @eq term (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) (RaftState.currentTerm term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h'))) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState H0)) Leader) (_ : @eq serverType (RaftState.type term (@name orig_base_params raft_params) (@entry orig_base_params raft_params) logIndex serverType (@data orig_base_params) (@clientId orig_base_params raft_params) (@output orig_base_params) (nwState h')) Leader), @eq (@name orig_base_params raft_params) H0 h'"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.2,
                                                "cost": 1.0,
                                                "f_score": 1.8,
                                                "children": []
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "tactic": "intros.",
                "fg_goals": [
                    "@one_leader_per_term orig_base_params one_node_params raft_params net"
                ],
                "bg_goals": [],
                "eval_score": 0.1,
                "cost": 0.2,
                "f_score": 1.1,
                "children": [
                    {
                        "tactic": "eapply one_leader_per_term_invariant;[| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    },
                    {
                        "tactic": "eapply one_leader_per_term_invariant.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": null
}