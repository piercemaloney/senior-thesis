{
    "json_file_path": "data/huffman/theories/ISort.json",
    "query_context_path": "/app/query_data/huffman/huffman.theories.ISort.txt",
    "state": "SUCCESS",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 8,
    "num_evaluate_queries": 10,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (L : list A) (a : A), @permutation A (@cons A a L) (insert a L)"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros L a; elim L; simpl in |- *; auto.",
                "fg_goals": [
                    "forall (a0 : A) (l : list A) (_ : @permutation A (@cons A a l) (insert a l)), @permutation A (@cons A a (@cons A a0 l)) (if order_fun a a0 then @cons A a (@cons A a0 l) else @cons A a0 (insert a l))"
                ],
                "bg_goals": [],
                "eval_score": 0.0,
                "cost": 0.2,
                "f_score": 1.2,
                "children": [
                    {
                        "tactic": "intros a0 l H' H'0; elim (order_fun a a0); auto.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    },
                    {
                        "tactic": "intros a0 l H' a1.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            },
            {
                "tactic": "intros L a.",
                "fg_goals": [
                    "@permutation A (@cons A a L) (insert a L)"
                ],
                "bg_goals": [],
                "eval_score": 0.0,
                "cost": 0.2,
                "f_score": 1.2,
                "children": [
                    {
                        "tactic": "induction L.",
                        "fg_goals": [
                            "@permutation A (@cons A a (@cons A a0 L)) (insert a (@cons A a0 L))",
                            "@permutation A (@cons A a (@nil A)) (insert a (@nil A))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.0,
                        "cost": 0.4,
                        "f_score": 1.4,
                        "children": [
                            {
                                "tactic": "simpl in |- *.",
                                "fg_goals": [
                                    "@permutation A (@cons A a (@cons A a0 L)) (insert a (@cons A a0 L))",
                                    "@permutation A (@cons A a (@nil A)) (@cons A a (@nil A))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": [
                                    {
                                        "tactic": "apply permutation_refl; auto.",
                                        "fg_goals": [
                                            "@permutation A (@cons A a (@cons A a0 L)) (insert a (@cons A a0 L))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": []
                                    },
                                    {
                                        "tactic": "apply permutation_refl.",
                                        "fg_goals": [
                                            "@permutation A (@cons A a (@cons A a0 L)) (insert a (@cons A a0 L))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.0,
                                        "cost": 0.8,
                                        "f_score": 1.8,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "simpl in |- *; auto.",
                                "fg_goals": [
                                    "@permutation A (@cons A a (@cons A a0 L)) (insert a (@cons A a0 L))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": []
                            }
                        ]
                    },
                    {
                        "tactic": "induction L as [| b L0 IHL0]; simpl in |- *; auto.",
                        "fg_goals": [
                            "@permutation A (@cons A a (@cons A b L0)) (if order_fun a b then @cons A a (@cons A b L0) else @cons A b (insert a L0))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.0,
                        "cost": 0.4,
                        "f_score": 1.4,
                        "children": [
                            {
                                "tactic": "generalize (refl_equal (order_fun a b)); pattern (order_fun a b) at -1 in |- *; case (order_fun a b); auto.",
                                "fg_goals": [
                                    "forall _ : @eq bool (order_fun a b) false, @permutation A (@cons A a (@cons A b L0)) (@cons A b (insert a L0))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": [
                                    {
                                        "tactic": "intros H; apply permutation_trans with (1 := permutation_swap _ _ _ _ _ H).",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    },
                                    {
                                        "tactic": "intros H; apply permutation_trans with (1 := permutation_insert _ _ _ H); auto.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "case (order_fun a b); auto.",
                                "fg_goals": [
                                    "@permutation A (@cons A a (@cons A b L0)) (@cons A b (insert a L0))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.0,
                                "cost": 0.6000000000000001,
                                "f_score": 1.6,
                                "children": [
                                    {
                                        "tactic": "apply permutation_trans with (1 := permutation_cons_cons a b L0); auto.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    },
                                    {
                                        "tactic": "apply permutation_trans with (b :: a :: L0); auto.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "intros L a.",
        "induction L as [| b L0 IHL0]; simpl in |- *; auto.",
        "case (order_fun a b); auto.",
        "apply permutation_trans with (b :: a :: L0); auto."
    ]
}