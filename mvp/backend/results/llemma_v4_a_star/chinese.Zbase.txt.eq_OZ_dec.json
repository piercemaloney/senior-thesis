{
    "json_file_path": "data/chinese/Zbase.json",
    "query_context_path": "/app/query_data/chinese/chinese.Zbase.txt",
    "state": "SUCCESS",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 6,
    "num_evaluate_queries": 6,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall x : Z, sumbool (@eq Z x OZ) (not (@eq Z x OZ))"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "destruct x.",
                "fg_goals": [
                    "sumbool (@eq Z (neg n) OZ) (not (@eq Z (neg n) OZ))",
                    "sumbool (@eq Z (pos n) OZ) (not (@eq Z (pos n) OZ))",
                    "sumbool (@eq Z OZ OZ) (not (@eq Z OZ OZ))"
                ],
                "bg_goals": [],
                "eval_score": 0.3,
                "cost": 0.2,
                "f_score": 0.8999999999999999,
                "children": [
                    {
                        "tactic": "destruct n.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    },
                    {
                        "tactic": "destruct n; auto.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            },
            {
                "tactic": "induction x as [| n | n].",
                "fg_goals": [
                    "sumbool (@eq Z (neg n) OZ) (not (@eq Z (neg n) OZ))",
                    "sumbool (@eq Z (pos n) OZ) (not (@eq Z (pos n) OZ))",
                    "sumbool (@eq Z OZ OZ) (not (@eq Z OZ OZ))"
                ],
                "bg_goals": [],
                "eval_score": 0.1,
                "cost": 0.2,
                "f_score": 1.1,
                "children": [
                    {
                        "tactic": "simpl in |- *; auto.",
                        "fg_goals": [
                            "sumbool (@eq Z (neg n) OZ) (not (@eq Z (neg n) OZ))",
                            "sumbool (@eq Z (pos n) OZ) (not (@eq Z (pos n) OZ))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.5,
                        "cost": 0.4,
                        "f_score": 0.9,
                        "children": [
                            {
                                "tactic": "Qed.*",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            },
                            {
                                "tactic": "Qed.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            }
                        ]
                    },
                    {
                        "tactic": "intros; left; reflexivity.",
                        "fg_goals": [
                            "sumbool (@eq Z (neg n) OZ) (not (@eq Z (neg n) OZ))",
                            "sumbool (@eq Z (pos n) OZ) (not (@eq Z (pos n) OZ))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.3,
                        "cost": 0.4,
                        "f_score": 1.1,
                        "children": [
                            {
                                "tactic": "intros; right; unfold not in |- *; intros; discriminate.",
                                "fg_goals": [
                                    "sumbool (@eq Z (neg n) OZ) (not (@eq Z (neg n) OZ))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.7,
                                "cost": 0.6000000000000001,
                                "f_score": 0.9000000000000001,
                                "children": []
                            },
                            {
                                "tactic": "intros; right; unfold not in |- *; simpl in |- *; intros; discriminate.",
                                "fg_goals": [
                                    "sumbool (@eq Z (neg n) OZ) (not (@eq Z (neg n) OZ))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.9,
                                "cost": 0.6000000000000001,
                                "f_score": 0.7000000000000001,
                                "children": [
                                    {
                                        "tactic": "intros; right; unfold not in |- *; simpl in |- *; intros; discriminate H.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "induction x as [| n | n].",
        "intros; left; reflexivity.",
        "intros; right; unfold not in |- *; simpl in |- *; intros; discriminate.",
        "intros; right; unfold not in |- *; simpl in |- *; intros; discriminate H."
    ]
}