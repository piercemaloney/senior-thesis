{
    "json_file_path": "data/UnifySL/MinimunLogic/DeepEmbedded/MinimunLogic.json",
    "query_context_path": "/app/query_data/UnifySL/UnifySL.MinimunLogic.DeepEmbedded.MinimunLogic.txt",
    "state": "SUCCESS",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 9,
    "num_evaluate_queries": 10,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "@MinimunAxiomatization L minL G"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "constructor.",
                "fg_goals": [
                    "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))",
                    "forall x y : @expr L, @Base.provable L G (@impp L minL x (@impp L minL y x))",
                    "forall (x y : @expr L) (_ : @Base.provable L G (@impp L minL x y)) (_ : @Base.provable L G x), @Base.provable L G y"
                ],
                "bg_goals": [],
                "eval_score": 0.8,
                "cost": 0.2,
                "f_score": 0.39999999999999997,
                "children": [
                    {
                        "tactic": "Proof.",
                        "fg_goals": [
                            "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))",
                            "forall x y : @expr L, @Base.provable L G (@impp L minL x (@impp L minL y x))",
                            "forall (x y : @expr L) (_ : @Base.provable L G (@impp L minL x y)) (_ : @Base.provable L G x), @Base.provable L G y"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.2,
                        "cost": 0.4,
                        "f_score": 1.2000000000000002,
                        "children": [
                            {
                                "tactic": "intros x y.",
                                "fg_goals": [
                                    "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))",
                                    "forall x y : @expr L, @Base.provable L G (@impp L minL x (@impp L minL y x))",
                                    "forall (_ : @Base.provable L G (@impp L minL x y)) (_ : @Base.provable L G x), @Base.provable L G y"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.6,
                                "cost": 0.6000000000000001,
                                "f_score": 1.0,
                                "children": [
                                    {
                                        "tactic": "apply modus_ponens.",
                                        "fg_goals": [
                                            "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))",
                                            "forall x y : @expr L, @Base.provable L G (@impp L minL x (@impp L minL y x))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.4,
                                        "cost": 0.8,
                                        "f_score": 1.4,
                                        "children": []
                                    },
                                    {
                                        "tactic": "intros H1 H2.",
                                        "fg_goals": [
                                            "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))",
                                            "forall x y : @expr L, @Base.provable L G (@impp L minL x (@impp L minL y x))",
                                            "@Base.provable L G y"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.7,
                                        "cost": 0.8,
                                        "f_score": 1.1,
                                        "children": [
                                            {
                                                "tactic": "apply H2.",
                                                "fg_goals": [],
                                                "bg_goals": [],
                                                "eval_score": -Infinity,
                                                "cost": 0.0,
                                                "f_score": 0.0,
                                                "children": []
                                            },
                                            {
                                                "tactic": "apply H1.",
                                                "fg_goals": [],
                                                "bg_goals": [],
                                                "eval_score": -Infinity,
                                                "cost": 0.0,
                                                "f_score": 0.0,
                                                "children": []
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "tactic": "Proof.",
                                "fg_goals": [
                                    "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))",
                                    "forall x y : @expr L, @Base.provable L G (@impp L minL x (@impp L minL y x))",
                                    "forall (x y : @expr L) (_ : @Base.provable L G (@impp L minL x y)) (_ : @Base.provable L G x), @Base.provable L G y"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.1,
                                "cost": 0.6000000000000001,
                                "f_score": 1.5,
                                "children": []
                            }
                        ]
                    },
                    {
                        "tactic": "eapply modus_ponens.",
                        "fg_goals": [
                            "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))",
                            "forall x y : @expr L, @Base.provable L G (@impp L minL x (@impp L minL y x))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.2,
                        "cost": 0.4,
                        "f_score": 1.2000000000000002,
                        "children": [
                            {
                                "tactic": "eapply axiom1; eauto.",
                                "fg_goals": [
                                    "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.6,
                                "cost": 0.6000000000000001,
                                "f_score": 1.0,
                                "children": [
                                    {
                                        "tactic": "eapply modus_ponens; eapply axiom2; eauto.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    },
                                    {
                                        "tactic": "eapply modus_ponens.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "eapply axiom1.",
                                "fg_goals": [
                                    "forall x y z : @expr L, @Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.5,
                                "cost": 0.6000000000000001,
                                "f_score": 1.1,
                                "children": [
                                    {
                                        "tactic": "eapply axiom2; eauto.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "tactic": "constructor; intros; try (apply modus_ponens; assumption).",
                "fg_goals": [
                    "@Base.provable L G (@impp L minL (@impp L minL x (@impp L minL y z)) (@impp L minL (@impp L minL x y) (@impp L minL x z)))",
                    "@Base.provable L G (@impp L minL x (@impp L minL y x))",
                    "@Base.provable L G y"
                ],
                "bg_goals": [],
                "eval_score": 0.1,
                "cost": 0.2,
                "f_score": 1.1,
                "children": [
                    {
                        "tactic": "apply axiom1.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    },
                    {
                        "tactic": "apply axiom1; assumption.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "constructor.",
        "eapply modus_ponens.",
        "eapply axiom1.",
        "eapply axiom2; eauto."
    ]
}