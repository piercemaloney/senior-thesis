{
    "json_file_path": "data/demos/Demo.json",
    "query_context_path": "/app/query_data/demos/demos.Demo.txt",
    "state": "SUCCESS",
    "model": "gpt-4",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 4,
    "num_evaluate_queries": 3,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall n m p : nat, @eq nat (Plus n (Plus m p)) (Plus (Plus n m) p)"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros; induction n.",
                "fg_goals": [
                    "@eq nat (Plus (S n) (Plus m p)) (Plus (Plus (S n) m) p)",
                    "@eq nat (Plus O (Plus m p)) (Plus (Plus O m) p)"
                ],
                "bg_goals": [],
                "eval_score": 0.8,
                "cost": 0.2,
                "f_score": 0.39999999999999997,
                "children": [
                    {
                        "tactic": "simpl; reflexivity.",
                        "fg_goals": [
                            "@eq nat (Plus (S n) (Plus m p)) (Plus (Plus (S n) m) p)"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.9,
                        "cost": 0.4,
                        "f_score": 0.5,
                        "children": [
                            {
                                "tactic": "simpl; rewrite IHn.",
                                "fg_goals": [
                                    "@eq nat (S (Plus (Plus n m) p)) (S (Plus (Plus n m) p))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.9,
                                "cost": 0.6000000000000001,
                                "f_score": 0.7000000000000001,
                                "children": [
                                    {
                                        "tactic": "reflexivity.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "tactic": "rewrite Plus_S; apply IHn.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            }
                        ]
                    },
                    {
                        "tactic": "rewrite Plus_S; simpl; rewrite IHn.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            },
            {
                "tactic": "simpl; reflexivity.",
                "fg_goals": [],
                "bg_goals": [],
                "eval_score": -Infinity,
                "cost": 0.0,
                "f_score": 0.0,
                "children": []
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "intros; induction n.",
        "simpl; reflexivity.",
        "simpl; rewrite IHn.",
        "reflexivity."
    ]
}