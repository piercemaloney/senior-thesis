{
    "json_file_path": "data/additions/imperative.json",
    "query_context_path": "/app/query_data/additions/additions.imperative.txt",
    "state": "SUCCESS",
    "model": "llemma-base",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 2,
    "num_evaluate_queries": 1,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (A : Set) (Pre Post : forall _ : A, Prop) (B : Set) (_ : @sig A (fun a : A => Pre a)) (_ : forall (a : A) (_ : Pre a), @sig A (fun a' : A => Post a')) (_ : forall (a : A) (_ : Post a), B), B"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros A Pre Post B start body return_.",
                "fg_goals": [
                    "B"
                ],
                "bg_goals": [],
                "eval_score": 1.0,
                "cost": 0.2,
                "f_score": 0.2,
                "children": [
                    {
                        "tactic": "exact  (match start with  | exist a pre => match body a pre with | exist a' post => return_ a' post end end).",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            },
            {
                "tactic": "intros A Pre Post B start body return.",
                "fg_goals": [],
                "bg_goals": [],
                "eval_score": -Infinity,
                "cost": 0.0,
                "f_score": 0.0,
                "children": []
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "intros A Pre Post B start body return_.",
        "exact  (match start with  | exist a pre => match body a pre with | exist a' post => return_ a' post end end)."
    ]
}