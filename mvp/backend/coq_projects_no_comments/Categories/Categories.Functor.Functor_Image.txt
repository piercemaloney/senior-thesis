From Categories Require Import Essentials.Notations.
From Categories Require Import Essentials.Types.
From Categories Require Import Essentials.Facts_Tactics.
From Categories Require Import Category.Main.
From Categories Require Import Category.Composable_Chain.
From Categories Require Import Functor.Functor.

Section Functor_Image.
  Context {C D : Category}
          (F : (C –≻ D)%functor).

  Local Open Scope morphism_scope.

  Program Definition Functor_Image :=
    SubCategory D
                (fun a => ∃ x, (F _o x)%object = a)
                (
                  fun a b f =>
                    ∃ (ch : Composable_Chain D a b),
                      (Compose_of ch) = f
                      ∧
                      Forall_Links ch (
                                     fun x y g =>
                                     ∃ (c d : Obj) (h : c –≻ d)
                                       (Fca : (F _o c)%object = x)
                                       (Fdb : (F _o d)%object = y),
                                       match Fca in (_ = Z) return Z –≻ _ with
                                         eq_refl =>
                                         match Fdb in (_ = Y) return _ –≻ Y with
                                           eq_refl => (F _a h)%morphism
                                         end
                                       end = g)
                )
                _ _.

  Ltac destr_exists :=
    progress
    (repeat
       match goal with
         [H : ∃ x, _ |- _] =>
         let x := fresh "x" in
         let Hx := fresh "H" x in
         destruct H as [x Hx]
       end).
  
  Next Obligation. 
  Proof.
    destr_exists.
    ElimEq.
    exists (Single (F _a id)); simpl; split; auto.
    do 3 eexists; do 2 exists eq_refl; reflexivity.
  Qed.

  Next Obligation. 
  Proof.
    destr_exists.
    intuition.
    ElimEq.
    match goal with
        [ch1 : Composable_Chain _ ?a ?b, ch2 : Composable_Chain _ ?b ?c|- _] =>
        exists (Chain_Compose ch1 ch2); split
    end.
    rewrite <- Compose_of_Chain_Compose; trivial.
    apply Forall_Links_Chain_Compose; auto.
  Qed.

End Functor_Image.
