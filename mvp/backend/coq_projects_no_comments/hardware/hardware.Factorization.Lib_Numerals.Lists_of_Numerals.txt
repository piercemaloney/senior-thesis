
Require Export Lists_of_lists.
Require Export Numerals.

Section lists_of_numerals.

  Variable BASE : BT.
  Let b := base BASE.
  Let Digit := digit BASE.
  Let Num := num BASE.
  Let Val_bound := val_bound BASE.

  Definition val_first_components (n i : nat)
    (X : list (list Digit (S i)) n) :=
    Val_bound n (list_of_heads Digit i n X).

  Fixpoint list_of_values (n i : nat) {struct i} :
   list (list Digit i) n -> list (inf (exp b n)) i :=
    match
      i as x return (list (list Digit x) n -> list (inf (exp b n)) x)
    with
    | O => fun l : list (list Digit 0) n => nil (inf (exp b n))
    | S p =>
        fun l : list (list Digit (S p)) n =>
        cons (inf (exp b n)) p (val_first_components n p l)
          (list_of_values n p (list_of_tails Digit (S p) n l))
    end.

End lists_of_numerals.