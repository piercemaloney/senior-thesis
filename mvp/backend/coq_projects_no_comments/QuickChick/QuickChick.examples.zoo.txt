From QuickChick Require Import QuickChick Tactics.

Require Import String List. Open Scope string.



From mathcomp Require Import ssreflect ssrfun ssrbool ssrnat eqtype seq.



Import Classes QcDefaultNotation ListNotations.



Inductive Zoo (A : Type) {B : Type}: Type :=

| Zoo1 : A -> Zoo A

| Zoo2 : Zoo A -> Zoo A

| Zoo3 : nat -> A -> B -> Zoo A -> Zoo A -> Zoo A

| Zoo4 : Zoo A.



Derive Arbitrary for Zoo.



Derive Sized for Zoo.



Derive CanonicalSized for Zoo.



Derive SizeMonotonic for Zoo using genSZoo.



Derive SizedMonotonic for Zoo.



Derive SizedCorrect for Zoo using genSZoo and SizeMonotonicZoo.



Definition genZoo {A B : Type} `{H1 : Arbitrary A} `{H2 : Arbitrary B}

           `{H1' : Sized A} `{H2' : Sized B} : G (@Zoo A B) := @arbitrary (@Zoo A B) _.



Definition corrZoo {A B : Type} `{GenMonotonicCorrect A} `{GenMonotonicCorrect B}

            `{CanonicalSized A} `{CanonicalSized B} := @arbitraryCorrect (@Zoo A B) arbitrary _.
