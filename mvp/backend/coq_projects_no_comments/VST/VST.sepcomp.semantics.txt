Require Import compcert.lib.Coqlib.

Require Import compcert.lib.Maps.

Require Import compcert.lib.Integers.

Require Import compcert.lib.Axioms.



Require Import compcert.common.Values.

Require Import compcert.common.Memory.

Require Import compcert.common.Events.

Require Import compcert.common.AST.

Require Import compcert.common.Globalenvs.



Require Import VST.sepcomp.mem_lemmas.



Record CoreSemantics {C M : Type} : Type :=

  { initial_core : nat -> M -> C -> M -> val -> list val -> Prop

  ; at_external : C -> M -> option (external_function * list val)

  ; after_external : option val -> C -> M -> option C

  ; halted : C -> int -> Prop

  ; corestep : C -> M -> C -> M -> Prop

  ; corestep_not_halted:

      forall m q m' q' i, corestep q m q' m' -> ~ halted q i

  ; corestep_not_at_external:

      forall m q m' q', corestep q m q' m' -> at_external q m = None }.



Arguments CoreSemantics : clear implicits.



Inductive mem_step m m' : Prop :=

    mem_step_storebytes: forall b ofs bytes,

       Mem.storebytes m b ofs bytes = Some m' -> mem_step m m'

  | mem_step_alloc: forall lo hi b',

       Mem.alloc m lo hi = (m',b') -> mem_step m m'

  | mem_step_freelist: forall l,

       Mem.free_list m l = Some m' -> mem_step m m'

  

  | mem_step_trans: forall m'',

       mem_step m m'' -> mem_step m'' m' -> mem_step m m'.



Local Notation "a # b" := (PMap.get b a) (at level 1).

Record perm_lesseq (m m': mem):= {

  perm_le_Cur:

    forall b ofs, Mem.perm_order'' ((Mem.mem_access m')#b ofs Cur) ((Mem.mem_access m)#b ofs Cur)

; perm_le_Max:

    forall b ofs, Mem.perm_order'' ((Mem.mem_access m')#b ofs Max) ((Mem.mem_access m)#b ofs Max)

; perm_le_cont:

    forall b ofs, Mem.perm m b ofs Cur Readable ->

     ZMap.get ofs (Mem.mem_contents m') !! b= ZMap.get ofs (Mem.mem_contents m) !! b

; perm_le_nb: Mem.nextblock m = Mem.nextblock m'

}.



Record MemSem {C} :=

  { csem :> @CoreSemantics C mem



  ; corestep_mem : forall c m c' m' (CS: corestep csem c m c' m'), mem_step m m'

  
  }.



Arguments MemSem : clear implicits.

