Require Import VST.sepcomp.semantics.
Require Import VST.sepcomp.semantics_lemmas.
Require Import VST.sepcomp.mem_lemmas.
Require Import VST.veric.Clight_base.
Require Import VST.veric.Clight_new.

Lemma alloc_variables_mem_step: forall cenv vars m e e2 m'
      (M: alloc_variables cenv e m vars e2 m'), mem_step m m'.
Proof. intros.
  induction M.
  apply mem_step_refl.
  eapply mem_step_trans.
    eapply mem_step_alloc; eassumption. eassumption.
Qed.

Lemma bind_parameters_mem_step: forall cenv e m pars vargs m'
      (M: bind_parameters cenv e m pars vargs m'), mem_step m m'.
Proof. intros.
  induction M.
  apply mem_step_refl.
  inv H0.
+ eapply mem_step_trans; try eassumption. simpl in H2.
  eapply mem_step_store; eassumption.
+ eapply mem_step_trans; try eassumption.
  eapply mem_step_storebytes; eassumption.
Qed.
Program Definition CLN_memsem (ge: genv):
  @MemSem  corestate.
apply Build_MemSem with (csem := cl_core_sem ge).
  intros.
  induction CS; try apply mem_step_refl; trivial.
  + destruct H3.
    - simpl in H4.
      eapply mem_step_storebytes.
      apply Mem.store_storebytes; eassumption.
    - eapply mem_step_storebytes; eassumption.
  + eapply alloc_variables_mem_step; eassumption.
  + eapply mem_step_freelist; eassumption.
Defined.

