
Require Import Ensf_types.

Definition first (x : Elt) : Elt :=
  match x return Elt with
  | natural n =>
        zero
       
  | couple a b => a
       
  | up e => zero
       
  | word w => zero
  end.

Definition second (x : Elt) : Elt :=
  match x return Elt with
  | natural n =>
        zero
       
  | couple a b => b
       
  | up e => zero
       
  | word w => zero
  end.

Lemma equal_couple :
 forall x y z t : Elt,
 couple x y = couple z t :>Elt -> x = z :>Elt /\ y = t :>Elt.
intros x y z t H.
injection H; auto.
Qed.

Lemma couple_couple_inv1 :
 forall a b c d : Elt, couple a c = couple b d :>Elt -> a = b :>Elt.
intros a b c d H.
injection H; auto.
Qed.
 
Lemma couple_couple_inv2 :
 forall a b c d : Elt, couple a c = couple b d :>Elt -> c = d :>Elt.
intros a b c d H.
injection H; auto.
Qed.