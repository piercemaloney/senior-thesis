
Set Implicit Arguments.
Unset Strict Implicit.

Section SECTION_1_2.

Require Export vecspaces_verybasic.

Variable F : field.
Variable V : vectorspace F.

Definition VS1 : forall x y : V, x +' y =' y +' x in _.
  exact (ABELIAN_SGROUP_com (S:=V)).
  Qed.

Definition VS2 : forall x y z : V, x +' y +' z =' x +' (y +' z) in _.
  exact (SGROUP_assoc (E:=V)).
  Qed.

Definition VS3 :
  exists zerovector : V, (forall x : V, x +' zerovector =' x in _).
  exists (zero V); auto with algebra.
  Qed.

Definition VS4 : forall x : V, exists y : V, x +' y =' (zero V) in _.
  intro; exists (min x); auto with algebra.
  Qed.

Definition VS5 : forall x : V, one mX x =' x in _.
  intro; exact (MODULE_unit_l x).
  Qed.

Definition VS6 : forall (a b : F) (x : V), (a rX b) mX x =' a mX b mX x in _.
  intros; exact (MODULE_assoc a b x).
  Qed.

Definition VS7 :
  forall (a : F) (x y : V), a mX (x +' y) =' a mX x +' a mX y in _.
  intros; exact (MODULE_dist_l a x y).
  Qed.

Definition VS8 :
  forall (a b : F) (x : V), (a +' b) mX x =' a mX x +' b mX x in _.
  intros; exact (MODULE_dist_r a b x).
  Qed.

Definition Proposition_1_1 :
  forall x y z : V, x +' z =' y +' z in _ -> x =' y in _.
  exact (vector_cancellation (V:=V)).
  Qed.

Definition Proposition_1_2a : forall x : V, (zero F) mX x =' (zero V) in _.
  exact (Zero_times_a_vector_gives_zero (V:=V)).
  Qed.

Definition Proposition_1_2b1 :
  forall (a : F) (x : V), (min a) mX x =' (min a mX x) in _.
  exact (Mince_minus1 (V:=V)).
  Qed.

Definition Proposition_1_2b2 :
  forall (a : F) (x : V), (min a mX x) =' a mX (min x) in _.
  exact (Mince_minus2 (V:=V)).
  Qed.

Definition Proposition_1_2b3 :
  forall (a : F) (x : V), (min a) mX x =' a mX (min x) in _.
  exact (Mince_minus3 (V:=V)).
  Qed.

Definition Proposition_1_2c : forall a : F, a mX (zero V) =' (zero V) in _.
  exact (a_scalar_times_zero_gives_zero V).
  Qed.

End SECTION_1_2.

Section SECTION_1_3.

Require Export subspaces.

Definition Theorem_1_3 :
  forall (F : field) (V : vectorspace F) (Ws : part_set V),
  in_part (zero V) Ws /\
  (forall x y : V, in_part x Ws -> in_part y Ws -> in_part (x +' y) Ws) /\
  (forall (c : F) (x : V), in_part x Ws -> in_part (c mX x) Ws) <->
  (exists W : subspace V, W =' Ws in part_set V).
  exact subspace_alt_characterization.
Qed.

Definition Theorem_1_4 :
  forall (F : field) (V : vectorspace F) (f : part_set (Set_of_subspaces V)),
  is_subspace (intersection (inject_subsets f)).
  exact Set_of_subspaces_closed_under_intersection.
  Qed.

Require Export direct_sum.

End SECTION_1_3.

Section SECTION_1_4.

Require Export lin_combinations.

Require Export spans.

Definition Theorem_1_5a :
  forall (F : field) (V : vectorspace F) (S : part_set V),
  is_subspace (span S).
  exact span_is_subspace.
  Qed.

Definition Theorem_1_5b :
  forall (F : field) (V : vectorspace F) (W : subspace V) (S : part_set V),
  included S W -> included (span S) W.
  exact span_smallest_subspace_containing_subset.
  Qed.

End SECTION_1_4.

Section SECTION_1_5.

Require Export lin_dependence.

Definition Theorem_1_6 :
  forall (F : field) (V : vectorspace F) (S1 S2 : part_set V),
  included S1 S2 -> lin_dep S1 -> lin_dep S2.
  exact lin_dep_include.
  Qed.

Definition Corollary_to_1_6 :
  forall (F : field) (V : vectorspace F) (S1 S2 : part_set V),
  included S1 S2 -> lin_indep S2 -> lin_indep S1.
  exact lin_indep_include.
  Qed.

End SECTION_1_5.

Section SECTION_1_6.

Require Export bases.

Variable F : field.
Variable V : vectorspace F.
Variable x : V.
Variable n : Nat.

Variable b : seq n V.
Variable Hb : distinct b.
Variable Hb2 : is_basis (seq_set b).

Definition Theorem_1_7 :
  forall a a' : seq n F,
  sum (mult_by_scalars a b) =' x in _ ->
  sum (mult_by_scalars a' b) =' x in _ -> a =' a' in _.
  exact (basis_expansion_uniqueness Hb Hb2).
  Qed.

Require Export lin_dep_facts.

Definition Theorem_1_8 :
  forall s : part_set V,
  lin_indep s ->
  ~ in_part x s -> (lin_dep (union s (single x)) <-> in_part x (span s)). 
  intros.
  exact (lin_dep_vs_span_lemma H H0).
  Qed.

Require Export bases_finite_dim.

Definition Theorem_1_9 :
  forall W0 : part_set V,
  is_finite_subset W0 ->
  generates W0 (full V) ->
  exists W : part_set W0, is_basis (inject_subsets W).
  exact (every_finite_generating_set_has_a_subset_that_is_a_basis (V:=V)).
  Qed.

Require Export replacement_theorem.

Definition Theorem_1_10 :
  forall (beta : basis V) (n : Nat),
  has_n_elements n beta ->
  forall Sset : part_set V,
  lin_indep Sset ->
  forall m : Nat,
  m <= n ->
  has_n_elements m Sset ->
  exists S1 : part_set beta,
    has_n_elements (n - m) S1 /\
    generates (union Sset (inject_subsets S1)) (full V).
  exact (replacement_theorem (V:=V)).
  Qed.

Definition Corollary_1_to_1_10 :
  forall (n : Nat) (beta : basis V),
  has_n_elements n beta ->
  forall Sset : part_set V,
  lin_indep Sset -> has_n_elements n Sset -> is_basis Sset.
  exact (finite_bases_always_equally_big (V:=V)).
  Qed.

Definition Corollary_2_to_1_10 :
  forall (n : Nat) (beta : basis V),
  has_n_elements n beta ->
  forall Sset : part_set V,
  has_at_least_n_elements (S n) Sset -> lin_dep Sset.
  exact (finite_basis_bounds_lin_indep_set_size (V:=V)).
  Qed.

Definition Corollary_2_to_1_10_conversely :
  forall (n : Nat) (beta : basis V),
  has_n_elements n beta ->
  forall Sset : part_set V, lin_indep Sset -> has_at_most_n_elements n Sset.
  exact (finite_basis_bounds_lin_indep_set_size' (V:=V)).
  Qed.

Definition Corollary_3_to_1_10 :
  forall (n : Nat) (beta : basis V),
  has_n_elements n beta -> forall Sset : basis V, has_n_elements n Sset.
  exact (all_finite_bases_equally_big (V:=V)).
  Qed.

Definition Corollary_4_to_1_10 :
  forall n : Nat,
  has_dim n V ->
  forall S : part_set V,
  generates S (full V) ->
  has_at_most_n_elements n S -> is_basis S /\ has_n_elements n S.
  exact (dimension_bounds_generating_set_size (V:=V)).
  Qed.

Definition Corollary_5_to_1_10 :
  is_finite_dimensional V ->
  forall (beta : basis V) (Sset : part_set V),
  lin_indep Sset ->
  exists S1 : part_set V, included S1 beta /\ is_basis (union Sset S1).
  exact (every_lin_indep_set_can_be_extended_to_a_basis (V:=V)).
  Qed.

Require Export subspace_dim.
Definition Theorem_1_11 :
  forall (V : findimvecsp F) (W : subspace V),
  sigT (fun m => m <= the_dim V /\ has_dim m W).
  exact (subspace_preserves_findimvecsp (F:=F)).
  Qed.
End SECTION_1_6.

Section SECTION_1_7.
Require Export maxlinindepsubsets.

Require Export maxlinindepsubsets.
Definition Theorem_1_12 :
  forall (F : field) (V : vectorspace F) (W : part_set V),
  generates W (full V) ->
  forall beta : part_set V, max_lin_indep beta W -> is_basis beta.
  exact max_lin_indep_subsets_of_generating_sets_are_bases.
  Qed.

Definition Corollary_to_1_12 :
  forall (F : field) (V : vectorspace F) (beta : part_set V),
  is_basis beta <-> max_lin_indep beta (full V).
  exact basis_iff_max_lin_indep.
  Qed.

Definition Theorem_1_13 :
  forall (F : field) (V : vectorspace F) (W : part_set V),
  lin_indep W ->
  exists W' : part_set V, max_lin_indep W' (full V) /\ included W W'.
  exact max_lin_indep_subset_generated.
  Qed.

Definition Corollary_to_1_13 :
  forall (F : field) (V : vectorspace F),
  exists beta : part_set V, is_basis beta.
  exact every_vecsp_has_a_basis.
  Qed.

End SECTION_1_7.