Require Import VST.floyd.proofauto.
Local Open Scope logic.
Require Import List. Import ListNotations.
Require Import ZArith.
Require Import tweetnacl20140427.tweetNaclBase.
(* tweetnacl20140427.tweetNaclBase:
Require Import Recdef.
Require Import VST.floyd.proofauto.
Local Open Scope logic.
Require Import List. Import ListNotations.
Require Import sha.general_lemmas.

Require Import ZArith.

Lemma Zlength_list_repeat' {A} n (v:A): Zlength (list_repeat n v) = Z.of_nat n.

Lemma Zlength_cons' {A} (a:A) l: Zlength (a::l) = 1 + Zlength l.

Lemma isptrD v: isptr v -> exists b ofs, v = Vptr b ofs.

Lemma firstn_Zlength {A} (l:list A) n: (n <= length l)%nat -> Zlength (firstn n l) = Z.of_nat n.

Lemma skipn_Zlength {A} (l:list A) n: (n <= length l)%nat -> Zlength (skipn n l) = Zlength l - (Z.of_nat n).

Lemma map_cons_inv {A B} (f:A -> B) a l fT:
 (f a:: fT) = map f l -> exists b T, l = b :: T /\ f a = f b /\ fT = map f T.

Lemma inj_le':
  forall n m : nat, (Z.of_nat n <= Z.of_nat m <-> (n <= m)%nat).
Lemma Byte_max_unsigned_Int_max_unsigned: Byte.max_unsigned < Int.max_unsigned.

Lemma force_lengthn_map {A B} (f:A->B) n: forall l d fd,
      fd = f d ->
      force_lengthn n (map f l) fd =
      map f (force_lengthn n l d).
Lemma force_lengthn_mapN {A B} (f:A->B) n: forall l d fd,
      (n < length l)%nat ->
      force_lengthn n (map f l) fd =
      map f (force_lengthn n l d).

Lemma In_force_lengthn {A} d u: forall n l, @In A u (force_lengthn n l d) -> In u l \/ u=d.
Lemma In_force_lengthn_n {A} d u: forall n l (L:(length l >=n)%nat), @In A u (force_lengthn n l d) -> In u l.
Lemma In_skipn {A} (u:A): forall n l, In u (skipn n l) -> In u l.

Lemma nth_force_lengthn':
  forall (A : Type) (n i : nat) (xs : list A) (default d: A) (N: (n < length xs)%nat),
  (0 <= i < n)%nat ->
  @nth A i (@force_lengthn A n xs default) d = @nth A i xs d.

Lemma app_Znth1: forall (A : Type){d: Inhabitant A} (l l' : list A) (n :Z),
           (n < Zlength l) -> Znth n (l ++ l') = Znth n l.

Lemma app_Znth2: forall (A : Type) {d: Inhabitant A}(l l' : list A) (n : Z),
               (Zlength l <= n) -> Znth n (l ++ l') = Znth (n - Zlength l) l'.

Lemma nth_extensional {A}: forall l1 l2 (L:length l1 = length l2) (d:A)
         (N: forall i, (0<=i<length l1)%nat -> nth i l1 d = nth i l2 d), l1=l2.

Lemma Znth_extensional {A} {d: Inhabitant A}(l1 l2 : list A):
       Zlength l1 = Zlength l2 -> 
       (forall i,
        (0 <= i < Zlength l1) -> Znth i l1 = Znth i l2) -> l1 = l2.

Lemma force_lengthn_app1 {A}{d: Inhabitant A}: forall n l1 l2, length l1 =n -> force_lengthn n (l1 ++ l2) d = l1.

Lemma listD16 {A} (l:list A): Zlength l = 16 ->
  exists v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15,
  l = [v0; v1; v2; v3; v4; v5; v6; v7; v8; v9; v10; v11; v12; v13; v14; v15].

Lemma listGE16 {A} (l:list A): 16 <= Zlength l ->
  exists v0 v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 v13 v14 v15 t,
  l = [v0; v1; v2; v3; v4; v5; v6; v7; v8; v9; v10; v11; v12; v13; v14; v15] ++ t
  /\ Zlength t = Zlength l - 16.

Definition bind {A B} (aopt: option A) (f: A -> option B): option B :=
  match aopt with None => None | Some a => f a end.

Section CombineList.
Variable A: Type.
Variable f: A -> A -> A.

Fixpoint combinelist xs ys :=
  match xs, ys with
    nil, nil => Some nil
  | (u::us),(v::vs) => bind (combinelist us vs) (fun l => Some (f u v :: l))
  | _, _ => None
  end.

Lemma combinelist_Zlength: forall xs ys zs,
  combinelist xs ys = Some zs -> Zlength zs = Zlength xs /\ Zlength ys = Zlength xs.

Lemma combinelist_Some: forall xs ys, length xs = length ys ->
      exists l, combinelist xs ys = Some l.

Lemma combinelist_SomeInv: forall xs ys l, combinelist xs ys = Some l ->
      Zlength xs = Zlength ys.

Lemma combinelist_length:
  forall xs ys l, Some l = combinelist xs ys -> length l = length ys.

Lemma combinelist_symm (C: forall a b, f a b = f b a):
      forall xs ys, combinelist xs ys = combinelist ys xs.

Lemma combinelist_char_nth: forall xs ys l, combinelist xs ys = Some l ->
  forall i d, (0 <= i < length l)%nat -> nth i l d = f (nth i xs d) (nth i ys d).

Lemma combinelist_char_Znth {d: Inhabitant A} xs ys l (C: combinelist xs ys = Some l)
      i (L:0 <= i < Zlength l): Znth i l = f (Znth i xs) (Znth i ys).
End CombineList.

Lemma shift_two_8 z:
 match z with
 | 0 => 0
 | Z.pos y' => Z.pos y'~0~0~0~0~0~0~0~0
Lemma shift_two_8_2 z:
  match z with
  | 0 => 0
  | Z.pos y' => Z.pos y'~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0
Lemma shift_two_8_3 z:
  match z with
  | 0 => 0
  | Z.pos y' => Z.pos y'~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0~0

Fixpoint iterShr8 u n :=
  match n with O => u
   | S n' => Int.shru (iterShr8 u n') (Int.repr 8)
  end.

Lemma Znth_mapVint: forall {d: Inhabitant _} l i, 0<=i< Zlength l -> exists x, Znth i (map Vint l) = Vint x.

Lemma app_inj {A}: forall l l'
  (L:Zlength l = Zlength l') (m m':list A) (M: Zlength m = Zlength m'),
  l ++ m = l'++m' -> l=l' /\ m = m'.

Lemma list_eq_dec_app {A} (eq_dec: forall x y : A, {x = y} + {x <> y}):
  forall l m l' m'
  (L:Zlength l = Zlength l') (M: Zlength m = Zlength m'),
  ((if list_eq_dec eq_dec (l++m) (l'++m') then true else false) =
  ((if list_eq_dec eq_dec l l' then true else false) &&
   (if list_eq_dec eq_dec m m' then true else false)))%bool.

Lemma combine_app {A B}: forall (l1:list A) (m1:list B) l2 m2 
  (L:Zlength l1 = Zlength m1) (M: Zlength l2 = Zlength m2),
  combine (l1 ++ l2) (m1 ++ m2) = combine l1 m1 ++ combine l2 m2.

Lemma Byte_zero_ext_8 b: Byte.zero_ext 8 b = b.

Lemma Byte_Int_max_unsigned: Byte.max_unsigned < Int.max_unsigned.

Lemma byte_unsigned_range_int_unsigned_max x: 0 <= Byte.unsigned x <= Int.max_unsigned.

Lemma Zlxor_of_byte_range x y: 0 <= Z.lxor (Byte.unsigned x) (Byte.unsigned y) <= Byte.max_unsigned.

Lemma unsigned_xor_Byte_Int xi yi: Byte.unsigned (Byte.xor xi yi) =

Lemma Z_lxor_byte_neq b1 b2 (B:b1 <> b2): exists b, 
      Z.lxor (Byte.unsigned b1) (Byte.unsigned b2) = Byte.unsigned b /\ b <> Byte.zero.

Lemma Zlor_of_byte_range x y: 0 <= Z.lor (Byte.unsigned x) (Byte.unsigned y) <= Byte.max_unsigned.

Lemma Zlor_Byteor b1 b2: Z.lor (Byte.unsigned b1) (Byte.unsigned b2) = Byte.unsigned (Byte.or b1 b2).

Lemma ByteOr_zero b1 b2 (B: Byte.or b1 b2 = Byte.zero): b1=Byte.zero /\ b2=Byte.zero. *)
Require Import tweetnacl20140427.Salsa20.
(* tweetnacl20140427.Salsa20:
Require Import compcert.lib.Coqlib.
Require Import Coq.Strings.String.
Require Import VST.msl.Extensionality.
Require Import List. Import ListNotations.

Require Import compcert.lib.Integers.
Require Import sha.functional_prog.

Require Import sha.pure_lemmas.
Require Import sha.general_lemmas.

Definition map4 {A B} (f:A -> B) a :=
  match a with (a0, a1, a2, a3) => (f a0, f a1, f a2, f a3) end.

Definition bytelist2Z (l:list byte) : Z :=
  match l with
      [a; b; c; d] => Byte.unsigned d + Byte.unsigned c * 2^8 + Byte.unsigned b * 2^16 + Byte.unsigned a * 2^24
    | _ => 0 end.
Definition hexstring_to_Z s := bytelist2Z (hexstring_to_bytelist s).

Goal Zmod (hexstring_to_Z "c0a8787e"%string +
      hexstring_to_Z "9fd1161d"%string) (2^32)  =
     hexstring_to_Z "60798e9b"%string.

Definition sum (a b:int): int :=
  Int.repr (Zmod (Int.unsigned a + Int.unsigned b) (2^32)).

Lemma sum_add: forall x y, sum x y = Int.add x y.

Lemma sum_zero_r a: sum a Int.zero = a.

Lemma sum_sym a b: sum a b = sum b a.

Lemma sum_zero_l a: sum Int.zero a = a.

Definition x2i s : int := Int.repr (hexstring_to_Z s).

Goal sum (x2i "c0a8787e"%string)
         (x2i "9fd1161d"%string) =
     x2i "60798e9b"%string.

Goal Int.xor (x2i "c0a8787e"%string)

Definition QuadWord:Type := (int * int * int * int)%type.

Definition quarterround (y:QuadWord): QuadWord :=
  match y with (y0, y1, y2, y3) =>
    let z1 := Int.xor y1 (Int.rol (sum y0 y3) (Int.repr 7)) in
    let z2 := Int.xor y2 (Int.rol (sum y0 z1) (Int.repr 9)) in
    let z3 := Int.xor y3 (Int.rol (sum z1 z2) (Int.repr 13)) in
    let z0 := Int.xor y0 (Int.rol (sum z2 z3) (Int.repr 18))
    in (z0, z1, z2, z3)
  end.

Definition quarterround_old (y:QuadWord): QuadWord :=
  match y with (y0, y1, y2, y3) =>
    let z1 := Int.xor y1 (Int.rol (sum y0 y3) (Int.repr 7)) in
    let z2 := Int.xor y2 (Int.rol (sum z1 y0) (Int.repr 9)) in
    let z3 := Int.xor y3 (Int.rol (sum z2 z1) (Int.repr 13)) in
    let z0 := Int.xor y0 (Int.rol (sum z3 z2) (Int.repr 18))
    in (z0, z1, z2, z3)
  end.
Lemma QR y: quarterround y = quarterround_old y.

Definition zeroHex := x2i "00000000".

Goal quarterround (Int.zero, Int.zero, Int.zero, Int.zero) =

Goal quarterround (map4 x2i ("d3917c5b", "55f1c407", "52a58a7a", "8f887a3b")%string) =
     map4 x2i ("3e2f308c", "d90a8f36", "6ab2a923", "2883524c")%string. reflexivity. Qed.

Definition SixteenWord:Type := (QuadWord * QuadWord * QuadWord * QuadWord)%type.

Definition rowround(y: SixteenWord) : SixteenWord :=
  match y with
    ((y0, y1, y2, y3), (y4, y5, y6, y7), (y8, y9, y10, y11), (y12, y13, y14, y15)) =>
  match quarterround(y0, y1, y2, y3) with (z0, z1, z2, z3) =>
  match quarterround(y5, y6, y7, y4) with (z5, z6, z7, z4) =>
  match quarterround(y10, y11, y8, y9) with (z10, z11, z8, z9) =>
  match quarterround(y15, y12, y13, y14) with (z15, z12, z13, z14) =>
  ((z0, z1, z2, z3), (z4, z5, z6, z7), (z8, z9, z10, z11), (z12, z13, z14, z15))
  end end end end end.

Goal rowround (map4 x2i ("08521bd6", "1fe88837", "bb2aa576", "3aa26365"),
               map4 x2i ("c54c6a5b", "2fc74c2f", "6dd39cc3", "da0a64f6"),
               map4 x2i ("90a2f23d", "067f95a6", "06b35f61", "41e4732e"),
               map4 x2i ("e859c100", "ea4d84b7", "0f619bff", "bc6e965a"))%string =
      (map4 x2i ("a890d39d", "65d71596", "e9487daa", "c8ca6a86"),
       map4 x2i ("949d2192", "764b7754", "e408d9b9", "7a41b4d1"),
       map4 x2i ("3402e183", "3c3af432", "50669f96", "d89ef0a8"),
       map4 x2i ("0040ede5", "b545fbce", "d257ed4f", "1818882d"))%string.

Definition columnround(x: SixteenWord) : SixteenWord :=
  match x with
    ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15)) =>
  match quarterround(x0, x4, x8, x12) with (y0, y4, y8, y12) =>
  match quarterround(x5, x9, x13, x1) with (y5, y9, y13, y1) =>
  match quarterround(x10, x14, x2, x6) with (y10, y14, y2, y6) =>
  match quarterround(x15, x3, x7, x11) with (y15, y3, y7, y11) =>
  ((y0, y1, y2, y3), (y4, y5, y6, y7), (y8, y9, y10, y11), (y12, y13, y14, y15))
  end end end end end.

Lemma columnround_rowround: forall x,
  match columnround x with
     ((y0, y1, y2, y3), (y4, y5, y6, y7), (y8, y9, y10, y11), (y12, y13, y14, y15)) =>
  match x with
    ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15)) =>
  ((y0, y4, y8, y12), (y1, y5, y9, y13), (y2, y6, y10, y14), (y3, y7, y11, y15))
  =
  rowround ((x0, x4, x8, x12), (x1, x5, x9, x13), (x2, x6, x10, x14), (x3, x7, x11, x15))
  end end.

Goal columnround
       (map4 x2i ("08521bd6", "1fe88837", "bb2aa576", "3aa26365"),
        map4 x2i ("c54c6a5b", "2fc74c2f", "6dd39cc3", "da0a64f6"),
        map4 x2i ("90a2f23d", "067f95a6", "06b35f61", "41e4732e"),
        map4 x2i ("e859c100", "ea4d84b7", "0f619bff", "bc6e965a"))%string =
     (map4 x2i ("8c9d190a", "ce8e4c90", "1ef8e9d3", "1326a71a"),
      map4 x2i ("90a20123", "ead3c4f3", "63a091a0", "f0708d69"),
      map4 x2i ("789b010c", "d195a681", "eb7d5504", "a774135c"),
      map4 x2i ("481c2027", "53a8e4b5", "4c1f89c5", "3f78c9c8"))%string.

Definition doubleround(x: SixteenWord) : SixteenWord :=
  rowround(columnround(x)).

Goal doubleround
        (map4 x2i ("de501066", "6f9eb8f7", "e4fbbd9b", "454e3f57"),
         map4 x2i ("b75540d3", "43e93a4c", "3a6f2aa0", "726d6b36"),
         map4 x2i ("9243f484", "9145d1e8", "4fa9d247", "dc8dee11"),
         map4 x2i ("054bf545", "254dd653", "d9421b6d", "67b276c1"))%string
      = (map4 x2i ("ccaaf672", "23d960f7", "9153e63a", "cd9a60d0"),
         map4 x2i ("50440492", "f07cad19", "ae344aa0", "df4cfdfc"),
         map4 x2i ("ca531c29", "8e7943db", "ac1680cd", "d503ca00"),
         map4 x2i ("a74b2ad6", "bc331c5c", "1dda24c7", "ee928277"))%string.

Definition QuadByte:Type := (byte * byte * byte * byte)%type.
Definition littleendian (b:QuadByte): int :=
  match b with (b0, b1, b2, b3) =>
  Int.repr
   (Byte.unsigned b0 + 2^8 * Byte.unsigned b1 +
         2^16 * Byte.unsigned b2 + 2^24 * Byte.unsigned b3)
  end.

Goal littleendian (Byte.zero, Byte.zero, Byte.zero, Byte.zero) = x2i "00000000".

Goal littleendian (Byte.repr 86, Byte.repr 75, Byte.repr 30, Byte.repr 9) =

Goal littleendian (Byte.repr 255, Byte.repr 255, Byte.repr 255, Byte.repr 250) =

Definition littleendian_invert (w:int) : QuadByte :=
  let b3 := Int.unsigned w / (2^24) in
    let w2 := Z.modulo (Int.unsigned w) (2^24) in
  let b2 := w2 / (2^16) in
    let w1 := Z.modulo w2 (2^16) in
  let b1 := w1 / (2^8) in
  (Byte.repr (Z.modulo w1 (2^8)),
   Byte.repr b1,
    Byte.repr b2, Byte.repr b3).

Goal littleendian_invert (x2i "faffffff") =
     (Byte.repr 255, Byte.repr 255, Byte.repr 255, Byte.repr 250).

Definition SixtyFourByte:Type :=
 (QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte *
  QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte)%type.

Fixpoint rounds n (x: SixteenWord) : SixteenWord :=
  match n with O => x
   | S k => rounds k (doubleround x)
  end.

Definition map16 {A B} (f:A -> B) a :=
  match a with (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,a14, a15) =>
     (f a0, f a1, f a2, f a3, f a4, f a5, f a6, f a7, f a8, f a9, f a10, f a11, f a12, f a13, f a14, f a15)
  end.

Definition Salsa20r (n:nat) (x:SixtyFourByte):SixtyFourByte :=
  match map16 littleendian x with
     ( x0,  x1, x2,  x3,  x4,  x5,  x6,  x7,
       x8,  x9, x10, x11, x12, x13, x14, x15) =>
    match rounds n
       ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15))
    with ((z0,  z1,  z2,  z3), (z4,  z5,  z6, z7),
          (z8,  z9, z10, z11), (z12, z13, z14, z15))
    => map16 littleendian_invert
        (sum z0 x0, sum z1 x1, sum z2 x2, sum z3 x3,
         sum z4 x4, sum z5 x5, sum z6 x6, sum z7 x7,
         sum z8 x8, sum z9 x9, sum z10 x10, sum z11 x11,
         sum z12 x12, sum z13 x13, sum z14 x14, sum z15 x15)
     end
  end.

Definition Salsa20 (x:SixtyFourByte):SixtyFourByte :=
  match map16 littleendian x with
     ( x0,  x1,  x2,  x3,  x4,  x5,  x6,  x7,
       x8,  x9,  x10, x11, x12, x13, x14, x15) =>
    match
       doubleround (doubleround (doubleround (doubleround (doubleround (
       doubleround (doubleround (doubleround (doubleround (doubleround (
       (x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15)))))))))))
    with ((z0,  z1,  z2,  z3), (z4,  z5,  z6, z7),
          (z8,  z9, z10, z11), (z12, z13, z14, z15))
    => map16 littleendian_invert
        (sum z0 x0, sum z1 x1, sum z2 x2, sum z3 x3,
         sum z4 x4, sum z5 x5, sum z6 x6, sum z7 x7,
         sum z8 x8, sum z9 x9, sum z10 x10, sum z11 x11,
         sum z12 x12, sum z13 x13, sum z14 x14, sum z15 x15)
     end
  end.

Goal Salsa20
   ((Byte.repr 211, Byte.repr 159, Byte.repr  13, Byte.repr 115), (Byte.repr  76, Byte.repr  55, Byte.repr  82, Byte.repr 183), (Byte.repr  3, Byte.repr 117, Byte.repr 222, Byte.repr  37), (Byte.repr 191, Byte.repr 187, Byte.repr 234, Byte.repr 136),

Goal Salsa20
   ((Byte.repr 88, Byte.repr 118, Byte.repr 104, Byte.repr  54), (Byte.repr  79, Byte.repr 201, Byte.repr 235, Byte.repr  79), (Byte.repr  3, Byte.repr  81, Byte.repr 156, Byte.repr  47), (Byte.repr 203, Byte.repr  26, Byte.repr 244, Byte.repr 243),

Definition Sigma0:QuadByte := (Byte.repr 101, Byte.repr 120, Byte.repr 112, Byte.repr 97).
Definition Sigma1:QuadByte := (Byte.repr 110, Byte.repr 100, Byte.repr 32, Byte.repr 51).
Definition Sigma2:QuadByte := (Byte.repr 50, Byte.repr 45, Byte.repr 98, Byte.repr 121).
Definition Sigma3:QuadByte := (Byte.repr 116, Byte.repr 101, Byte.repr 32, Byte.repr 107).

Definition Salsa20K0K1 (k0 k1 n:  QuadByte * QuadByte * QuadByte * QuadByte):SixtyFourByte :=
  match k0 with (a, b, c, d) =>
  match k1 with (e, f, g, h) =>
  match n with (i, j, k, l) =>
  Salsa20 (Sigma0, a, b, c, d, Sigma1, i, j, k, l, Sigma2, e, f, g, h, Sigma3)
  end end end.

Definition Tau0:QuadByte := (Byte.repr 101, Byte.repr 120, Byte.repr 112, Byte.repr 97).
Definition Tau1:QuadByte := (Byte.repr 110, Byte.repr 100, Byte.repr 32, Byte.repr 49).
Definition Tau2:QuadByte := (Byte.repr 54, Byte.repr 45, Byte.repr 98, Byte.repr 121).
Definition Tau3:QuadByte := (Byte.repr 116, Byte.repr 101, Byte.repr 32, Byte.repr 107).

Definition Salsa20K (k n:  QuadByte * QuadByte * QuadByte * QuadByte):SixtyFourByte :=
  match k with (a, b, c, d) =>
  match n with (i, j, k, l) =>
  Salsa20 (Tau0, a, b, c, d, Tau1, i, j, k, l, Tau2, a, b, c, d, Tau3)
  end end.

Definition K0 : QuadByte * QuadByte * QuadByte * QuadByte :=
  ((Byte.repr 1, Byte.repr 2, Byte.repr 3, Byte.repr 4),
   (Byte.repr 5, Byte.repr 6, Byte.repr 7, Byte.repr 8),
   (Byte.repr 9, Byte.repr 10, Byte.repr 11, Byte.repr 12),
   (Byte.repr 13, Byte.repr 14, Byte.repr 15, Byte.repr 16)).

Definition K1 : QuadByte * QuadByte * QuadByte * QuadByte :=
  ((Byte.repr 201, Byte.repr 202, Byte.repr 203, Byte.repr 204),
   (Byte.repr 205, Byte.repr 206, Byte.repr 207, Byte.repr 208),
   (Byte.repr 209, Byte.repr 210, Byte.repr 211, Byte.repr 212),
   (Byte.repr 213, Byte.repr 214, Byte.repr 215, Byte.repr 216)).

Definition n : QuadByte * QuadByte * QuadByte * QuadByte :=
  ((Byte.repr 101, Byte.repr 102, Byte.repr 103, Byte.repr 104),
   (Byte.repr 105, Byte.repr 106, Byte.repr 107, Byte.repr 108),
   (Byte.repr 109, Byte.repr 110, Byte.repr 111, Byte.repr 112),
   (Byte.repr 113, Byte.repr 114, Byte.repr 115, Byte.repr 116)).

Goal Salsa20K0K1 K0 K1 n =
  ((Byte.repr 69, Byte.repr  37, Byte.repr  68, Byte.repr  39), (Byte.repr  41, Byte.repr  15, Byte.repr 107, Byte.repr 193), (Byte.repr 255, Byte.repr 139, Byte.repr 122, Byte.repr  6), (Byte.repr 170, Byte.repr 233, Byte.repr 217, Byte.repr  98),

Goal Salsa20K K0 n =
  ((Byte.repr 39, Byte.repr 173, Byte.repr  46, Byte.repr 248), (Byte.repr  30, Byte.repr 200, Byte.repr  82, Byte.repr  17), (Byte.repr  48, Byte.repr  67, Byte.repr 254, Byte.repr 239), (Byte.repr  37, Byte.repr  18, Byte.repr  13, Byte.repr 247),

Goal SHA256.str_to_bytes "expand 32-byte k" =

Goal SHA256.str_to_bytes "expand 16-byte k" =

Definition ThirtyTwoByte:Type :=
 (QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte)%type.

Definition SixteenByte:Type := (QuadByte * QuadByte * QuadByte * QuadByte)%type.
Definition Salsa20_constant : QuadWord :=
 (x2i "61707865", x2i "3320646e", x2i "79622d32", x2i "6b206574").

Definition HSalsa20_k_n_2r (r:nat) (k:ThirtyTwoByte) (nonce:SixteenByte):SixteenWord :=
  match k with (q1, q2, q3, q4, q11, q12, q13, q14) =>
  match nonce with (q6, q7, q8, q9) =>
    let x1 := littleendian q1 in
    let x2 := littleendian q2 in
    let x3 := littleendian q3 in
    let x4 := littleendian q4 in
    let x6 := littleendian q6 in
    let x7 := littleendian q7 in
    let x8 := littleendian q8 in
    let x9 := littleendian q9 in
    let x11 := littleendian q11 in
    let x12 := littleendian q12 in
    let x13 := littleendian q13 in
    let x14 := littleendian q14 in
  match Salsa20_constant with (x0, x5, x10, x15) =>
    rounds r
       ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15))
  end end end.

Definition HSalsa20 (r:nat) (k:ThirtyTwoByte) (nonce:SixteenByte):ThirtyTwoByte :=
  match HSalsa20_k_n_2r r k nonce
    with ((z0,  z1,  z2,  z3), (z4,  z5,  z6, z7),
          (z8,  z9, z10, z11), (z12, z13, z14, z15))
    => (littleendian_invert z0,
         littleendian_invert z5,
         littleendian_invert z10,
         littleendian_invert z15,
         littleendian_invert z6,
         littleendian_invert z7,
         littleendian_invert z8,
         littleendian_invert z9)
     end.
Definition HSalsa20_k_n_2r' (r:nat) (k:ThirtyTwoByte) (nonce:SixteenByte):SixtyFourByte:=
  match k with (q1, q2, q3, q4, q11, q12, q13, q14) =>
  match nonce with (q6, q7, q8, q9) =>
    let x1 := littleendian q1 in
    let x2 := littleendian q2 in
    let x3 := littleendian q3 in
    let x4 := littleendian q4 in
    let x6 := littleendian q6 in
    let x7 := littleendian q7 in
    let x8 := littleendian q8 in
    let x9 := littleendian q9 in
    let x11 := littleendian q11 in
    let x12 := littleendian q12 in
    let x13 := littleendian q13 in
    let x14 := littleendian q14 in
  match Salsa20_constant with (x0, x5, x10, x15) =>
  match rounds r
       ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15))
  with ((w0, w1, w2, w3), (w4, w5, w6, w7), (w8, w9, w10, w11), (w12, w13, w14, w15)) =>
     map16 littleendian_invert (w0, w1, w2, w3, w4, w5, w6, w7,
                               w8, w9, w10, w11, w12, w13, w14, w15)
  end end end end.

Definition TwentyFourByte:Type := (QuadByte * QuadByte * QuadByte * QuadByte * QuadByte * QuadByte)%type.
Definition EightByte:Type := (QuadByte * QuadByte)%type.

Definition XSalsa20_k_n_cntr_2r (r:nat) (k:ThirtyTwoByte) (nonce:TwentyFourByte)(cntr:EightByte)
  :SixteenWord :=
  match k with (q1, q2, q3, q4, q11, q12, q13, q14) =>
  match nonce with (q6, q7, q8, q9, x6', x7') =>
    let x1 := littleendian q1 in
    let x2 := littleendian q2 in
    let x3 := littleendian q3 in
    let x4 := littleendian q4 in
    let x6 := littleendian q6 in
    let x7 := littleendian q7 in
    let x8 := littleendian q8 in
    let x9 := littleendian q9 in
    let x11 := littleendian q11 in
    let x12 := littleendian q12 in
    let x13 := littleendian q13 in
    let x14 := littleendian q14 in
  match Salsa20_constant with (x0, x5, x10, x15) =>
  match rounds r
       ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15))
  with ((z0,  z1,  z2,  z3), (z4,  z5,  z6, z7),
        (z8,  z9, z10, z11), (z12, z13, z14, z15)) =>
  match cntr with (x8', x9') =>
       ((x0, z0, z5, z10),
        (z15, x5, littleendian x6', littleendian x7'),
        (littleendian x8', littleendian x9', x10, z6),
        (z7, z8, z9, x15))
  end end end end end.

Definition XSalsa20 (r:nat) (k:ThirtyTwoByte) (nonce:TwentyFourByte)(cntr:EightByte)
  :SixtyFourByte :=
  match XSalsa20_k_n_cntr_2r r k nonce cntr with
   ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15))
  =>
  match rounds r ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15))

  with ((z0,  z1,  z2,  z3), (z4,  z5,  z6, z7),
        (z8,  z9, z10, z11), (z12, z13, z14, z15))
    => map16 littleendian_invert (sum z0 x0, sum z1 x1,sum z2 x2 ,sum z3 x3,
                             sum z4 x4, sum z5 x5, sum z6 x6, sum z7 x7,
                             sum z8 x8, sum z9 x9, sum z10 x10, sum z11 x11,
                             sum z12 x12, sum z13 x13, sum z14 x14, sum z15 x15)
     end
  end.

Definition XSalsa20_k_n_cntr_2r' (r:nat) (k:ThirtyTwoByte) (nonce:TwentyFourByte)(cntr:EightByte)
  :SixtyFourByte :=
  match k with (q1, q2, q3, q4, q11, q12, q13, q14) =>
  match nonce with (q6, q7, q8, q9, x6', x7') =>
    let x1 := littleendian q1 in
    let x2 := littleendian q2 in
    let x3 := littleendian q3 in
    let x4 := littleendian q4 in
    let x6 := littleendian q6 in
    let x7 := littleendian q7 in
    let x8 := littleendian q8 in
    let x9 := littleendian q9 in
    let x11 := littleendian q11 in
    let x12 := littleendian q12 in
    let x13 := littleendian q13 in
    let x14 := littleendian q14 in
  match Salsa20_constant with (x0, x5, x10, x15) =>
  match rounds r
       ((x0, x1, x2, x3), (x4, x5, x6, x7), (x8, x9, x10, x11), (x12, x13, x14, x15))
  with ((z0,  z1,  z2,  z3), (z4,  z5,  z6, z7),
        (z8,  z9, z10, z11), (z12, z13, z14, z15)) =>
  match cntr with (x8', x9') =>
       (littleendian_invert x0, littleendian_invert z0, littleendian_invert z5, littleendian_invert z10,
        littleendian_invert z15, littleendian_invert x5, x6', x7',
        x8', x9', littleendian_invert x10, littleendian_invert z6,
        littleendian_invert z7, littleendian_invert z8, littleendian_invert z9, littleendian_invert x15)
  end end end end end.

Lemma littleendian_inv b:
  littleendian_invert (littleendian b) = b.

Lemma inv_littleendian b:
  littleendian (littleendian_invert b) = b.

Lemma littleendian_inv_iff q i:
    littleendian i = q <-> littleendian_invert q = i.

Module Type GeneralizedCascade.
  Parameter K1 : Type. 
  Parameter I1 : Type.
  Parameter K2 : Type. 
  Parameter H: K1 -> I1 -> K2.
  Parameter I2 : Type.
  Parameter L : Type.
  Parameter S : K2 -> I2 -> L.
  Parameter X : K1 -> I1 -> I2 -> L.
  Parameter X_char : forall k1 i1 i2, X k1 i1 i2 = S (H k1 i1) i2.
End GeneralizedCascade.

Module SalsaGeneralizedCascade <: GeneralizedCascade.
  Definition K1:Type := ThirtyTwoByte.
  Definition I1:Type := SixteenByte.
  Definition K2:Type := ThirtyTwoByte.
  Definition H: K1 -> I1 -> K2 := HSalsa20 10.
  Definition I2:Type := SixteenByte.
  Definition L:Type := SixtyFourByte.
  Definition X (k1:K1) (i1: I1) (i2: I2): L :=
    match i1 with (((x, y), z), u) =>
    match i2 with (((a, b), c), d) =>
       XSalsa20 10 k1 (x, y, z, u, a, b) (c, d)
    end end.

  Definition S (k: K2) (i: I2) : L :=
    match k with (((((((k0, k1), k2), k3), k4), k5), k6), k7) =>
     Salsa20K0K1 (((k0, k1), k2), k3) (((k4, k5), k6), k7) i
    end.

  Lemma X_char k1 i1 i2: X k1 i1 i2 = S (H k1 i1) i2.
End SalsaGeneralizedCascade.
Check SalsaGeneralizedCascade.X_char. *)
Require Import tweetnacl20140427.verif_salsa_base.
(* tweetnacl20140427.verif_salsa_base:
Lemma data_at_ext sh t v v' p: v=v' -> data_at sh t v p |-- data_at sh t v' p.

Definition QuadByte2ByteList (B:QuadByte) : list byte :=
  match B with (b0, b1, b2, b3) => [b0; b1; b2; b3]
  end.

Definition QuadByte2ValList (B:QuadByte) : list val :=
   map Vint (map Int.repr (map Byte.unsigned (QuadByte2ByteList B))).

Lemma QuadByteValList_length q: length (QuadByte2ValList q) = 4%nat.

Definition EightByte (q:QuadByte * QuadByte) (v:val) : mpred :=
  match q with (q1, q2) =>
    data_at Tsh (Tarray tuchar 8 noattr) ((QuadByte2ValList q1) ++ (QuadByte2ValList q2)) v
  end.

Definition SixteenByte2ByteList (B:SixteenByte) : list byte :=
  match B with (q0, q1, q2, q3) =>
   QuadByte2ByteList q0 ++ QuadByte2ByteList q1 ++ QuadByte2ByteList q2 ++ QuadByte2ByteList q3
  end.

Definition SixteenByte2ValList (B:SixteenByte) : list val :=
   map Vint (map Int.repr (map Byte.unsigned (SixteenByte2ByteList B))).

Lemma SixteenByte2ValList_char B: SixteenByte2ValList B =
  match B with (q0, q1, q2, q3) =>
   QuadByte2ValList q0 ++ QuadByte2ValList q1 ++ QuadByte2ValList q2 ++ QuadByte2ValList q3
  end.

Definition ThirtyTwoByte (q:SixteenByte * SixteenByte) (v:val) : mpred :=
  match q with (q1, q2) =>
    @data_at CompSpecs Tsh (Tarray tuchar 32 noattr) ((SixteenByte2ValList q1) ++ (SixteenByte2ValList q2)) v
  end.

Definition QByte (q:QuadByte) (v:val) : mpred :=
  data_at Tsh (Tarray tuchar 4 noattr) (QuadByte2ValList q) v.

Definition QuadChunks2ValList (l: list QuadByte) : list val :=
  List.fold_right (fun q vals => QuadByte2ValList q ++ vals) nil l.

Definition flatten16 (B:SixteenByte) : list QuadByte :=
  match B with (q0, q1, q2, q3) => [q0; q1; q2; q3] end.
Lemma SixteenByte2ValList_flatten B:
  QuadChunks2ValList (flatten16 B) = SixteenByte2ValList B.

Lemma QuadByteByteList_ZLength q: 4 = Zlength (QuadByte2ByteList q).
Lemma QuadByteValList_ZLength q: 4 = Zlength (QuadByte2ValList q).

Lemma SixteenByte2ValList_Zlength C: 16 = Zlength (SixteenByte2ValList C).

Definition SByte (q:SixteenByte) (v:val) : mpred :=
  @data_at CompSpecs Tsh (Tarray tuchar 16 noattr) (SixteenByte2ValList q) v.

Lemma ThirtyTwoByte_split16 q v:
  field_compatible (Tarray tuchar 32 noattr) [] v ->
  ThirtyTwoByte q v =
  (SByte (fst q) v * SByte (snd q) (offset_val 16 v))%logic.

Lemma QuadByte2ValList_firstn4 q l:
         firstn 4 (QuadByte2ValList q ++ l) = QuadByte2ValList q.

Lemma QuadByte2ValList_skipn4 q l:
         skipn 4 (QuadByte2ValList q ++ l) = l.

Definition Select16Q (Q:SixteenByte) i :QuadByte :=
  match Q with (((b0, b1), b2), b3) =>
    if zeq i 0 then b0 else
    if zeq i 1 then b1 else
    if zeq i 2 then b2 else b3
  end.
Definition UnSelect16Q (Q:SixteenByte) i : list QuadByte :=
  match Q with (((b0, b1), b2), b3) =>
    if zeq i 0 then [b1;b2;b3] else
    if zeq i 1 then [b0;b2;b3] else
    if zeq i 2 then [b0;b1;b3] else [b0;b1;b2]
  end.
Definition SplitSelect16Q (Q:SixteenByte) i : (list QuadByte * list QuadByte) :=
  match Q with (((b0, b1), b2), b3) =>
    if zeq i 0 then ([], [b1;b2;b3]) else
    if zeq i 1 then ([b0], [b2;b3]) else
    if zeq i 2 then ([b0;b1], [b3]) else ([b0;b1;b2], [])
  end.
Lemma Select_SplitSelect16Q Q i front back:
    (front, back) = SplitSelect16Q Q i ->
    SixteenByte2ValList Q =
    QuadChunks2ValList front ++ QuadChunks2ValList [Select16Q Q i] ++ QuadChunks2ValList back.

Lemma QuadChunk2ValList_ZLength: forall l, Zlength (QuadChunks2ValList l) = (4 * Zlength l)%Z.

Lemma Select_SplitSelect16Q_Zlength Q i front back:
    (front, back) = SplitSelect16Q Q i -> 0<= i < 4 ->
    Zlength front = i /\ Zlength back = 3-i.

Definition QBytes (l:list QuadByte) (v:val) : mpred :=
  data_at Tsh (Tarray tuchar (4*Zlength l) noattr) (QuadChunks2ValList l) v.

Lemma QBytes16 s: SByte s = QBytes (flatten16 s).

Definition QuadWordRep (q:QuadWord):list val :=
  match q with (q0, q1, q2, q3) => map Vint [q0;q1;q2;q3] end.
Definition SixteenWordRep (w:SixteenWord):list val :=
  match w with (q0, q1, q2, q3) => QuadWordRep q0 ++ QuadWordRep q1 ++ QuadWordRep q2 ++ QuadWordRep q3 end.

Definition littleendian_of_SixteenByte (x:SixteenByte): QuadWord :=
  match x with (q0, q1, q2, q3) => (littleendian q0, littleendian q1, littleendian q2, littleendian q3) end.

     Lemma QuadWR_length q: length (QuadWordRep q) = 4%nat.
     Lemma QuadWR_zlength q: Zlength (QuadWordRep q) = 4.
     Lemma SixteenWR_length s: length (SixteenWordRep s) = 16%nat.
     Lemma SixteenWR_zlength s: Zlength (SixteenWordRep s) = 16.

Lemma QuadWR_int q i: (0<=i<4)%nat -> exists ii, nth i (QuadWordRep q) Vundef = Vint ii.

Lemma SixteenWR_int s i: (0<=i<16)%nat -> exists ii, nth i (SixteenWordRep s) Vundef = Vint ii.

Lemma SixteenWR_Znth_int i s: (0 <= i < 16) ->
       exists ii : int, Znth i (SixteenWordRep s) = Vint ii.

Lemma QuadWR_Z_int: forall (q : QuadWord) (i : Z),
               0 <= i < 4 -> exists ii : int, Znth i (QuadWordRep q) = Vint ii.

Lemma SixteenWordRep_MapVint ss: exists l, SixteenWordRep ss = map Vint l.

Definition QuadWordRepI (q : QuadWord) :=
  match q with (q0, q1, q2, q3) => [q0; q1; q2; q3] end.
Lemma QuadWordRepI_QuadWordRep q: QuadWordRep q = map Vint  (QuadWordRepI q).

Definition SixteenWordRepI (w : SixteenWord) :=
  match w with (q0, q1, q2, q3) =>
    QuadWordRepI q0 ++ QuadWordRepI q1 ++ QuadWordRepI q2 ++ QuadWordRepI q3
  end.
Lemma SixteenWordRepI_SixteenWordRep w: SixteenWordRep w = map Vint (SixteenWordRepI w).

    Lemma QuadWordRepI_length s: length (QuadWordRepI s) = 4%nat.
    Lemma SixteenWordRepI_length s: length (SixteenWordRepI s) = 16%nat.

Lemma QuadByte2ValList_bytes q: exists bytes, length bytes = 4%nat /\
      QuadByte2ValList q = map Vint (map Int.repr (map Byte.unsigned bytes)).

Lemma SixteenByte2ValList_bytes N: exists bytes, length bytes = 16%nat /\
      SixteenByte2ValList N =  map Vint (map Int.repr (map Byte.unsigned bytes)).

Lemma QuadByte2ValList_ints q: exists ints, length ints = 4%nat /\
      QuadByte2ValList q = map Vint ints.

Lemma SixteenByte2ValList_ints N: exists ints, length ints = 16%nat /\
      SixteenByte2ValList N = map Vint ints.

Lemma QuadChunks2ValList_bytes: forall l,
        exists bytes, length bytes = (4*length l)%nat /\
        QuadChunks2ValList l = map Vint (map Int.repr (map Byte.unsigned bytes)).

Fixpoint upd_upto (x: SixteenByte * SixteenByte * (SixteenByte * SixteenByte)) i (l:list val):list val :=
  match i with
    O => l
  | S n =>
     match x with (Nonce, C, (Key1, Key2)) =>
     ((upd_Znth (11 + (Z.of_nat n))
     (upd_Znth(6 + (Z.of_nat n))
        (upd_Znth (1 + (Z.of_nat n))
           (upd_Znth (5 * (Z.of_nat n)) (upd_upto x n l)
              (Vint (littleendian (Select16Q C (Z.of_nat n)))))
           (Vint (littleendian (Select16Q Key1 (Z.of_nat n)))))
        (Vint (littleendian (Select16Q Nonce (Z.of_nat n)))))
     (Vint (littleendian (Select16Q Key2 (Z.of_nat n))))))
     end
  end.

Lemma upd_upto_Sn Nonce C Key1 Key2 n l: upd_upto (Nonce, C, (Key1, Key2)) (S n) l =
     ((upd_Znth (11 + (Z.of_nat n))

Lemma upd_upto_Zlength data l (H: Zlength l = 16): forall i (I:(0<=i<=4)%nat),
      Zlength (upd_upto data i l) = 16.

Lemma upd_upto_Vint data: forall n, 0<=n<16 ->
      exists i, Znth n (upd_upto data 4 (list_repeat 16 Vundef)) = Vint i.

Lemma upd_upto_char data l: Zlength l = 16 ->
      upd_upto data 4 l = match data with ((Nonce, C), (Key1, Key2)) =>
          match Nonce with (N1, N2, N3, N4) =>
          match C with (C1, C2, C3, C4) =>
          match Key1 with (K1, K2, K3, K4) =>
          match Key2 with (L1, L2, L3, L4) =>
      map Vint (map littleendian [C1; K1; K2; K3;
                                  K4; C2; N1; N2;
                                  N3; N4; C3; L1;
                                  L2; L3; L4; C4]) end end end end end. *)
Require Import tweetnacl20140427.tweetnaclVerifiableC.
(* tweetnacl20140427.tweetnaclVerifiableC:
From Coq Require Import String List ZArith.
From compcert Require Import Coqlib Integers Floats AST Ctypes Cop Clight Clightdefs.
Local Open Scope Z_scope.

Definition _A : ident := 116%positive.
Definition _Ch : ident := 133%positive.
Definition _D : ident := 58%positive.
Definition _D2 : ident := 59%positive.
Definition _I : ident := 62%positive.
Definition _K : ident := 139%positive.
Definition _L : ident := 154%positive.
Definition _L32 : ident := 65%positive.
Definition _M : ident := 118%positive.
Definition _Maj : ident := 134%positive.
Definition _R : ident := 132%positive.
Definition _S : ident := 119%positive.
Definition _Sigma0 : ident := 135%positive.
Definition _Sigma1 : ident := 136%positive.
Definition _X : ident := 60%positive.
Definition _Y : ident := 61%positive.
Definition _Z : ident := 117%positive.
Definition __0 : ident := 53%positive.
Definition __121665 : ident := 57%positive.
Definition __9 : ident := 54%positive.
Definition ___builtin_annot : ident := 7%positive.
Definition ___builtin_annot_intval : ident := 8%positive.
Definition ___builtin_bswap : ident := 1%positive.
Definition ___builtin_bswap16 : ident := 3%positive.
Definition ___builtin_bswap32 : ident := 2%positive.
Definition ___builtin_bswap64 : ident := 33%positive.
Definition ___builtin_clz : ident := 34%positive.
Definition ___builtin_clzl : ident := 35%positive.
Definition ___builtin_clzll : ident := 36%positive.
Definition ___builtin_ctz : ident := 37%positive.
Definition ___builtin_ctzl : ident := 38%positive.
Definition ___builtin_ctzll : ident := 39%positive.
Definition ___builtin_debug : ident := 51%positive.
Definition ___builtin_fabs : ident := 4%positive.
Definition ___builtin_fmadd : ident := 42%positive.
Definition ___builtin_fmax : ident := 40%positive.
Definition ___builtin_fmin : ident := 41%positive.
Definition ___builtin_fmsub : ident := 43%positive.
Definition ___builtin_fnmadd : ident := 44%positive.
Definition ___builtin_fnmsub : ident := 45%positive.
Definition ___builtin_fsqrt : ident := 5%positive.
Definition ___builtin_membar : ident := 9%positive.
Definition ___builtin_memcpy_aligned : ident := 6%positive.
Definition ___builtin_nop : ident := 50%positive.
Definition ___builtin_read16_reversed : ident := 46%positive.
Definition ___builtin_read32_reversed : ident := 47%positive.
Definition ___builtin_va_arg : ident := 11%positive.
Definition ___builtin_va_copy : ident := 12%positive.
Definition ___builtin_va_end : ident := 13%positive.
Definition ___builtin_va_start : ident := 10%positive.
Definition ___builtin_write16_reversed : ident := 48%positive.
Definition ___builtin_write32_reversed : ident := 49%positive.
Definition ___compcert_i64_dtos : ident := 18%positive.
Definition ___compcert_i64_dtou : ident := 19%positive.
Definition ___compcert_i64_sar : ident := 30%positive.
Definition ___compcert_i64_sdiv : ident := 24%positive.
Definition ___compcert_i64_shl : ident := 28%positive.
Definition ___compcert_i64_shr : ident := 29%positive.
Definition ___compcert_i64_smod : ident := 26%positive.
Definition ___compcert_i64_smulh : ident := 31%positive.
Definition ___compcert_i64_stod : ident := 20%positive.
Definition ___compcert_i64_stof : ident := 22%positive.
Definition ___compcert_i64_udiv : ident := 25%positive.
Definition ___compcert_i64_umod : ident := 27%positive.
Definition ___compcert_i64_umulh : ident := 32%positive.
Definition ___compcert_i64_utod : ident := 21%positive.
Definition ___compcert_i64_utof : ident := 23%positive.
Definition ___compcert_va_composite : ident := 17%positive.
Definition ___compcert_va_float64 : ident := 16%positive.
Definition ___compcert_va_int32 : ident := 14%positive.
Definition ___compcert_va_int64 : ident := 15%positive.
Definition _a : ident := 105%positive.
Definition _add : ident := 143%positive.
Definition _add1305 : ident := 97%positive.
Definition _b : ident := 90%positive.
Definition _c : ident := 64%positive.
Definition _car25519 : ident := 108%positive.
Definition _carry : ident := 155%positive.
Definition _chk : ident := 161%positive.
Definition _core : ident := 86%positive.
Definition _crypto_box_curve25519xsalsa20poly1305_tweet : ident := 130%positive.
Definition _crypto_box_curve25519xsalsa20poly1305_tweet_afternm : ident := 128%positive.
Definition _crypto_box_curve25519xsalsa20poly1305_tweet_beforenm : ident := 127%positive.
Definition _crypto_box_curve25519xsalsa20poly1305_tweet_keypair : ident := 126%positive.
Definition _crypto_box_curve25519xsalsa20poly1305_tweet_open : ident := 131%positive.
Definition _crypto_box_curve25519xsalsa20poly1305_tweet_open_afternm : ident := 129%positive.
Definition _crypto_core_hsalsa20_tweet : ident := 88%positive.
Definition _crypto_core_salsa20_tweet : ident := 87%positive.
Definition _crypto_hash_sha512_tweet : ident := 142%positive.
Definition _crypto_hashblocks_sha512_tweet : ident := 140%positive.
Definition _crypto_onetimeauth_poly1305_tweet : ident := 101%positive.
Definition _crypto_onetimeauth_poly1305_tweet_verify : ident := 102%positive.
Definition _crypto_scalarmult_curve25519_tweet : ident := 124%positive.
Definition _crypto_scalarmult_curve25519_tweet_base : ident := 125%positive.
Definition _crypto_secretbox_xsalsa20poly1305_tweet : ident := 103%positive.
Definition _crypto_secretbox_xsalsa20poly1305_tweet_open : ident := 104%positive.
Definition _crypto_sign_ed25519_tweet : ident := 160%positive.
Definition _crypto_sign_ed25519_tweet_keypair : ident := 153%positive.
Definition _crypto_sign_ed25519_tweet_open : ident := 169%positive.
Definition _crypto_stream_salsa20_tweet : ident := 93%positive.
Definition _crypto_stream_salsa20_tweet_xor : ident := 92%positive.
Definition _crypto_stream_xsalsa20_tweet : ident := 95%positive.
Definition _crypto_stream_xsalsa20_tweet_xor : ident := 96%positive.
Definition _crypto_verify_16_tweet : ident := 76%positive.
Definition _crypto_verify_32_tweet : ident := 77%positive.
Definition _cswap : ident := 144%positive.
Definition _d : ident := 74%positive.
Definition _den : ident := 163%positive.
Definition _den2 : ident := 164%positive.
Definition _den4 : ident := 165%positive.
Definition _den6 : ident := 166%positive.
Definition _dl64 : ident := 69%positive.
Definition _e : ident := 122%positive.
Definition _f : ident := 123%positive.
Definition _g : ident := 100%positive.
Definition _gf0 : ident := 55%positive.
Definition _gf1 : ident := 56%positive.
Definition _h : ident := 81%positive.
Definition _i : ident := 68%positive.
Definition _in : ident := 79%positive.
Definition _inv25519 : ident := 120%positive.
Definition _iv : ident := 141%positive.
Definition _j : ident := 84%positive.
Definition _k : ident := 80%positive.
Definition _ld32 : ident := 67%positive.
Definition _m : ident := 85%positive.
Definition _main : ident := 170%positive.
Definition _minusp : ident := 98%positive.
Definition _mlen : ident := 168%positive.
Definition _modL : ident := 156%positive.
Definition _n : ident := 73%positive.
Definition _neq25519 : ident := 113%positive.
Definition _num : ident := 162%positive.
Definition _o : ident := 107%positive.
Definition _out : ident := 78%positive.
Definition _p : ident := 109%positive.
Definition _pack : ident := 148%positive.
Definition _pack25519 : ident := 112%positive.
Definition _par25519 : ident := 114%positive.
Definition _pk : ident := 151%positive.
Definition _pow2523 : ident := 121%positive.
Definition _q : ident := 110%positive.
Definition _r : ident := 99%positive.
Definition _randombytes : ident := 52%positive.
Definition _reduce : ident := 157%positive.
Definition _s : ident := 94%positive.
Definition _scalarbase : ident := 150%positive.
Definition _scalarmult : ident := 149%positive.
Definition _sel25519 : ident := 111%positive.
Definition _set25519 : ident := 106%positive.
Definition _sigma : ident := 89%positive.
Definition _sigma0 : ident := 137%positive.
Definition _sigma1 : ident := 138%positive.
Definition _sk : ident := 152%positive.
Definition _sm : ident := 158%positive.
Definition _smlen : ident := 159%positive.
Definition _st32 : ident := 70%positive.
Definition _t : ident := 83%positive.
Definition _ts64 : ident := 71%positive.
Definition _tx : ident := 145%positive.
Definition _ty : ident := 146%positive.
Definition _u : ident := 66%positive.
Definition _unpack25519 : ident := 115%positive.
Definition _unpackneg : ident := 167%positive.
Definition _vn : ident := 75%positive.
Definition _w : ident := 82%positive.
Definition _x : ident := 63%positive.
Definition _y : ident := 72%positive.
Definition _z : ident := 91%positive.
Definition _zi : ident := 147%positive.
Definition _t'1 : ident := 171%positive.
Definition _t'10 : ident := 180%positive.
Definition _t'11 : ident := 181%positive.
Definition _t'12 : ident := 182%positive.
Definition _t'13 : ident := 183%positive.
Definition _t'14 : ident := 184%positive.
Definition _t'15 : ident := 185%positive.
Definition _t'16 : ident := 186%positive.
Definition _t'17 : ident := 187%positive.
Definition _t'18 : ident := 188%positive.
Definition _t'19 : ident := 189%positive.
Definition _t'2 : ident := 172%positive.
Definition _t'20 : ident := 190%positive.
Definition _t'21 : ident := 191%positive.
Definition _t'22 : ident := 192%positive.
Definition _t'23 : ident := 193%positive.
Definition _t'24 : ident := 194%positive.
Definition _t'25 : ident := 195%positive.
Definition _t'26 : ident := 196%positive.
Definition _t'27 : ident := 197%positive.
Definition _t'28 : ident := 198%positive.
Definition _t'29 : ident := 199%positive.
Definition _t'3 : ident := 173%positive.
Definition _t'30 : ident := 200%positive.
Definition _t'31 : ident := 201%positive.
Definition _t'32 : ident := 202%positive.
Definition _t'33 : ident := 203%positive.
Definition _t'34 : ident := 204%positive.
Definition _t'4 : ident := 174%positive.
Definition _t'5 : ident := 175%positive.
Definition _t'6 : ident := 176%positive.
Definition _t'7 : ident := 177%positive.
Definition _t'8 : ident := 178%positive.
Definition _t'9 : ident := 179%positive.

Definition v__0 := {|
  gvar_info := (tarray tuchar 16);
  gvar_init := (Init_space 16 :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v__9 := {|
  gvar_info := (tarray tuchar 32);
  gvar_init := (Init_int8 (Int.repr 9) :: Init_space 31 :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v_gf0 := {|
  gvar_info := (tarray tlong 16);
  gvar_init := (Init_space 128 :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v_gf1 := {|
  gvar_info := (tarray tlong 16);
  gvar_init := (Init_int64 (Int64.repr 1) :: Init_space 120 :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v__121665 := {|
  gvar_info := (tarray tlong 16);
  gvar_init := (Init_int64 (Int64.repr 56129) :: Init_int64 (Int64.repr 1) ::
                Init_space 112 :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v_D := {|
  gvar_info := (tarray tlong 16);
  gvar_init := (Init_int64 (Int64.repr 30883) ::
                Init_int64 (Int64.repr 4953) ::
                Init_int64 (Int64.repr 19914) ::
                Init_int64 (Int64.repr 30187) ::
                Init_int64 (Int64.repr 55467) ::
                Init_int64 (Int64.repr 16705) ::
                Init_int64 (Int64.repr 2637) ::
                Init_int64 (Int64.repr 112) ::
                Init_int64 (Int64.repr 59544) ::
                Init_int64 (Int64.repr 30585) ::
                Init_int64 (Int64.repr 16505) ::
                Init_int64 (Int64.repr 36039) ::
                Init_int64 (Int64.repr 65139) ::
                Init_int64 (Int64.repr 11119) ::
                Init_int64 (Int64.repr 27886) ::
                Init_int64 (Int64.repr 20995) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v_D2 := {|
  gvar_info := (tarray tlong 16);
  gvar_init := (Init_int64 (Int64.repr 61785) ::
                Init_int64 (Int64.repr 9906) ::
                Init_int64 (Int64.repr 39828) ::
                Init_int64 (Int64.repr 60374) ::
                Init_int64 (Int64.repr 45398) ::
                Init_int64 (Int64.repr 33411) ::
                Init_int64 (Int64.repr 5274) ::
                Init_int64 (Int64.repr 224) ::
                Init_int64 (Int64.repr 53552) ::
                Init_int64 (Int64.repr 61171) ::
                Init_int64 (Int64.repr 33010) ::
                Init_int64 (Int64.repr 6542) ::
                Init_int64 (Int64.repr 64743) ::
                Init_int64 (Int64.repr 22239) ::
                Init_int64 (Int64.repr 55772) ::
                Init_int64 (Int64.repr 9222) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v_X := {|
  gvar_info := (tarray tlong 16);
  gvar_init := (Init_int64 (Int64.repr 54554) ::
                Init_int64 (Int64.repr 36645) ::
                Init_int64 (Int64.repr 11616) ::
                Init_int64 (Int64.repr 51542) ::
                Init_int64 (Int64.repr 42930) ::
                Init_int64 (Int64.repr 38181) ::
                Init_int64 (Int64.repr 51040) ::
                Init_int64 (Int64.repr 26924) ::
                Init_int64 (Int64.repr 56412) ::
                Init_int64 (Int64.repr 64982) ::
                Init_int64 (Int64.repr 57905) ::
                Init_int64 (Int64.repr 49316) ::
                Init_int64 (Int64.repr 21502) ::
                Init_int64 (Int64.repr 52590) ::
                Init_int64 (Int64.repr 14035) ::
                Init_int64 (Int64.repr 8553) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v_Y := {|
  gvar_info := (tarray tlong 16);
  gvar_init := (Init_int64 (Int64.repr 26200) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) ::
                Init_int64 (Int64.repr 26214) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition v_I := {|
  gvar_info := (tarray tlong 16);
  gvar_init := (Init_int64 (Int64.repr 41136) ::
                Init_int64 (Int64.repr 18958) ::
                Init_int64 (Int64.repr 6951) ::
                Init_int64 (Int64.repr 50414) ::
                Init_int64 (Int64.repr 58488) ::
                Init_int64 (Int64.repr 44335) ::
                Init_int64 (Int64.repr 6150) ::
                Init_int64 (Int64.repr 12099) ::
                Init_int64 (Int64.repr 55207) ::
                Init_int64 (Int64.repr 15867) ::
                Init_int64 (Int64.repr 153) ::
                Init_int64 (Int64.repr 11085) ::
                Init_int64 (Int64.repr 57099) ::
                Init_int64 (Int64.repr 20417) ::
                Init_int64 (Int64.repr 9344) ::
                Init_int64 (Int64.repr 11139) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition f_L32 := {|
  fn_return := tuint;
  fn_callconv := cc_default;
  fn_params := ((_x, tuint) :: (_c, tint) :: nil);
  fn_vars := nil;
  fn_temps := nil;
  fn_body :=
(Sreturn (Some (Ebinop Oor
                 (Ebinop Oshl (Etempvar _x tuint) (Etempvar _c tint) tuint)
                 (Ebinop Oshr
                   (Ebinop Oand (Etempvar _x tuint)
                     (Econst_int (Int.repr (-1)) tuint) tuint)
                   (Ebinop Osub (Econst_int (Int.repr 32) tint)
                     (Etempvar _c tint) tint) tuint) tuint)))
|}.

Definition f_ld32 := {|
  fn_return := tuint;
  fn_callconv := cc_default;
  fn_params := ((_x, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_u, tuint) :: (_t'3, tuchar) :: (_t'2, tuchar) ::
               (_t'1, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Sset _u
    (Ederef
      (Ebinop Oadd (Etempvar _x (tptr tuchar)) (Econst_int (Int.repr 3) tint)
        (tptr tuchar)) tuchar))
  (Ssequence
    (Ssequence
      (Sset _t'3
        (Ederef
          (Ebinop Oadd (Etempvar _x (tptr tuchar))
            (Econst_int (Int.repr 2) tint) (tptr tuchar)) tuchar))
      (Sset _u
        (Ebinop Oor
          (Ebinop Oshl (Etempvar _u tuint) (Econst_int (Int.repr 8) tint)
            tuint) (Etempvar _t'3 tuchar) tuint)))
    (Ssequence
      (Ssequence
        (Sset _t'2
          (Ederef
            (Ebinop Oadd (Etempvar _x (tptr tuchar))
              (Econst_int (Int.repr 1) tint) (tptr tuchar)) tuchar))
        (Sset _u
          (Ebinop Oor
            (Ebinop Oshl (Etempvar _u tuint) (Econst_int (Int.repr 8) tint)
              tuint) (Etempvar _t'2 tuchar) tuint)))
      (Ssequence
        (Sset _t'1
          (Ederef
            (Ebinop Oadd (Etempvar _x (tptr tuchar))
              (Econst_int (Int.repr 0) tint) (tptr tuchar)) tuchar))
        (Sreturn (Some (Ebinop Oor
                         (Ebinop Oshl (Etempvar _u tuint)
                           (Econst_int (Int.repr 8) tint) tuint)
                         (Etempvar _t'1 tuchar) tuint)))))))
|}.

Definition f_dl64 := {|
  fn_return := tulong;
  fn_callconv := cc_default;
  fn_params := ((_x, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: (_u, tulong) :: (_t'1, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Sset _u (Ecast (Econst_int (Int.repr 0) tint) tulong))
  (Ssequence
    (Ssequence
      (Sset _i (Econst_int (Int.repr 0) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                         (Econst_int (Int.repr 8) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Sset _t'1
              (Ederef
                (Ebinop Oadd (Etempvar _x (tptr tuchar)) (Etempvar _i tint)
                  (tptr tuchar)) tuchar))
            (Sset _u
              (Ebinop Oor
                (Ebinop Oshl (Etempvar _u tulong)
                  (Econst_int (Int.repr 8) tint) tulong)
                (Etempvar _t'1 tuchar) tulong))))
        (Sset _i
          (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
            tint))))
    (Sreturn (Some (Etempvar _u tulong)))))
|}.

Definition f_st32 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_x, (tptr tuchar)) :: (_u, tuint) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: nil);
  fn_body :=
(Ssequence
  (Sset _i (Econst_int (Int.repr 0) tint))
  (Sloop
    (Ssequence
      (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                     (Econst_int (Int.repr 4) tint) tint)
        Sskip
        Sbreak)
      (Ssequence
        (Sassign
          (Ederef
            (Ebinop Oadd (Etempvar _x (tptr tuchar)) (Etempvar _i tint)
              (tptr tuchar)) tuchar) (Etempvar _u tuint))
        (Sset _u
          (Ebinop Oshr (Etempvar _u tuint) (Econst_int (Int.repr 8) tint)
            tuint))))
    (Sset _i
      (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
|}.

Definition f_ts64 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_x, (tptr tuchar)) :: (_u, tulong) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: nil);
  fn_body :=
(Ssequence
  (Sset _i (Econst_int (Int.repr 7) tint))
  (Sloop
    (Ssequence
      (Sifthenelse (Ebinop Oge (Etempvar _i tint)
                     (Econst_int (Int.repr 0) tint) tint)
        Sskip
        Sbreak)
      (Ssequence
        (Sassign
          (Ederef
            (Ebinop Oadd (Etempvar _x (tptr tuchar)) (Etempvar _i tint)
              (tptr tuchar)) tuchar) (Etempvar _u tulong))
        (Sset _u
          (Ebinop Oshr (Etempvar _u tulong) (Econst_int (Int.repr 8) tint)
            tulong))))
    (Sset _i
      (Ebinop Osub (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
|}.

Definition f_vn := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_x, (tptr tuchar)) :: (_y, (tptr tuchar)) :: (_n, tint) ::
                nil);
  fn_vars := nil;
  fn_temps := ((_i, tuint) :: (_d, tuint) :: (_t'2, tuchar) ::
               (_t'1, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Sset _d (Econst_int (Int.repr 0) tint))
  (Ssequence
    (Ssequence
      (Sset _i (Econst_int (Int.repr 0) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _i tuint) (Etempvar _n tint)
                         tint)
            Sskip
            Sbreak)
          (Ssequence
            (Sset _t'1
              (Ederef
                (Ebinop Oadd (Etempvar _x (tptr tuchar)) (Etempvar _i tuint)
                  (tptr tuchar)) tuchar))
            (Ssequence
              (Sset _t'2
                (Ederef
                  (Ebinop Oadd (Etempvar _y (tptr tuchar))
                    (Etempvar _i tuint) (tptr tuchar)) tuchar))
              (Sset _d
                (Ebinop Oor (Etempvar _d tuint)
                  (Ebinop Oxor (Etempvar _t'1 tuchar) (Etempvar _t'2 tuchar)
                    tint) tuint)))))
        (Sset _i
          (Ebinop Oadd (Etempvar _i tuint) (Econst_int (Int.repr 1) tint)
            tuint))))
    (Sreturn (Some (Ebinop Osub
                     (Ebinop Oand (Econst_int (Int.repr 1) tint)
                       (Ebinop Oshr
                         (Ebinop Osub (Etempvar _d tuint)
                           (Econst_int (Int.repr 1) tint) tuint)
                         (Econst_int (Int.repr 8) tint) tuint) tuint)
                     (Econst_int (Int.repr 1) tint) tuint)))))
|}.

Definition f_crypto_verify_16_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_x, (tptr tuchar)) :: (_y, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall (Some _t'1)
    (Evar _vn (Tfunction
                (Tcons (tptr tuchar) (Tcons (tptr tuchar) (Tcons tint Tnil)))
                tint cc_default))
    ((Etempvar _x (tptr tuchar)) :: (Etempvar _y (tptr tuchar)) ::
     (Econst_int (Int.repr 16) tint) :: nil))
  (Sreturn (Some (Etempvar _t'1 tint))))
|}.

Definition f_crypto_verify_32_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_x, (tptr tuchar)) :: (_y, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall (Some _t'1)
    (Evar _vn (Tfunction
                (Tcons (tptr tuchar) (Tcons (tptr tuchar) (Tcons tint Tnil)))
                tint cc_default))
    ((Etempvar _x (tptr tuchar)) :: (Etempvar _y (tptr tuchar)) ::
     (Econst_int (Int.repr 32) tint) :: nil))
  (Sreturn (Some (Etempvar _t'1 tint))))
|}.

Definition f_core := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_out, (tptr tuchar)) :: (_in, (tptr tuchar)) ::
                (_k, (tptr tuchar)) :: (_c, (tptr tuchar)) :: (_h, tint) ::
                nil);
  fn_vars := ((_w, (tarray tuint 16)) :: (_x, (tarray tuint 16)) ::
              (_y, (tarray tuint 16)) :: (_t, (tarray tuint 4)) :: nil);
  fn_temps := ((_i, tint) :: (_j, tint) :: (_m, tint) :: (_t'10, tuint) ::
               (_t'9, tuint) :: (_t'8, tuint) :: (_t'7, tuint) ::
               (_t'6, tuint) :: (_t'5, tuint) :: (_t'4, tuint) ::
               (_t'3, tuint) :: (_t'2, tuint) :: (_t'1, tuint) ::
               (_t'34, tuint) :: (_t'33, tuint) :: (_t'32, tuint) ::
               (_t'31, tuint) :: (_t'30, tuint) :: (_t'29, tuint) ::
               (_t'28, tuint) :: (_t'27, tuint) :: (_t'26, tuint) ::
               (_t'25, tuint) :: (_t'24, tuint) :: (_t'23, tuint) ::
               (_t'22, tuint) :: (_t'21, tuint) :: (_t'20, tuint) ::
               (_t'19, tuint) :: (_t'18, tuint) :: (_t'17, tuint) ::
               (_t'16, tuint) :: (_t'15, tuint) :: (_t'14, tuint) ::
               (_t'13, tuint) :: (_t'12, tuint) :: (_t'11, tuint) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _i (Econst_int (Int.repr 0) tint))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                       (Econst_int (Int.repr 4) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Ssequence
            (Scall (Some _t'1)
              (Evar _ld32 (Tfunction (Tcons (tptr tuchar) Tnil) tuint
                            cc_default))
              ((Ebinop Oadd (Etempvar _c (tptr tuchar))
                 (Ebinop Omul (Econst_int (Int.repr 4) tint)
                   (Etempvar _i tint) tint) (tptr tuchar)) :: nil))
            (Sassign
              (Ederef
                (Ebinop Oadd (Evar _x (tarray tuint 16))
                  (Ebinop Omul (Econst_int (Int.repr 5) tint)
                    (Etempvar _i tint) tint) (tptr tuint)) tuint)
              (Etempvar _t'1 tuint)))
          (Ssequence
            (Ssequence
              (Scall (Some _t'2)
                (Evar _ld32 (Tfunction (Tcons (tptr tuchar) Tnil) tuint
                              cc_default))
                ((Ebinop Oadd (Etempvar _k (tptr tuchar))
                   (Ebinop Omul (Econst_int (Int.repr 4) tint)
                     (Etempvar _i tint) tint) (tptr tuchar)) :: nil))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Evar _x (tarray tuint 16))
                    (Ebinop Oadd (Econst_int (Int.repr 1) tint)
                      (Etempvar _i tint) tint) (tptr tuint)) tuint)
                (Etempvar _t'2 tuint)))
            (Ssequence
              (Ssequence
                (Scall (Some _t'3)
                  (Evar _ld32 (Tfunction (Tcons (tptr tuchar) Tnil) tuint
                                cc_default))
                  ((Ebinop Oadd (Etempvar _in (tptr tuchar))
                     (Ebinop Omul (Econst_int (Int.repr 4) tint)
                       (Etempvar _i tint) tint) (tptr tuchar)) :: nil))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Evar _x (tarray tuint 16))
                      (Ebinop Oadd (Econst_int (Int.repr 6) tint)
                        (Etempvar _i tint) tint) (tptr tuint)) tuint)
                  (Etempvar _t'3 tuint)))
              (Ssequence
                (Scall (Some _t'4)
                  (Evar _ld32 (Tfunction (Tcons (tptr tuchar) Tnil) tuint
                                cc_default))
                  ((Ebinop Oadd
                     (Ebinop Oadd (Etempvar _k (tptr tuchar))
                       (Econst_int (Int.repr 16) tint) (tptr tuchar))
                     (Ebinop Omul (Econst_int (Int.repr 4) tint)
                       (Etempvar _i tint) tint) (tptr tuchar)) :: nil))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Evar _x (tarray tuint 16))
                      (Ebinop Oadd (Econst_int (Int.repr 11) tint)
                        (Etempvar _i tint) tint) (tptr tuint)) tuint)
                  (Etempvar _t'4 tuint)))))))
      (Sset _i
        (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
  (Ssequence
    (Ssequence
      (Sset _i (Econst_int (Int.repr 0) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                         (Econst_int (Int.repr 16) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Sset _t'34
              (Ederef
                (Ebinop Oadd (Evar _x (tarray tuint 16)) (Etempvar _i tint)
                  (tptr tuint)) tuint))
            (Sassign
              (Ederef
                (Ebinop Oadd (Evar _y (tarray tuint 16)) (Etempvar _i tint)
                  (tptr tuint)) tuint) (Etempvar _t'34 tuint))))
        (Sset _i
          (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
            tint))))
    (Ssequence
      (Ssequence
        (Sset _i (Econst_int (Int.repr 0) tint))
        (Sloop
          (Ssequence
            (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                           (Econst_int (Int.repr 20) tint) tint)
              Sskip
              Sbreak)
            (Ssequence
              (Ssequence
                (Sset _j (Econst_int (Int.repr 0) tint))
                (Sloop
                  (Ssequence
                    (Sifthenelse (Ebinop Olt (Etempvar _j tint)
                                   (Econst_int (Int.repr 4) tint) tint)
                      Sskip
                      Sbreak)
                    (Ssequence
                      (Ssequence
                        (Sset _m (Econst_int (Int.repr 0) tint))
                        (Sloop
                          (Ssequence
                            (Sifthenelse (Ebinop Olt (Etempvar _m tint)
                                           (Econst_int (Int.repr 4) tint)
                                           tint)
                              Sskip
                              Sbreak)
                            (Ssequence
                              (Sset _t'33
                                (Ederef
                                  (Ebinop Oadd (Evar _x (tarray tuint 16))
                                    (Ebinop Omod
                                      (Ebinop Oadd
                                        (Ebinop Omul
                                          (Econst_int (Int.repr 5) tint)
                                          (Etempvar _j tint) tint)
                                        (Ebinop Omul
                                          (Econst_int (Int.repr 4) tint)
                                          (Etempvar _m tint) tint) tint)
                                      (Econst_int (Int.repr 16) tint) tint)
                                    (tptr tuint)) tuint))
                              (Sassign
                                (Ederef
                                  (Ebinop Oadd (Evar _t (tarray tuint 4))
                                    (Etempvar _m tint) (tptr tuint)) tuint)
                                (Etempvar _t'33 tuint))))
                          (Sset _m
                            (Ebinop Oadd (Etempvar _m tint)
                              (Econst_int (Int.repr 1) tint) tint))))
                      (Ssequence
                        (Ssequence
                          (Ssequence
                            (Sset _t'31
                              (Ederef
                                (Ebinop Oadd (Evar _t (tarray tuint 4))
                                  (Econst_int (Int.repr 0) tint)
                                  (tptr tuint)) tuint))
                            (Ssequence
                              (Sset _t'32
                                (Ederef
                                  (Ebinop Oadd (Evar _t (tarray tuint 4))
                                    (Econst_int (Int.repr 3) tint)
                                    (tptr tuint)) tuint))
                              (Scall (Some _t'5)
                                (Evar _L32 (Tfunction
                                             (Tcons tuint (Tcons tint Tnil))
                                             tuint cc_default))
                                ((Ebinop Oadd (Etempvar _t'31 tuint)
                                   (Etempvar _t'32 tuint) tuint) ::
                                 (Econst_int (Int.repr 7) tint) :: nil))))
                          (Ssequence
                            (Sset _t'30
                              (Ederef
                                (Ebinop Oadd (Evar _t (tarray tuint 4))
                                  (Econst_int (Int.repr 1) tint)
                                  (tptr tuint)) tuint))
                            (Sassign
                              (Ederef
                                (Ebinop Oadd (Evar _t (tarray tuint 4))
                                  (Econst_int (Int.repr 1) tint)
                                  (tptr tuint)) tuint)
                              (Ebinop Oxor (Etempvar _t'30 tuint)
                                (Etempvar _t'5 tuint) tuint))))
                        (Ssequence
                          (Ssequence
                            (Ssequence
                              (Sset _t'28
                                (Ederef
                                  (Ebinop Oadd (Evar _t (tarray tuint 4))
                                    (Econst_int (Int.repr 1) tint)
                                    (tptr tuint)) tuint))
                              (Ssequence
                                (Sset _t'29
                                  (Ederef
                                    (Ebinop Oadd (Evar _t (tarray tuint 4))
                                      (Econst_int (Int.repr 0) tint)
                                      (tptr tuint)) tuint))
                                (Scall (Some _t'6)
                                  (Evar _L32 (Tfunction
                                               (Tcons tuint
                                                 (Tcons tint Tnil)) tuint
                                               cc_default))
                                  ((Ebinop Oadd (Etempvar _t'28 tuint)
                                     (Etempvar _t'29 tuint) tuint) ::
                                   (Econst_int (Int.repr 9) tint) :: nil))))
                            (Ssequence
                              (Sset _t'27
                                (Ederef
                                  (Ebinop Oadd (Evar _t (tarray tuint 4))
                                    (Econst_int (Int.repr 2) tint)
                                    (tptr tuint)) tuint))
                              (Sassign
                                (Ederef
                                  (Ebinop Oadd (Evar _t (tarray tuint 4))
                                    (Econst_int (Int.repr 2) tint)
                                    (tptr tuint)) tuint)
                                (Ebinop Oxor (Etempvar _t'27 tuint)
                                  (Etempvar _t'6 tuint) tuint))))
                          (Ssequence
                            (Ssequence
                              (Ssequence
                                (Sset _t'25
                                  (Ederef
                                    (Ebinop Oadd (Evar _t (tarray tuint 4))
                                      (Econst_int (Int.repr 2) tint)
                                      (tptr tuint)) tuint))
                                (Ssequence
                                  (Sset _t'26
                                    (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                        (Econst_int (Int.repr 1) tint)
                                        (tptr tuint)) tuint))
                                  (Scall (Some _t'7)
                                    (Evar _L32 (Tfunction
                                                 (Tcons tuint
                                                   (Tcons tint Tnil)) tuint
                                                 cc_default))
                                    ((Ebinop Oadd (Etempvar _t'25 tuint)
                                       (Etempvar _t'26 tuint) tuint) ::
                                     (Econst_int (Int.repr 13) tint) :: nil))))
                              (Ssequence
                                (Sset _t'24
                                  (Ederef
                                    (Ebinop Oadd (Evar _t (tarray tuint 4))
                                      (Econst_int (Int.repr 3) tint)
                                      (tptr tuint)) tuint))
                                (Sassign
                                  (Ederef
                                    (Ebinop Oadd (Evar _t (tarray tuint 4))
                                      (Econst_int (Int.repr 3) tint)
                                      (tptr tuint)) tuint)
                                  (Ebinop Oxor (Etempvar _t'24 tuint)
                                    (Etempvar _t'7 tuint) tuint))))
                            (Ssequence
                              (Ssequence
                                (Ssequence
                                  (Sset _t'22
                                    (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                        (Econst_int (Int.repr 3) tint)
                                        (tptr tuint)) tuint))
                                  (Ssequence
                                    (Sset _t'23
                                      (Ederef
                                        (Ebinop Oadd
                                          (Evar _t (tarray tuint 4))
                                          (Econst_int (Int.repr 2) tint)
                                          (tptr tuint)) tuint))
                                    (Scall (Some _t'8)
                                      (Evar _L32 (Tfunction
                                                   (Tcons tuint
                                                     (Tcons tint Tnil)) tuint
                                                   cc_default))
                                      ((Ebinop Oadd (Etempvar _t'22 tuint)
                                         (Etempvar _t'23 tuint) tuint) ::
                                       (Econst_int (Int.repr 18) tint) ::
                                       nil))))
                                (Ssequence
                                  (Sset _t'21
                                    (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                        (Econst_int (Int.repr 0) tint)
                                        (tptr tuint)) tuint))
                                  (Sassign
                                    (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                        (Econst_int (Int.repr 0) tint)
                                        (tptr tuint)) tuint)
                                    (Ebinop Oxor (Etempvar _t'21 tuint)
                                      (Etempvar _t'8 tuint) tuint))))
                              (Ssequence
                                (Sset _m (Econst_int (Int.repr 0) tint))
                                (Sloop
                                  (Ssequence
                                    (Sifthenelse (Ebinop Olt
                                                   (Etempvar _m tint)
                                                   (Econst_int (Int.repr 4) tint)
                                                   tint)
                                      Sskip
                                      Sbreak)
                                    (Ssequence
                                      (Sset _t'20
                                        (Ederef
                                          (Ebinop Oadd
                                            (Evar _t (tarray tuint 4))
                                            (Etempvar _m tint) (tptr tuint))
                                          tuint))
                                      (Sassign
                                        (Ederef
                                          (Ebinop Oadd
                                            (Evar _w (tarray tuint 16))
                                            (Ebinop Oadd
                                              (Ebinop Omul
                                                (Econst_int (Int.repr 4) tint)
                                                (Etempvar _j tint) tint)
                                              (Ebinop Omod
                                                (Ebinop Oadd
                                                  (Etempvar _j tint)
                                                  (Etempvar _m tint) tint)
                                                (Econst_int (Int.repr 4) tint)
                                                tint) tint) (tptr tuint))
                                          tuint) (Etempvar _t'20 tuint))))
                                  (Sset _m
                                    (Ebinop Oadd (Etempvar _m tint)
                                      (Econst_int (Int.repr 1) tint) tint))))))))))
                  (Sset _j
                    (Ebinop Oadd (Etempvar _j tint)
                      (Econst_int (Int.repr 1) tint) tint))))
              (Ssequence
                (Sset _m (Econst_int (Int.repr 0) tint))
                (Sloop
                  (Ssequence
                    (Sifthenelse (Ebinop Olt (Etempvar _m tint)
                                   (Econst_int (Int.repr 16) tint) tint)
                      Sskip
                      Sbreak)
                    (Ssequence
                      (Sset _t'19
                        (Ederef
                          (Ebinop Oadd (Evar _w (tarray tuint 16))
                            (Etempvar _m tint) (tptr tuint)) tuint))
                      (Sassign
                        (Ederef
                          (Ebinop Oadd (Evar _x (tarray tuint 16))
                            (Etempvar _m tint) (tptr tuint)) tuint)
                        (Etempvar _t'19 tuint))))
                  (Sset _m
                    (Ebinop Oadd (Etempvar _m tint)
                      (Econst_int (Int.repr 1) tint) tint))))))
          (Sset _i
            (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
              tint))))
      (Sifthenelse (Etempvar _h tint)
        (Ssequence
          (Ssequence
            (Sset _i (Econst_int (Int.repr 0) tint))
            (Sloop
              (Ssequence
                (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                               (Econst_int (Int.repr 16) tint) tint)
                  Sskip
                  Sbreak)
                (Ssequence
                  (Sset _t'17
                    (Ederef
                      (Ebinop Oadd (Evar _x (tarray tuint 16))
                        (Etempvar _i tint) (tptr tuint)) tuint))
                  (Ssequence
                    (Sset _t'18
                      (Ederef
                        (Ebinop Oadd (Evar _y (tarray tuint 16))
                          (Etempvar _i tint) (tptr tuint)) tuint))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Evar _x (tarray tuint 16))
                          (Etempvar _i tint) (tptr tuint)) tuint)
                      (Ebinop Oadd (Etempvar _t'17 tuint)
                        (Etempvar _t'18 tuint) tuint)))))
              (Sset _i
                (Ebinop Oadd (Etempvar _i tint)
                  (Econst_int (Int.repr 1) tint) tint))))
          (Ssequence
            (Ssequence
              (Sset _i (Econst_int (Int.repr 0) tint))
              (Sloop
                (Ssequence
                  (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                                 (Econst_int (Int.repr 4) tint) tint)
                    Sskip
                    Sbreak)
                  (Ssequence
                    (Ssequence
                      (Scall (Some _t'9)
                        (Evar _ld32 (Tfunction (Tcons (tptr tuchar) Tnil)
                                      tuint cc_default))
                        ((Ebinop Oadd (Etempvar _c (tptr tuchar))
                           (Ebinop Omul (Econst_int (Int.repr 4) tint)
                             (Etempvar _i tint) tint) (tptr tuchar)) :: nil))
                      (Ssequence
                        (Sset _t'16
                          (Ederef
                            (Ebinop Oadd (Evar _x (tarray tuint 16))
                              (Ebinop Omul (Econst_int (Int.repr 5) tint)
                                (Etempvar _i tint) tint) (tptr tuint)) tuint))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Evar _x (tarray tuint 16))
                              (Ebinop Omul (Econst_int (Int.repr 5) tint)
                                (Etempvar _i tint) tint) (tptr tuint)) tuint)
                          (Ebinop Osub (Etempvar _t'16 tuint)
                            (Etempvar _t'9 tuint) tuint))))
                    (Ssequence
                      (Scall (Some _t'10)
                        (Evar _ld32 (Tfunction (Tcons (tptr tuchar) Tnil)
                                      tuint cc_default))
                        ((Ebinop Oadd (Etempvar _in (tptr tuchar))
                           (Ebinop Omul (Econst_int (Int.repr 4) tint)
                             (Etempvar _i tint) tint) (tptr tuchar)) :: nil))
                      (Ssequence
                        (Sset _t'15
                          (Ederef
                            (Ebinop Oadd (Evar _x (tarray tuint 16))
                              (Ebinop Oadd (Econst_int (Int.repr 6) tint)
                                (Etempvar _i tint) tint) (tptr tuint)) tuint))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Evar _x (tarray tuint 16))
                              (Ebinop Oadd (Econst_int (Int.repr 6) tint)
                                (Etempvar _i tint) tint) (tptr tuint)) tuint)
                          (Ebinop Osub (Etempvar _t'15 tuint)
                            (Etempvar _t'10 tuint) tuint))))))
                (Sset _i
                  (Ebinop Oadd (Etempvar _i tint)
                    (Econst_int (Int.repr 1) tint) tint))))
            (Ssequence
              (Sset _i (Econst_int (Int.repr 0) tint))
              (Sloop
                (Ssequence
                  (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                                 (Econst_int (Int.repr 4) tint) tint)
                    Sskip
                    Sbreak)
                  (Ssequence
                    (Ssequence
                      (Sset _t'14
                        (Ederef
                          (Ebinop Oadd (Evar _x (tarray tuint 16))
                            (Ebinop Omul (Econst_int (Int.repr 5) tint)
                              (Etempvar _i tint) tint) (tptr tuint)) tuint))
                      (Scall None
                        (Evar _st32 (Tfunction
                                      (Tcons (tptr tuchar)
                                        (Tcons tuint Tnil)) tvoid cc_default))
                        ((Ebinop Oadd (Etempvar _out (tptr tuchar))
                           (Ebinop Omul (Econst_int (Int.repr 4) tint)
                             (Etempvar _i tint) tint) (tptr tuchar)) ::
                         (Etempvar _t'14 tuint) :: nil)))
                    (Ssequence
                      (Sset _t'13
                        (Ederef
                          (Ebinop Oadd (Evar _x (tarray tuint 16))
                            (Ebinop Oadd (Econst_int (Int.repr 6) tint)
                              (Etempvar _i tint) tint) (tptr tuint)) tuint))
                      (Scall None
                        (Evar _st32 (Tfunction
                                      (Tcons (tptr tuchar)
                                        (Tcons tuint Tnil)) tvoid cc_default))
                        ((Ebinop Oadd
                           (Ebinop Oadd (Etempvar _out (tptr tuchar))
                             (Econst_int (Int.repr 16) tint) (tptr tuchar))
                           (Ebinop Omul (Econst_int (Int.repr 4) tint)
                             (Etempvar _i tint) tint) (tptr tuchar)) ::
                         (Etempvar _t'13 tuint) :: nil)))))
                (Sset _i
                  (Ebinop Oadd (Etempvar _i tint)
                    (Econst_int (Int.repr 1) tint) tint))))))
        (Ssequence
          (Sset _i (Econst_int (Int.repr 0) tint))
          (Sloop
            (Ssequence
              (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                             (Econst_int (Int.repr 16) tint) tint)
                Sskip
                Sbreak)
              (Ssequence
                (Sset _t'11
                  (Ederef
                    (Ebinop Oadd (Evar _x (tarray tuint 16))
                      (Etempvar _i tint) (tptr tuint)) tuint))
                (Ssequence
                  (Sset _t'12
                    (Ederef
                      (Ebinop Oadd (Evar _y (tarray tuint 16))
                        (Etempvar _i tint) (tptr tuint)) tuint))
                  (Scall None
                    (Evar _st32 (Tfunction
                                  (Tcons (tptr tuchar) (Tcons tuint Tnil))
                                  tvoid cc_default))
                    ((Ebinop Oadd (Etempvar _out (tptr tuchar))
                       (Ebinop Omul (Econst_int (Int.repr 4) tint)
                         (Etempvar _i tint) tint) (tptr tuchar)) ::
                     (Ebinop Oadd (Etempvar _t'11 tuint)
                       (Etempvar _t'12 tuint) tuint) :: nil)))))
            (Sset _i
              (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
                tint))))))))
|}.

Definition f_crypto_core_salsa20_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_out, (tptr tuchar)) :: (_in, (tptr tuchar)) ::
                (_k, (tptr tuchar)) :: (_c, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := nil;
  fn_body :=
(Ssequence
  (Scall None
    (Evar _core (Tfunction
                  (Tcons (tptr tuchar)
                    (Tcons (tptr tuchar)
                      (Tcons (tptr tuchar)
                        (Tcons (tptr tuchar) (Tcons tint Tnil))))) tvoid
                  cc_default))
    ((Etempvar _out (tptr tuchar)) :: (Etempvar _in (tptr tuchar)) ::
     (Etempvar _k (tptr tuchar)) :: (Etempvar _c (tptr tuchar)) ::
     (Econst_int (Int.repr 0) tint) :: nil))
  (Sreturn (Some (Econst_int (Int.repr 0) tint))))
|}.

Definition f_crypto_core_hsalsa20_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_out, (tptr tuchar)) :: (_in, (tptr tuchar)) ::
                (_k, (tptr tuchar)) :: (_c, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := nil;
  fn_body :=
(Ssequence
  (Scall None
    (Evar _core (Tfunction
                  (Tcons (tptr tuchar)
                    (Tcons (tptr tuchar)
                      (Tcons (tptr tuchar)
                        (Tcons (tptr tuchar) (Tcons tint Tnil))))) tvoid
                  cc_default))
    ((Etempvar _out (tptr tuchar)) :: (Etempvar _in (tptr tuchar)) ::
     (Etempvar _k (tptr tuchar)) :: (Etempvar _c (tptr tuchar)) ::
     (Econst_int (Int.repr 1) tint) :: nil))
  (Sreturn (Some (Econst_int (Int.repr 0) tint))))
|}.

Definition v_sigma := {|
  gvar_info := (tarray tuchar 16);
  gvar_init := (Init_int8 (Int.repr 101) :: Init_int8 (Int.repr 120) ::
                Init_int8 (Int.repr 112) :: Init_int8 (Int.repr 97) ::
                Init_int8 (Int.repr 110) :: Init_int8 (Int.repr 100) ::
                Init_int8 (Int.repr 32) :: Init_int8 (Int.repr 51) ::
                Init_int8 (Int.repr 50) :: Init_int8 (Int.repr 45) ::
                Init_int8 (Int.repr 98) :: Init_int8 (Int.repr 121) ::
                Init_int8 (Int.repr 116) :: Init_int8 (Int.repr 101) ::
                Init_int8 (Int.repr 32) :: Init_int8 (Int.repr 107) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition f_crypto_stream_salsa20_tweet_xor := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_c, (tptr tuchar)) :: (_m, (tptr tuchar)) :: (_b, tulong) ::
                (_n, (tptr tuchar)) :: (_k, (tptr tuchar)) :: nil);
  fn_vars := ((_z, (tarray tuchar 16)) :: (_x, (tarray tuchar 64)) :: nil);
  fn_temps := ((_u, tuint) :: (_i, tuint) :: (_t'2, tint) :: (_t'1, tint) ::
               (_t'8, tuchar) :: (_t'7, tuchar) :: (_t'6, tuchar) ::
               (_t'5, tuchar) :: (_t'4, tuchar) :: (_t'3, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Sifthenelse (Eunop Onotbool (Etempvar _b tulong) tint)
    (Sreturn (Some (Econst_int (Int.repr 0) tint)))
    Sskip)
  (Ssequence
    (Ssequence
      (Sset _i (Econst_int (Int.repr 0) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _i tuint)
                         (Econst_int (Int.repr 16) tint) tint)
            Sskip
            Sbreak)
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _z (tarray tuchar 16)) (Etempvar _i tuint)
                (tptr tuchar)) tuchar) (Econst_int (Int.repr 0) tint)))
        (Sset _i
          (Ebinop Oadd (Etempvar _i tuint) (Econst_int (Int.repr 1) tint)
            tuint))))
    (Ssequence
      (Ssequence
        (Sset _i (Econst_int (Int.repr 0) tint))
        (Sloop
          (Ssequence
            (Sifthenelse (Ebinop Olt (Etempvar _i tuint)
                           (Econst_int (Int.repr 8) tint) tint)
              Sskip
              Sbreak)
            (Ssequence
              (Sset _t'8
                (Ederef
                  (Ebinop Oadd (Etempvar _n (tptr tuchar))
                    (Etempvar _i tuint) (tptr tuchar)) tuchar))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Evar _z (tarray tuchar 16))
                    (Etempvar _i tuint) (tptr tuchar)) tuchar)
                (Etempvar _t'8 tuchar))))
          (Sset _i
            (Ebinop Oadd (Etempvar _i tuint) (Econst_int (Int.repr 1) tint)
              tuint))))
      (Ssequence
        (Swhile
          (Ebinop Oge (Etempvar _b tulong) (Econst_int (Int.repr 64) tint)
            tint)
          (Ssequence
            (Scall None
              (Evar _crypto_core_salsa20_tweet (Tfunction
                                                 (Tcons (tptr tuchar)
                                                   (Tcons (tptr tuchar)
                                                     (Tcons (tptr tuchar)
                                                       (Tcons (tptr tuchar)
                                                         Tnil)))) tint
                                                 cc_default))
              ((Evar _x (tarray tuchar 64)) ::
               (Evar _z (tarray tuchar 16)) :: (Etempvar _k (tptr tuchar)) ::
               (Evar _sigma (tarray tuchar 16)) :: nil))
            (Ssequence
              (Ssequence
                (Sset _i (Econst_int (Int.repr 0) tint))
                (Sloop
                  (Ssequence
                    (Sifthenelse (Ebinop Olt (Etempvar _i tuint)
                                   (Econst_int (Int.repr 64) tint) tint)
                      Sskip
                      Sbreak)
                    (Ssequence
                      (Sifthenelse (Etempvar _m (tptr tuchar))
                        (Ssequence
                          (Sset _t'7
                            (Ederef
                              (Ebinop Oadd (Etempvar _m (tptr tuchar))
                                (Etempvar _i tuint) (tptr tuchar)) tuchar))
                          (Sset _t'1 (Ecast (Etempvar _t'7 tuchar) tint)))
                        (Sset _t'1
                          (Ecast (Econst_int (Int.repr 0) tint) tint)))
                      (Ssequence
                        (Sset _t'6
                          (Ederef
                            (Ebinop Oadd (Evar _x (tarray tuchar 64))
                              (Etempvar _i tuint) (tptr tuchar)) tuchar))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Etempvar _c (tptr tuchar))
                              (Etempvar _i tuint) (tptr tuchar)) tuchar)
                          (Ebinop Oxor (Etempvar _t'1 tint)
                            (Etempvar _t'6 tuchar) tint)))))
                  (Sset _i
                    (Ebinop Oadd (Etempvar _i tuint)
                      (Econst_int (Int.repr 1) tint) tuint))))
              (Ssequence
                (Sset _u (Econst_int (Int.repr 1) tint))
                (Ssequence
                  (Ssequence
                    (Sset _i (Econst_int (Int.repr 8) tint))
                    (Sloop
                      (Ssequence
                        (Sifthenelse (Ebinop Olt (Etempvar _i tuint)
                                       (Econst_int (Int.repr 16) tint) tint)
                          Sskip
                          Sbreak)
                        (Ssequence
                          (Ssequence
                            (Sset _t'5
                              (Ederef
                                (Ebinop Oadd (Evar _z (tarray tuchar 16))
                                  (Etempvar _i tuint) (tptr tuchar)) tuchar))
                            (Sset _u
                              (Ebinop Oadd (Etempvar _u tuint)
                                (Ecast (Etempvar _t'5 tuchar) tuint) tuint)))
                          (Ssequence
                            (Sassign
                              (Ederef
                                (Ebinop Oadd (Evar _z (tarray tuchar 16))
                                  (Etempvar _i tuint) (tptr tuchar)) tuchar)
                              (Etempvar _u tuint))
                            (Sset _u
                              (Ebinop Oshr (Etempvar _u tuint)
                                (Econst_int (Int.repr 8) tint) tuint)))))
                      (Sset _i
                        (Ebinop Oadd (Etempvar _i tuint)
                          (Econst_int (Int.repr 1) tint) tuint))))
                  (Ssequence
                    (Sset _b
                      (Ebinop Osub (Etempvar _b tulong)
                        (Econst_int (Int.repr 64) tint) tulong))
                    (Ssequence
                      (Sset _c
                        (Ebinop Oadd (Etempvar _c (tptr tuchar))
                          (Econst_int (Int.repr 64) tint) (tptr tuchar)))
                      (Sifthenelse (Etempvar _m (tptr tuchar))
                        (Sset _m
                          (Ebinop Oadd (Etempvar _m (tptr tuchar))
                            (Econst_int (Int.repr 64) tint) (tptr tuchar)))
                        Sskip))))))))
        (Ssequence
          (Sifthenelse (Etempvar _b tulong)
            (Ssequence
              (Scall None
                (Evar _crypto_core_salsa20_tweet (Tfunction
                                                   (Tcons (tptr tuchar)
                                                     (Tcons (tptr tuchar)
                                                       (Tcons (tptr tuchar)
                                                         (Tcons (tptr tuchar)
                                                           Tnil)))) tint
                                                   cc_default))
                ((Evar _x (tarray tuchar 64)) ::
                 (Evar _z (tarray tuchar 16)) ::
                 (Etempvar _k (tptr tuchar)) ::
                 (Evar _sigma (tarray tuchar 16)) :: nil))
              (Ssequence
                (Sset _i (Econst_int (Int.repr 0) tint))
                (Sloop
                  (Ssequence
                    (Sifthenelse (Ebinop Olt (Etempvar _i tuint)
                                   (Etempvar _b tulong) tint)
                      Sskip
                      Sbreak)
                    (Ssequence
                      (Sifthenelse (Etempvar _m (tptr tuchar))
                        (Ssequence
                          (Sset _t'4
                            (Ederef
                              (Ebinop Oadd (Etempvar _m (tptr tuchar))
                                (Etempvar _i tuint) (tptr tuchar)) tuchar))
                          (Sset _t'2 (Ecast (Etempvar _t'4 tuchar) tint)))
                        (Sset _t'2
                          (Ecast (Econst_int (Int.repr 0) tint) tint)))
                      (Ssequence
                        (Sset _t'3
                          (Ederef
                            (Ebinop Oadd (Evar _x (tarray tuchar 64))
                              (Etempvar _i tuint) (tptr tuchar)) tuchar))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Etempvar _c (tptr tuchar))
                              (Etempvar _i tuint) (tptr tuchar)) tuchar)
                          (Ebinop Oxor (Etempvar _t'2 tint)
                            (Etempvar _t'3 tuchar) tint)))))
                  (Sset _i
                    (Ebinop Oadd (Etempvar _i tuint)
                      (Econst_int (Int.repr 1) tint) tuint)))))
            Sskip)
          (Sreturn (Some (Econst_int (Int.repr 0) tint))))))))
|}.

Definition f_crypto_stream_salsa20_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_c, (tptr tuchar)) :: (_d, tulong) :: (_n, (tptr tuchar)) ::
                (_k, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall (Some _t'1)
    (Evar _crypto_stream_salsa20_tweet_xor (Tfunction
                                             (Tcons (tptr tuchar)
                                               (Tcons (tptr tuchar)
                                                 (Tcons tulong
                                                   (Tcons (tptr tuchar)
                                                     (Tcons (tptr tuchar)
                                                       Tnil))))) tint
                                             cc_default))
    ((Etempvar _c (tptr tuchar)) :: (Econst_int (Int.repr 0) tint) ::
     (Etempvar _d tulong) :: (Etempvar _n (tptr tuchar)) ::
     (Etempvar _k (tptr tuchar)) :: nil))
  (Sreturn (Some (Etempvar _t'1 tint))))
|}.

Definition f_crypto_stream_xsalsa20_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_c, (tptr tuchar)) :: (_d, tulong) :: (_n, (tptr tuchar)) ::
                (_k, (tptr tuchar)) :: nil);
  fn_vars := ((_s, (tarray tuchar 32)) :: nil);
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _crypto_core_hsalsa20_tweet (Tfunction
                                        (Tcons (tptr tuchar)
                                          (Tcons (tptr tuchar)
                                            (Tcons (tptr tuchar)
                                              (Tcons (tptr tuchar) Tnil))))
                                        tint cc_default))
    ((Evar _s (tarray tuchar 32)) :: (Etempvar _n (tptr tuchar)) ::
     (Etempvar _k (tptr tuchar)) :: (Evar _sigma (tarray tuchar 16)) :: nil))
  (Ssequence
    (Scall (Some _t'1)
      (Evar _crypto_stream_salsa20_tweet (Tfunction
                                           (Tcons (tptr tuchar)
                                             (Tcons tulong
                                               (Tcons (tptr tuchar)
                                                 (Tcons (tptr tuchar) Tnil))))
                                           tint cc_default))
      ((Etempvar _c (tptr tuchar)) :: (Etempvar _d tulong) ::
       (Ebinop Oadd (Etempvar _n (tptr tuchar))
         (Econst_int (Int.repr 16) tint) (tptr tuchar)) ::
       (Evar _s (tarray tuchar 32)) :: nil))
    (Sreturn (Some (Etempvar _t'1 tint)))))
|}.

Definition f_crypto_stream_xsalsa20_tweet_xor := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_c, (tptr tuchar)) :: (_m, (tptr tuchar)) :: (_d, tulong) ::
                (_n, (tptr tuchar)) :: (_k, (tptr tuchar)) :: nil);
  fn_vars := ((_s, (tarray tuchar 32)) :: nil);
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _crypto_core_hsalsa20_tweet (Tfunction
                                        (Tcons (tptr tuchar)
                                          (Tcons (tptr tuchar)
                                            (Tcons (tptr tuchar)
                                              (Tcons (tptr tuchar) Tnil))))
                                        tint cc_default))
    ((Evar _s (tarray tuchar 32)) :: (Etempvar _n (tptr tuchar)) ::
     (Etempvar _k (tptr tuchar)) :: (Evar _sigma (tarray tuchar 16)) :: nil))
  (Ssequence
    (Scall (Some _t'1)
      (Evar _crypto_stream_salsa20_tweet_xor (Tfunction
                                               (Tcons (tptr tuchar)
                                                 (Tcons (tptr tuchar)
                                                   (Tcons tulong
                                                     (Tcons (tptr tuchar)
                                                       (Tcons (tptr tuchar)
                                                         Tnil))))) tint
                                               cc_default))
      ((Etempvar _c (tptr tuchar)) :: (Etempvar _m (tptr tuchar)) ::
       (Etempvar _d tulong) ::
       (Ebinop Oadd (Etempvar _n (tptr tuchar))
         (Econst_int (Int.repr 16) tint) (tptr tuchar)) ::
       (Evar _s (tarray tuchar 32)) :: nil))
    (Sreturn (Some (Etempvar _t'1 tint)))))
|}.

Definition f_add1305 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_h, (tptr tuint)) :: (_c, (tptr tuint)) :: nil);
  fn_vars := nil;
  fn_temps := ((_j, tuint) :: (_u, tuint) :: (_t'2, tuint) ::
               (_t'1, tuint) :: nil);
  fn_body :=
(Ssequence
  (Sset _u (Econst_int (Int.repr 0) tint))
  (Ssequence
    (Sset _j (Econst_int (Int.repr 0) tint))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _j tuint)
                       (Econst_int (Int.repr 17) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Ssequence
            (Sset _t'1
              (Ederef
                (Ebinop Oadd (Etempvar _h (tptr tuint)) (Etempvar _j tuint)
                  (tptr tuint)) tuint))
            (Ssequence
              (Sset _t'2
                (Ederef
                  (Ebinop Oadd (Etempvar _c (tptr tuint)) (Etempvar _j tuint)
                    (tptr tuint)) tuint))
              (Sset _u
                (Ebinop Oadd (Etempvar _u tuint)
                  (Ebinop Oadd (Etempvar _t'1 tuint) (Etempvar _t'2 tuint)
                    tuint) tuint))))
          (Ssequence
            (Sassign
              (Ederef
                (Ebinop Oadd (Etempvar _h (tptr tuint)) (Etempvar _j tuint)
                  (tptr tuint)) tuint)
              (Ebinop Oand (Etempvar _u tuint)
                (Econst_int (Int.repr 255) tint) tuint))
            (Sset _u
              (Ebinop Oshr (Etempvar _u tuint) (Econst_int (Int.repr 8) tint)
                tuint)))))
      (Sset _j
        (Ebinop Oadd (Etempvar _j tuint) (Econst_int (Int.repr 1) tint)
          tuint)))))
|}.

Definition v_minusp := {|
  gvar_info := (tarray tuint 17);
  gvar_init := (Init_int32 (Int.repr 5) :: Init_int32 (Int.repr 0) ::
                Init_int32 (Int.repr 0) :: Init_int32 (Int.repr 0) ::
                Init_int32 (Int.repr 0) :: Init_int32 (Int.repr 0) ::
                Init_int32 (Int.repr 0) :: Init_int32 (Int.repr 0) ::
                Init_int32 (Int.repr 0) :: Init_int32 (Int.repr 0) ::
                Init_int32 (Int.repr 0) :: Init_int32 (Int.repr 0) ::
                Init_int32 (Int.repr 0) :: Init_int32 (Int.repr 0) ::
                Init_int32 (Int.repr 0) :: Init_int32 (Int.repr 0) ::
                Init_int32 (Int.repr 252) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition f_crypto_onetimeauth_poly1305_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_out, (tptr tuchar)) :: (_m, (tptr tuchar)) ::
                (_n, tulong) :: (_k, (tptr tuchar)) :: nil);
  fn_vars := ((_x, (tarray tuint 17)) :: (_r, (tarray tuint 17)) ::
              (_h, (tarray tuint 17)) :: (_c, (tarray tuint 17)) ::
              (_g, (tarray tuint 17)) :: nil);
  fn_temps := ((_s, tuint) :: (_i, tuint) :: (_j, tuint) :: (_u, tuint) ::
               (_t'3, tuint) :: (_t'2, tint) :: (_t'1, tuint) ::
               (_t'28, tuchar) :: (_t'27, tuint) :: (_t'26, tuint) ::
               (_t'25, tuint) :: (_t'24, tuint) :: (_t'23, tuint) ::
               (_t'22, tuint) :: (_t'21, tuint) :: (_t'20, tuchar) ::
               (_t'19, tuint) :: (_t'18, tuint) :: (_t'17, tuint) ::
               (_t'16, tuint) :: (_t'15, tuint) :: (_t'14, tuint) ::
               (_t'13, tuint) :: (_t'12, tuint) :: (_t'11, tuint) ::
               (_t'10, tuint) :: (_t'9, tuint) :: (_t'8, tuint) ::
               (_t'7, tuint) :: (_t'6, tuint) :: (_t'5, tuchar) ::
               (_t'4, tuint) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _j (Econst_int (Int.repr 0) tint))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _j tuint)
                       (Econst_int (Int.repr 17) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Ssequence
            (Sset _t'1 (Ecast (Econst_int (Int.repr 0) tint) tuint))
            (Sassign
              (Ederef
                (Ebinop Oadd (Evar _h (tarray tuint 17)) (Etempvar _j tuint)
                  (tptr tuint)) tuint) (Etempvar _t'1 tuint)))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _r (tarray tuint 17)) (Etempvar _j tuint)
                (tptr tuint)) tuint) (Etempvar _t'1 tuint))))
      (Sset _j
        (Ebinop Oadd (Etempvar _j tuint) (Econst_int (Int.repr 1) tint)
          tuint))))
  (Ssequence
    (Ssequence
      (Sset _j (Econst_int (Int.repr 0) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _j tuint)
                         (Econst_int (Int.repr 16) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Sset _t'28
              (Ederef
                (Ebinop Oadd (Etempvar _k (tptr tuchar)) (Etempvar _j tuint)
                  (tptr tuchar)) tuchar))
            (Sassign
              (Ederef
                (Ebinop Oadd (Evar _r (tarray tuint 17)) (Etempvar _j tuint)
                  (tptr tuint)) tuint) (Etempvar _t'28 tuchar))))
        (Sset _j
          (Ebinop Oadd (Etempvar _j tuint) (Econst_int (Int.repr 1) tint)
            tuint))))
    (Ssequence
      (Ssequence
        (Sset _t'27
          (Ederef
            (Ebinop Oadd (Evar _r (tarray tuint 17))
              (Econst_int (Int.repr 3) tint) (tptr tuint)) tuint))
        (Sassign
          (Ederef
            (Ebinop Oadd (Evar _r (tarray tuint 17))
              (Econst_int (Int.repr 3) tint) (tptr tuint)) tuint)
          (Ebinop Oand (Etempvar _t'27 tuint) (Econst_int (Int.repr 15) tint)
            tuint)))
      (Ssequence
        (Ssequence
          (Sset _t'26
            (Ederef
              (Ebinop Oadd (Evar _r (tarray tuint 17))
                (Econst_int (Int.repr 4) tint) (tptr tuint)) tuint))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _r (tarray tuint 17))
                (Econst_int (Int.repr 4) tint) (tptr tuint)) tuint)
            (Ebinop Oand (Etempvar _t'26 tuint)
              (Econst_int (Int.repr 252) tint) tuint)))
        (Ssequence
          (Ssequence
            (Sset _t'25
              (Ederef
                (Ebinop Oadd (Evar _r (tarray tuint 17))
                  (Econst_int (Int.repr 7) tint) (tptr tuint)) tuint))
            (Sassign
              (Ederef
                (Ebinop Oadd (Evar _r (tarray tuint 17))
                  (Econst_int (Int.repr 7) tint) (tptr tuint)) tuint)
              (Ebinop Oand (Etempvar _t'25 tuint)
                (Econst_int (Int.repr 15) tint) tuint)))
          (Ssequence
            (Ssequence
              (Sset _t'24
                (Ederef
                  (Ebinop Oadd (Evar _r (tarray tuint 17))
                    (Econst_int (Int.repr 8) tint) (tptr tuint)) tuint))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Evar _r (tarray tuint 17))
                    (Econst_int (Int.repr 8) tint) (tptr tuint)) tuint)
                (Ebinop Oand (Etempvar _t'24 tuint)
                  (Econst_int (Int.repr 252) tint) tuint)))
            (Ssequence
              (Ssequence
                (Sset _t'23
                  (Ederef
                    (Ebinop Oadd (Evar _r (tarray tuint 17))
                      (Econst_int (Int.repr 11) tint) (tptr tuint)) tuint))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Evar _r (tarray tuint 17))
                      (Econst_int (Int.repr 11) tint) (tptr tuint)) tuint)
                  (Ebinop Oand (Etempvar _t'23 tuint)
                    (Econst_int (Int.repr 15) tint) tuint)))
              (Ssequence
                (Ssequence
                  (Sset _t'22
                    (Ederef
                      (Ebinop Oadd (Evar _r (tarray tuint 17))
                        (Econst_int (Int.repr 12) tint) (tptr tuint)) tuint))
                  (Sassign
                    (Ederef
                      (Ebinop Oadd (Evar _r (tarray tuint 17))
                        (Econst_int (Int.repr 12) tint) (tptr tuint)) tuint)
                    (Ebinop Oand (Etempvar _t'22 tuint)
                      (Econst_int (Int.repr 252) tint) tuint)))
                (Ssequence
                  (Ssequence
                    (Sset _t'21
                      (Ederef
                        (Ebinop Oadd (Evar _r (tarray tuint 17))
                          (Econst_int (Int.repr 15) tint) (tptr tuint))
                        tuint))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Evar _r (tarray tuint 17))
                          (Econst_int (Int.repr 15) tint) (tptr tuint))
                        tuint)
                      (Ebinop Oand (Etempvar _t'21 tuint)
                        (Econst_int (Int.repr 15) tint) tuint)))
                  (Ssequence
                    (Swhile
                      (Ebinop Ogt (Etempvar _n tulong)
                        (Econst_int (Int.repr 0) tint) tint)
                      (Ssequence
                        (Ssequence
                          (Sset _j (Econst_int (Int.repr 0) tint))
                          (Sloop
                            (Ssequence
                              (Sifthenelse (Ebinop Olt (Etempvar _j tuint)
                                             (Econst_int (Int.repr 17) tint)
                                             tint)
                                Sskip
                                Sbreak)
                              (Sassign
                                (Ederef
                                  (Ebinop Oadd (Evar _c (tarray tuint 17))
                                    (Etempvar _j tuint) (tptr tuint)) tuint)
                                (Econst_int (Int.repr 0) tint)))
                            (Sset _j
                              (Ebinop Oadd (Etempvar _j tuint)
                                (Econst_int (Int.repr 1) tint) tuint))))
                        (Ssequence
                          (Ssequence
                            (Sset _j (Econst_int (Int.repr 0) tint))
                            (Sloop
                              (Ssequence
                                (Ssequence
                                  (Sifthenelse (Ebinop Olt
                                                 (Etempvar _j tuint)
                                                 (Econst_int (Int.repr 16) tint)
                                                 tint)
                                    (Sset _t'2
                                      (Ecast
                                        (Ebinop Olt (Etempvar _j tuint)
                                          (Etempvar _n tulong) tint) tbool))
                                    (Sset _t'2
                                      (Econst_int (Int.repr 0) tint)))
                                  (Sifthenelse (Etempvar _t'2 tint)
                                    Sskip
                                    Sbreak))
                                (Ssequence
                                  (Sset _t'20
                                    (Ederef
                                      (Ebinop Oadd
                                        (Etempvar _m (tptr tuchar))
                                        (Etempvar _j tuint) (tptr tuchar))
                                      tuchar))
                                  (Sassign
                                    (Ederef
                                      (Ebinop Oadd
                                        (Evar _c (tarray tuint 17))
                                        (Etempvar _j tuint) (tptr tuint))
                                      tuint) (Etempvar _t'20 tuchar))))
                              (Sset _j
                                (Ebinop Oadd (Etempvar _j tuint)
                                  (Econst_int (Int.repr 1) tint) tuint))))
                          (Ssequence
                            (Sassign
                              (Ederef
                                (Ebinop Oadd (Evar _c (tarray tuint 17))
                                  (Etempvar _j tuint) (tptr tuint)) tuint)
                              (Econst_int (Int.repr 1) tint))
                            (Ssequence
                              (Sset _m
                                (Ebinop Oadd (Etempvar _m (tptr tuchar))
                                  (Etempvar _j tuint) (tptr tuchar)))
                              (Ssequence
                                (Sset _n
                                  (Ebinop Osub (Etempvar _n tulong)
                                    (Etempvar _j tuint) tulong))
                                (Ssequence
                                  (Scall None
                                    (Evar _add1305 (Tfunction
                                                     (Tcons (tptr tuint)
                                                       (Tcons (tptr tuint)
                                                         Tnil)) tvoid
                                                     cc_default))
                                    ((Evar _h (tarray tuint 17)) ::
                                     (Evar _c (tarray tuint 17)) :: nil))
                                  (Ssequence
                                    (Ssequence
                                      (Sset _i
                                        (Econst_int (Int.repr 0) tint))
                                      (Sloop
                                        (Ssequence
                                          (Sifthenelse (Ebinop Olt
                                                         (Etempvar _i tuint)
                                                         (Econst_int (Int.repr 17) tint)
                                                         tint)
                                            Sskip
                                            Sbreak)
                                          (Ssequence
                                            (Sassign
                                              (Ederef
                                                (Ebinop Oadd
                                                  (Evar _x (tarray tuint 17))
                                                  (Etempvar _i tuint)
                                                  (tptr tuint)) tuint)
                                              (Econst_int (Int.repr 0) tint))
                                            (Ssequence
                                              (Sset _j
                                                (Econst_int (Int.repr 0) tint))
                                              (Sloop
                                                (Ssequence
                                                  (Sifthenelse (Ebinop Olt
                                                                 (Etempvar _j tuint)
                                                                 (Econst_int (Int.repr 17) tint)
                                                                 tint)
                                                    Sskip
                                                    Sbreak)
                                                  (Ssequence
                                                    (Sifthenelse (Ebinop Ole
                                                                   (Etempvar _j tuint)
                                                                   (Etempvar _i tuint)
                                                                   tint)
                                                      (Ssequence
                                                        (Sset _t'19
                                                          (Ederef
                                                            (Ebinop Oadd
                                                              (Evar _r (tarray tuint 17))
                                                              (Ebinop Osub
                                                                (Etempvar _i tuint)
                                                                (Etempvar _j tuint)
                                                                tuint)
                                                              (tptr tuint))
                                                            tuint))
                                                        (Sset _t'3
                                                          (Ecast
                                                            (Etempvar _t'19 tuint)
                                                            tuint)))
                                                      (Ssequence
                                                        (Sset _t'18
                                                          (Ederef
                                                            (Ebinop Oadd
                                                              (Evar _r (tarray tuint 17))
                                                              (Ebinop Osub
                                                                (Ebinop Oadd
                                                                  (Etempvar _i tuint)
                                                                  (Econst_int (Int.repr 17) tint)
                                                                  tuint)
                                                                (Etempvar _j tuint)
                                                                tuint)
                                                              (tptr tuint))
                                                            tuint))
                                                        (Sset _t'3
                                                          (Ecast
                                                            (Ebinop Omul
                                                              (Econst_int (Int.repr 320) tint)
                                                              (Etempvar _t'18 tuint)
                                                              tuint) tuint))))
                                                    (Ssequence
                                                      (Sset _t'16
                                                        (Ederef
                                                          (Ebinop Oadd
                                                            (Evar _x (tarray tuint 17))
                                                            (Etempvar _i tuint)
                                                            (tptr tuint))
                                                          tuint))
                                                      (Ssequence
                                                        (Sset _t'17
                                                          (Ederef
                                                            (Ebinop Oadd
                                                              (Evar _h (tarray tuint 17))
                                                              (Etempvar _j tuint)
                                                              (tptr tuint))
                                                            tuint))
                                                        (Sassign
                                                          (Ederef
                                                            (Ebinop Oadd
                                                              (Evar _x (tarray tuint 17))
                                                              (Etempvar _i tuint)
                                                              (tptr tuint))
                                                            tuint)
                                                          (Ebinop Oadd
                                                            (Etempvar _t'16 tuint)
                                                            (Ebinop Omul
                                                              (Etempvar _t'17 tuint)
                                                              (Etempvar _t'3 tuint)
                                                              tuint) tuint))))))
                                                (Sset _j
                                                  (Ebinop Oadd
                                                    (Etempvar _j tuint)
                                                    (Econst_int (Int.repr 1) tint)
                                                    tuint))))))
                                        (Sset _i
                                          (Ebinop Oadd (Etempvar _i tuint)
                                            (Econst_int (Int.repr 1) tint)
                                            tuint))))
                                    (Ssequence
                                      (Ssequence
                                        (Sset _i
                                          (Econst_int (Int.repr 0) tint))
                                        (Sloop
                                          (Ssequence
                                            (Sifthenelse (Ebinop Olt
                                                           (Etempvar _i tuint)
                                                           (Econst_int (Int.repr 17) tint)
                                                           tint)
                                              Sskip
                                              Sbreak)
                                            (Ssequence
                                              (Sset _t'15
                                                (Ederef
                                                  (Ebinop Oadd
                                                    (Evar _x (tarray tuint 17))
                                                    (Etempvar _i tuint)
                                                    (tptr tuint)) tuint))
                                              (Sassign
                                                (Ederef
                                                  (Ebinop Oadd
                                                    (Evar _h (tarray tuint 17))
                                                    (Etempvar _i tuint)
                                                    (tptr tuint)) tuint)
                                                (Etempvar _t'15 tuint))))
                                          (Sset _i
                                            (Ebinop Oadd (Etempvar _i tuint)
                                              (Econst_int (Int.repr 1) tint)
                                              tuint))))
                                      (Ssequence
                                        (Sset _u
                                          (Econst_int (Int.repr 0) tint))
                                        (Ssequence
                                          (Ssequence
                                            (Sset _j
                                              (Econst_int (Int.repr 0) tint))
                                            (Sloop
                                              (Ssequence
                                                (Sifthenelse (Ebinop Olt
                                                               (Etempvar _j tuint)
                                                               (Econst_int (Int.repr 16) tint)
                                                               tint)
                                                  Sskip
                                                  Sbreak)
                                                (Ssequence
                                                  (Ssequence
                                                    (Sset _t'14
                                                      (Ederef
                                                        (Ebinop Oadd
                                                          (Evar _h (tarray tuint 17))
                                                          (Etempvar _j tuint)
                                                          (tptr tuint))
                                                        tuint))
                                                    (Sset _u
                                                      (Ebinop Oadd
                                                        (Etempvar _u tuint)
                                                        (Etempvar _t'14 tuint)
                                                        tuint)))
                                                  (Ssequence
                                                    (Sassign
                                                      (Ederef
                                                        (Ebinop Oadd
                                                          (Evar _h (tarray tuint 17))
                                                          (Etempvar _j tuint)
                                                          (tptr tuint))
                                                        tuint)
                                                      (Ebinop Oand
                                                        (Etempvar _u tuint)
                                                        (Econst_int (Int.repr 255) tint)
                                                        tuint))
                                                    (Sset _u
                                                      (Ebinop Oshr
                                                        (Etempvar _u tuint)
                                                        (Econst_int (Int.repr 8) tint)
                                                        tuint)))))
                                              (Sset _j
                                                (Ebinop Oadd
                                                  (Etempvar _j tuint)
                                                  (Econst_int (Int.repr 1) tint)
                                                  tuint))))
                                          (Ssequence
                                            (Ssequence
                                              (Sset _t'13
                                                (Ederef
                                                  (Ebinop Oadd
                                                    (Evar _h (tarray tuint 17))
                                                    (Econst_int (Int.repr 16) tint)
                                                    (tptr tuint)) tuint))
                                              (Sset _u
                                                (Ebinop Oadd
                                                  (Etempvar _u tuint)
                                                  (Etempvar _t'13 tuint)
                                                  tuint)))
                                            (Ssequence
                                              (Sassign
                                                (Ederef
                                                  (Ebinop Oadd
                                                    (Evar _h (tarray tuint 17))
                                                    (Econst_int (Int.repr 16) tint)
                                                    (tptr tuint)) tuint)
                                                (Ebinop Oand
                                                  (Etempvar _u tuint)
                                                  (Econst_int (Int.repr 3) tint)
                                                  tuint))
                                              (Ssequence
                                                (Sset _u
                                                  (Ebinop Omul
                                                    (Econst_int (Int.repr 5) tint)
                                                    (Ebinop Oshr
                                                      (Etempvar _u tuint)
                                                      (Econst_int (Int.repr 2) tint)
                                                      tuint) tuint))
                                                (Ssequence
                                                  (Ssequence
                                                    (Sset _j
                                                      (Econst_int (Int.repr 0) tint))
                                                    (Sloop
                                                      (Ssequence
                                                        (Sifthenelse 
                                                          (Ebinop Olt
                                                            (Etempvar _j tuint)
                                                            (Econst_int (Int.repr 16) tint)
                                                            tint)
                                                          Sskip
                                                          Sbreak)
                                                        (Ssequence
                                                          (Ssequence
                                                            (Sset _t'12
                                                              (Ederef
                                                                (Ebinop Oadd
                                                                  (Evar _h (tarray tuint 17))
                                                                  (Etempvar _j tuint)
                                                                  (tptr tuint))
                                                                tuint))
                                                            (Sset _u
                                                              (Ebinop Oadd
                                                                (Etempvar _u tuint)
                                                                (Etempvar _t'12 tuint)
                                                                tuint)))
                                                          (Ssequence
                                                            (Sassign
                                                              (Ederef
                                                                (Ebinop Oadd
                                                                  (Evar _h (tarray tuint 17))
                                                                  (Etempvar _j tuint)
                                                                  (tptr tuint))
                                                                tuint)
                                                              (Ebinop Oand
                                                                (Etempvar _u tuint)
                                                                (Econst_int (Int.repr 255) tint)
                                                                tuint))
                                                            (Sset _u
                                                              (Ebinop Oshr
                                                                (Etempvar _u tuint)
                                                                (Econst_int (Int.repr 8) tint)
                                                                tuint)))))
                                                      (Sset _j
                                                        (Ebinop Oadd
                                                          (Etempvar _j tuint)
                                                          (Econst_int (Int.repr 1) tint)
                                                          tuint))))
                                                  (Ssequence
                                                    (Ssequence
                                                      (Sset _t'11
                                                        (Ederef
                                                          (Ebinop Oadd
                                                            (Evar _h (tarray tuint 17))
                                                            (Econst_int (Int.repr 16) tint)
                                                            (tptr tuint))
                                                          tuint))
                                                      (Sset _u
                                                        (Ebinop Oadd
                                                          (Etempvar _u tuint)
                                                          (Etempvar _t'11 tuint)
                                                          tuint)))
                                                    (Sassign
                                                      (Ederef
                                                        (Ebinop Oadd
                                                          (Evar _h (tarray tuint 17))
                                                          (Econst_int (Int.repr 16) tint)
                                                          (tptr tuint))
                                                        tuint)
                                                      (Etempvar _u tuint))))))))))))))))))
                    (Ssequence
                      (Ssequence
                        (Sset _j (Econst_int (Int.repr 0) tint))
                        (Sloop
                          (Ssequence
                            (Sifthenelse (Ebinop Olt (Etempvar _j tuint)
                                           (Econst_int (Int.repr 17) tint)
                                           tint)
                              Sskip
                              Sbreak)
                            (Ssequence
                              (Sset _t'10
                                (Ederef
                                  (Ebinop Oadd (Evar _h (tarray tuint 17))
                                    (Etempvar _j tuint) (tptr tuint)) tuint))
                              (Sassign
                                (Ederef
                                  (Ebinop Oadd (Evar _g (tarray tuint 17))
                                    (Etempvar _j tuint) (tptr tuint)) tuint)
                                (Etempvar _t'10 tuint))))
                          (Sset _j
                            (Ebinop Oadd (Etempvar _j tuint)
                              (Econst_int (Int.repr 1) tint) tuint))))
                      (Ssequence
                        (Scall None
                          (Evar _add1305 (Tfunction
                                           (Tcons (tptr tuint)
                                             (Tcons (tptr tuint) Tnil)) tvoid
                                           cc_default))
                          ((Evar _h (tarray tuint 17)) ::
                           (Evar _minusp (tarray tuint 17)) :: nil))
                        (Ssequence
                          (Ssequence
                            (Sset _t'9
                              (Ederef
                                (Ebinop Oadd (Evar _h (tarray tuint 17))
                                  (Econst_int (Int.repr 16) tint)
                                  (tptr tuint)) tuint))
                            (Sset _s
                              (Eunop Oneg
                                (Ebinop Oshr (Etempvar _t'9 tuint)
                                  (Econst_int (Int.repr 7) tint) tuint)
                                tuint)))
                          (Ssequence
                            (Ssequence
                              (Sset _j (Econst_int (Int.repr 0) tint))
                              (Sloop
                                (Ssequence
                                  (Sifthenelse (Ebinop Olt
                                                 (Etempvar _j tuint)
                                                 (Econst_int (Int.repr 17) tint)
                                                 tint)
                                    Sskip
                                    Sbreak)
                                  (Ssequence
                                    (Sset _t'6
                                      (Ederef
                                        (Ebinop Oadd
                                          (Evar _h (tarray tuint 17))
                                          (Etempvar _j tuint) (tptr tuint))
                                        tuint))
                                    (Ssequence
                                      (Sset _t'7
                                        (Ederef
                                          (Ebinop Oadd
                                            (Evar _g (tarray tuint 17))
                                            (Etempvar _j tuint) (tptr tuint))
                                          tuint))
                                      (Ssequence
                                        (Sset _t'8
                                          (Ederef
                                            (Ebinop Oadd
                                              (Evar _h (tarray tuint 17))
                                              (Etempvar _j tuint)
                                              (tptr tuint)) tuint))
                                        (Sassign
                                          (Ederef
                                            (Ebinop Oadd
                                              (Evar _h (tarray tuint 17))
                                              (Etempvar _j tuint)
                                              (tptr tuint)) tuint)
                                          (Ebinop Oxor (Etempvar _t'6 tuint)
                                            (Ebinop Oand (Etempvar _s tuint)
                                              (Ebinop Oxor
                                                (Etempvar _t'7 tuint)
                                                (Etempvar _t'8 tuint) tuint)
                                              tuint) tuint))))))
                                (Sset _j
                                  (Ebinop Oadd (Etempvar _j tuint)
                                    (Econst_int (Int.repr 1) tint) tuint))))
                            (Ssequence
                              (Ssequence
                                (Sset _j (Econst_int (Int.repr 0) tint))
                                (Sloop
                                  (Ssequence
                                    (Sifthenelse (Ebinop Olt
                                                   (Etempvar _j tuint)
                                                   (Econst_int (Int.repr 16) tint)
                                                   tint)
                                      Sskip
                                      Sbreak)
                                    (Ssequence
                                      (Sset _t'5
                                        (Ederef
                                          (Ebinop Oadd
                                            (Etempvar _k (tptr tuchar))
                                            (Ebinop Oadd (Etempvar _j tuint)
                                              (Econst_int (Int.repr 16) tint)
                                              tuint) (tptr tuchar)) tuchar))
                                      (Sassign
                                        (Ederef
                                          (Ebinop Oadd
                                            (Evar _c (tarray tuint 17))
                                            (Etempvar _j tuint) (tptr tuint))
                                          tuint) (Etempvar _t'5 tuchar))))
                                  (Sset _j
                                    (Ebinop Oadd (Etempvar _j tuint)
                                      (Econst_int (Int.repr 1) tint) tuint))))
                              (Ssequence
                                (Sassign
                                  (Ederef
                                    (Ebinop Oadd (Evar _c (tarray tuint 17))
                                      (Econst_int (Int.repr 16) tint)
                                      (tptr tuint)) tuint)
                                  (Econst_int (Int.repr 0) tint))
                                (Ssequence
                                  (Scall None
                                    (Evar _add1305 (Tfunction
                                                     (Tcons (tptr tuint)
                                                       (Tcons (tptr tuint)
                                                         Tnil)) tvoid
                                                     cc_default))
                                    ((Evar _h (tarray tuint 17)) ::
                                     (Evar _c (tarray tuint 17)) :: nil))
                                  (Ssequence
                                    (Ssequence
                                      (Sset _j
                                        (Econst_int (Int.repr 0) tint))
                                      (Sloop
                                        (Ssequence
                                          (Sifthenelse (Ebinop Olt
                                                         (Etempvar _j tuint)
                                                         (Econst_int (Int.repr 16) tint)
                                                         tint)
                                            Sskip
                                            Sbreak)
                                          (Ssequence
                                            (Sset _t'4
                                              (Ederef
                                                (Ebinop Oadd
                                                  (Evar _h (tarray tuint 17))
                                                  (Etempvar _j tuint)
                                                  (tptr tuint)) tuint))
                                            (Sassign
                                              (Ederef
                                                (Ebinop Oadd
                                                  (Etempvar _out (tptr tuchar))
                                                  (Etempvar _j tuint)
                                                  (tptr tuchar)) tuchar)
                                              (Etempvar _t'4 tuint))))
                                        (Sset _j
                                          (Ebinop Oadd (Etempvar _j tuint)
                                            (Econst_int (Int.repr 1) tint)
                                            tuint))))
                                    (Sreturn (Some (Econst_int (Int.repr 0) tint)))))))))))))))))))))
|}.

Definition f_crypto_onetimeauth_poly1305_tweet_verify := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_h, (tptr tuchar)) :: (_m, (tptr tuchar)) :: (_n, tulong) ::
                (_k, (tptr tuchar)) :: nil);
  fn_vars := ((_x, (tarray tuchar 16)) :: nil);
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _crypto_onetimeauth_poly1305_tweet (Tfunction
                                               (Tcons (tptr tuchar)
                                                 (Tcons (tptr tuchar)
                                                   (Tcons tulong
                                                     (Tcons (tptr tuchar)
                                                       Tnil)))) tint
                                               cc_default))
    ((Evar _x (tarray tuchar 16)) :: (Etempvar _m (tptr tuchar)) ::
     (Etempvar _n tulong) :: (Etempvar _k (tptr tuchar)) :: nil))
  (Ssequence
    (Scall (Some _t'1)
      (Evar _crypto_verify_16_tweet (Tfunction
                                      (Tcons (tptr tuchar)
                                        (Tcons (tptr tuchar) Tnil)) tint
                                      cc_default))
      ((Etempvar _h (tptr tuchar)) :: (Evar _x (tarray tuchar 16)) :: nil))
    (Sreturn (Some (Etempvar _t'1 tint)))))
|}.

Definition f_crypto_secretbox_xsalsa20poly1305_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_c, (tptr tuchar)) :: (_m, (tptr tuchar)) :: (_d, tulong) ::
                (_n, (tptr tuchar)) :: (_k, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: nil);
  fn_body :=
(Ssequence
  (Sifthenelse (Ebinop Olt (Etempvar _d tulong)
                 (Econst_int (Int.repr 32) tint) tint)
    (Sreturn (Some (Eunop Oneg (Econst_int (Int.repr 1) tint) tint)))
    Sskip)
  (Ssequence
    (Scall None
      (Evar _crypto_stream_xsalsa20_tweet_xor (Tfunction
                                                (Tcons (tptr tuchar)
                                                  (Tcons (tptr tuchar)
                                                    (Tcons tulong
                                                      (Tcons (tptr tuchar)
                                                        (Tcons (tptr tuchar)
                                                          Tnil))))) tint
                                                cc_default))
      ((Etempvar _c (tptr tuchar)) :: (Etempvar _m (tptr tuchar)) ::
       (Etempvar _d tulong) :: (Etempvar _n (tptr tuchar)) ::
       (Etempvar _k (tptr tuchar)) :: nil))
    (Ssequence
      (Scall None
        (Evar _crypto_onetimeauth_poly1305_tweet (Tfunction
                                                   (Tcons (tptr tuchar)
                                                     (Tcons (tptr tuchar)
                                                       (Tcons tulong
                                                         (Tcons (tptr tuchar)
                                                           Tnil)))) tint
                                                   cc_default))
        ((Ebinop Oadd (Etempvar _c (tptr tuchar))
           (Econst_int (Int.repr 16) tint) (tptr tuchar)) ::
         (Ebinop Oadd (Etempvar _c (tptr tuchar))
           (Econst_int (Int.repr 32) tint) (tptr tuchar)) ::
         (Ebinop Osub (Etempvar _d tulong) (Econst_int (Int.repr 32) tint)
           tulong) :: (Etempvar _c (tptr tuchar)) :: nil))
      (Ssequence
        (Ssequence
          (Sset _i (Econst_int (Int.repr 0) tint))
          (Sloop
            (Ssequence
              (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                             (Econst_int (Int.repr 16) tint) tint)
                Sskip
                Sbreak)
              (Sassign
                (Ederef
                  (Ebinop Oadd (Etempvar _c (tptr tuchar)) (Etempvar _i tint)
                    (tptr tuchar)) tuchar) (Econst_int (Int.repr 0) tint)))
            (Sset _i
              (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
                tint))))
        (Sreturn (Some (Econst_int (Int.repr 0) tint)))))))
|}.

Definition f_crypto_secretbox_xsalsa20poly1305_tweet_open := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_m, (tptr tuchar)) :: (_c, (tptr tuchar)) :: (_d, tulong) ::
                (_n, (tptr tuchar)) :: (_k, (tptr tuchar)) :: nil);
  fn_vars := ((_x, (tarray tuchar 32)) :: nil);
  fn_temps := ((_i, tint) :: (_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Sifthenelse (Ebinop Olt (Etempvar _d tulong)
                 (Econst_int (Int.repr 32) tint) tint)
    (Sreturn (Some (Eunop Oneg (Econst_int (Int.repr 1) tint) tint)))
    Sskip)
  (Ssequence
    (Scall None
      (Evar _crypto_stream_xsalsa20_tweet (Tfunction
                                            (Tcons (tptr tuchar)
                                              (Tcons tulong
                                                (Tcons (tptr tuchar)
                                                  (Tcons (tptr tuchar) Tnil))))
                                            tint cc_default))
      ((Evar _x (tarray tuchar 32)) :: (Econst_int (Int.repr 32) tint) ::
       (Etempvar _n (tptr tuchar)) :: (Etempvar _k (tptr tuchar)) :: nil))
    (Ssequence
      (Ssequence
        (Scall (Some _t'1)
          (Evar _crypto_onetimeauth_poly1305_tweet_verify (Tfunction
                                                            (Tcons
                                                              (tptr tuchar)
                                                              (Tcons
                                                                (tptr tuchar)
                                                                (Tcons tulong
                                                                  (Tcons
                                                                    (tptr tuchar)
                                                                    Tnil))))
                                                            tint cc_default))
          ((Ebinop Oadd (Etempvar _c (tptr tuchar))
             (Econst_int (Int.repr 16) tint) (tptr tuchar)) ::
           (Ebinop Oadd (Etempvar _c (tptr tuchar))
             (Econst_int (Int.repr 32) tint) (tptr tuchar)) ::
           (Ebinop Osub (Etempvar _d tulong) (Econst_int (Int.repr 32) tint)
             tulong) :: (Evar _x (tarray tuchar 32)) :: nil))
        (Sifthenelse (Ebinop One (Etempvar _t'1 tint)
                       (Econst_int (Int.repr 0) tint) tint)
          (Sreturn (Some (Eunop Oneg (Econst_int (Int.repr 1) tint) tint)))
          Sskip))
      (Ssequence
        (Scall None
          (Evar _crypto_stream_xsalsa20_tweet_xor (Tfunction
                                                    (Tcons (tptr tuchar)
                                                      (Tcons (tptr tuchar)
                                                        (Tcons tulong
                                                          (Tcons
                                                            (tptr tuchar)
                                                            (Tcons
                                                              (tptr tuchar)
                                                              Tnil))))) tint
                                                    cc_default))
          ((Etempvar _m (tptr tuchar)) :: (Etempvar _c (tptr tuchar)) ::
           (Etempvar _d tulong) :: (Etempvar _n (tptr tuchar)) ::
           (Etempvar _k (tptr tuchar)) :: nil))
        (Ssequence
          (Ssequence
            (Sset _i (Econst_int (Int.repr 0) tint))
            (Sloop
              (Ssequence
                (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                               (Econst_int (Int.repr 32) tint) tint)
                  Sskip
                  Sbreak)
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Etempvar _m (tptr tuchar))
                      (Etempvar _i tint) (tptr tuchar)) tuchar)
                  (Econst_int (Int.repr 0) tint)))
              (Sset _i
                (Ebinop Oadd (Etempvar _i tint)
                  (Econst_int (Int.repr 1) tint) tint))))
          (Sreturn (Some (Econst_int (Int.repr 0) tint))))))))
|}.

Definition f_set25519 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_r, (tptr tlong)) :: (_a, (tptr tlong)) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Sset _i (Econst_int (Int.repr 0) tint))
  (Sloop
    (Ssequence
      (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                     (Econst_int (Int.repr 16) tint) tint)
        Sskip
        Sbreak)
      (Ssequence
        (Sset _t'1
          (Ederef
            (Ebinop Oadd (Etempvar _a (tptr tlong)) (Etempvar _i tint)
              (tptr tlong)) tlong))
        (Sassign
          (Ederef
            (Ebinop Oadd (Etempvar _r (tptr tlong)) (Etempvar _i tint)
              (tptr tlong)) tlong) (Etempvar _t'1 tlong))))
    (Sset _i
      (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
|}.

Definition f_car25519 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tlong)) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: (_c, tlong) :: (_t'4, tlong) :: (_t'3, tlong) ::
               (_t'2, tlong) :: (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Sset _i (Econst_int (Int.repr 0) tint))
  (Sloop
    (Ssequence
      (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                     (Econst_int (Int.repr 16) tint) tint)
        Sskip
        Sbreak)
      (Ssequence
        (Ssequence
          (Sset _t'4
            (Ederef
              (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _i tint)
                (tptr tlong)) tlong))
          (Sassign
            (Ederef
              (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _i tint)
                (tptr tlong)) tlong)
            (Ebinop Oadd (Etempvar _t'4 tlong)
              (Ebinop Oshl (Econst_long (Int64.repr 1) tlong)
                (Econst_int (Int.repr 16) tint) tlong) tlong)))
        (Ssequence
          (Ssequence
            (Sset _t'3
              (Ederef
                (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _i tint)
                  (tptr tlong)) tlong))
            (Sset _c
              (Ebinop Oshr (Etempvar _t'3 tlong)
                (Econst_int (Int.repr 16) tint) tlong)))
          (Ssequence
            (Ssequence
              (Sset _t'2
                (Ederef
                  (Ebinop Oadd (Etempvar _o (tptr tlong))
                    (Ebinop Omul
                      (Ebinop Oadd (Etempvar _i tint)
                        (Econst_int (Int.repr 1) tint) tint)
                      (Ebinop Olt (Etempvar _i tint)
                        (Econst_int (Int.repr 15) tint) tint) tint)
                    (tptr tlong)) tlong))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Etempvar _o (tptr tlong))
                    (Ebinop Omul
                      (Ebinop Oadd (Etempvar _i tint)
                        (Econst_int (Int.repr 1) tint) tint)
                      (Ebinop Olt (Etempvar _i tint)
                        (Econst_int (Int.repr 15) tint) tint) tint)
                    (tptr tlong)) tlong)
                (Ebinop Oadd (Etempvar _t'2 tlong)
                  (Ebinop Oadd
                    (Ebinop Osub (Etempvar _c tlong)
                      (Econst_int (Int.repr 1) tint) tlong)
                    (Ebinop Omul
                      (Ebinop Omul (Econst_int (Int.repr 37) tint)
                        (Ebinop Osub (Etempvar _c tlong)
                          (Econst_int (Int.repr 1) tint) tlong) tlong)
                      (Ebinop Oeq (Etempvar _i tint)
                        (Econst_int (Int.repr 15) tint) tint) tlong) tlong)
                  tlong)))
            (Ssequence
              (Sset _t'1
                (Ederef
                  (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _i tint)
                    (tptr tlong)) tlong))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _i tint)
                    (tptr tlong)) tlong)
                (Ebinop Osub (Etempvar _t'1 tlong)
                  (Ebinop Oshl (Etempvar _c tlong)
                    (Econst_int (Int.repr 16) tint) tlong) tlong)))))))
    (Sset _i
      (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
|}.

Definition f_sel25519 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_p, (tptr tlong)) :: (_q, (tptr tlong)) :: (_b, tint) ::
                nil);
  fn_vars := nil;
  fn_temps := ((_t, tlong) :: (_i, tlong) :: (_c, tlong) :: (_t'4, tlong) ::
               (_t'3, tlong) :: (_t'2, tlong) :: (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Sset _c
    (Ecast
      (Eunop Onotint
        (Ebinop Osub (Etempvar _b tint) (Econst_int (Int.repr 1) tint) tint)
        tint) tlong))
  (Ssequence
    (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                       (Econst_int (Int.repr 16) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Ssequence
            (Sset _t'3
              (Ederef
                (Ebinop Oadd (Etempvar _p (tptr tlong)) (Etempvar _i tlong)
                  (tptr tlong)) tlong))
            (Ssequence
              (Sset _t'4
                (Ederef
                  (Ebinop Oadd (Etempvar _q (tptr tlong)) (Etempvar _i tlong)
                    (tptr tlong)) tlong))
              (Sset _t
                (Ebinop Oand (Etempvar _c tlong)
                  (Ebinop Oxor (Etempvar _t'3 tlong) (Etempvar _t'4 tlong)
                    tlong) tlong))))
          (Ssequence
            (Ssequence
              (Sset _t'2
                (Ederef
                  (Ebinop Oadd (Etempvar _p (tptr tlong)) (Etempvar _i tlong)
                    (tptr tlong)) tlong))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Etempvar _p (tptr tlong)) (Etempvar _i tlong)
                    (tptr tlong)) tlong)
                (Ebinop Oxor (Etempvar _t'2 tlong) (Etempvar _t tlong) tlong)))
            (Ssequence
              (Sset _t'1
                (Ederef
                  (Ebinop Oadd (Etempvar _q (tptr tlong)) (Etempvar _i tlong)
                    (tptr tlong)) tlong))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Etempvar _q (tptr tlong)) (Etempvar _i tlong)
                    (tptr tlong)) tlong)
                (Ebinop Oxor (Etempvar _t'1 tlong) (Etempvar _t tlong) tlong))))))
      (Sset _i
        (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
          tlong)))))
|}.

Definition f_pack25519 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tuchar)) :: (_n, (tptr tlong)) :: nil);
  fn_vars := ((_m, (tarray tlong 16)) :: (_t, (tarray tlong 16)) :: nil);
  fn_temps := ((_i, tint) :: (_j, tint) :: (_b, tint) :: (_t'11, tlong) ::
               (_t'10, tlong) :: (_t'9, tlong) :: (_t'8, tlong) ::
               (_t'7, tlong) :: (_t'6, tlong) :: (_t'5, tlong) ::
               (_t'4, tlong) :: (_t'3, tlong) :: (_t'2, tlong) ::
               (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _i (Econst_int (Int.repr 0) tint))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                       (Econst_int (Int.repr 16) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Sset _t'11
            (Ederef
              (Ebinop Oadd (Etempvar _n (tptr tlong)) (Etempvar _i tint)
                (tptr tlong)) tlong))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _t (tarray tlong 16)) (Etempvar _i tint)
                (tptr tlong)) tlong) (Etempvar _t'11 tlong))))
      (Sset _i
        (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
  (Ssequence
    (Scall None
      (Evar _car25519 (Tfunction (Tcons (tptr tlong) Tnil) tvoid cc_default))
      ((Evar _t (tarray tlong 16)) :: nil))
    (Ssequence
      (Scall None
        (Evar _car25519 (Tfunction (Tcons (tptr tlong) Tnil) tvoid
                          cc_default)) ((Evar _t (tarray tlong 16)) :: nil))
      (Ssequence
        (Scall None
          (Evar _car25519 (Tfunction (Tcons (tptr tlong) Tnil) tvoid
                            cc_default))
          ((Evar _t (tarray tlong 16)) :: nil))
        (Ssequence
          (Ssequence
            (Sset _j (Econst_int (Int.repr 0) tint))
            (Sloop
              (Ssequence
                (Sifthenelse (Ebinop Olt (Etempvar _j tint)
                               (Econst_int (Int.repr 2) tint) tint)
                  Sskip
                  Sbreak)
                (Ssequence
                  (Ssequence
                    (Sset _t'10
                      (Ederef
                        (Ebinop Oadd (Evar _t (tarray tlong 16))
                          (Econst_int (Int.repr 0) tint) (tptr tlong)) tlong))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Evar _m (tarray tlong 16))
                          (Econst_int (Int.repr 0) tint) (tptr tlong)) tlong)
                      (Ebinop Osub (Etempvar _t'10 tlong)
                        (Econst_int (Int.repr 65517) tint) tlong)))
                  (Ssequence
                    (Ssequence
                      (Sset _i (Econst_int (Int.repr 1) tint))
                      (Sloop
                        (Ssequence
                          (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                                         (Econst_int (Int.repr 15) tint)
                                         tint)
                            Sskip
                            Sbreak)
                          (Ssequence
                            (Ssequence
                              (Sset _t'8
                                (Ederef
                                  (Ebinop Oadd (Evar _t (tarray tlong 16))
                                    (Etempvar _i tint) (tptr tlong)) tlong))
                              (Ssequence
                                (Sset _t'9
                                  (Ederef
                                    (Ebinop Oadd (Evar _m (tarray tlong 16))
                                      (Ebinop Osub (Etempvar _i tint)
                                        (Econst_int (Int.repr 1) tint) tint)
                                      (tptr tlong)) tlong))
                                (Sassign
                                  (Ederef
                                    (Ebinop Oadd (Evar _m (tarray tlong 16))
                                      (Etempvar _i tint) (tptr tlong)) tlong)
                                  (Ebinop Osub
                                    (Ebinop Osub (Etempvar _t'8 tlong)
                                      (Econst_int (Int.repr 65535) tint)
                                      tlong)
                                    (Ebinop Oand
                                      (Ebinop Oshr (Etempvar _t'9 tlong)
                                        (Econst_int (Int.repr 16) tint)
                                        tlong) (Econst_int (Int.repr 1) tint)
                                      tlong) tlong))))
                            (Ssequence
                              (Sset _t'7
                                (Ederef
                                  (Ebinop Oadd (Evar _m (tarray tlong 16))
                                    (Ebinop Osub (Etempvar _i tint)
                                      (Econst_int (Int.repr 1) tint) tint)
                                    (tptr tlong)) tlong))
                              (Sassign
                                (Ederef
                                  (Ebinop Oadd (Evar _m (tarray tlong 16))
                                    (Ebinop Osub (Etempvar _i tint)
                                      (Econst_int (Int.repr 1) tint) tint)
                                    (tptr tlong)) tlong)
                                (Ebinop Oand (Etempvar _t'7 tlong)
                                  (Econst_int (Int.repr 65535) tint) tlong)))))
                        (Sset _i
                          (Ebinop Oadd (Etempvar _i tint)
                            (Econst_int (Int.repr 1) tint) tint))))
                    (Ssequence
                      (Ssequence
                        (Sset _t'5
                          (Ederef
                            (Ebinop Oadd (Evar _t (tarray tlong 16))
                              (Econst_int (Int.repr 15) tint) (tptr tlong))
                            tlong))
                        (Ssequence
                          (Sset _t'6
                            (Ederef
                              (Ebinop Oadd (Evar _m (tarray tlong 16))
                                (Econst_int (Int.repr 14) tint) (tptr tlong))
                              tlong))
                          (Sassign
                            (Ederef
                              (Ebinop Oadd (Evar _m (tarray tlong 16))
                                (Econst_int (Int.repr 15) tint) (tptr tlong))
                              tlong)
                            (Ebinop Osub
                              (Ebinop Osub (Etempvar _t'5 tlong)
                                (Econst_int (Int.repr 32767) tint) tlong)
                              (Ebinop Oand
                                (Ebinop Oshr (Etempvar _t'6 tlong)
                                  (Econst_int (Int.repr 16) tint) tlong)
                                (Econst_int (Int.repr 1) tint) tlong) tlong))))
                      (Ssequence
                        (Ssequence
                          (Sset _t'4
                            (Ederef
                              (Ebinop Oadd (Evar _m (tarray tlong 16))
                                (Econst_int (Int.repr 15) tint) (tptr tlong))
                              tlong))
                          (Sset _b
                            (Ecast
                              (Ebinop Oand
                                (Ebinop Oshr (Etempvar _t'4 tlong)
                                  (Econst_int (Int.repr 16) tint) tlong)
                                (Econst_int (Int.repr 1) tint) tlong) tint)))
                        (Ssequence
                          (Ssequence
                            (Sset _t'3
                              (Ederef
                                (Ebinop Oadd (Evar _m (tarray tlong 16))
                                  (Econst_int (Int.repr 14) tint)
                                  (tptr tlong)) tlong))
                            (Sassign
                              (Ederef
                                (Ebinop Oadd (Evar _m (tarray tlong 16))
                                  (Econst_int (Int.repr 14) tint)
                                  (tptr tlong)) tlong)
                              (Ebinop Oand (Etempvar _t'3 tlong)
                                (Econst_int (Int.repr 65535) tint) tlong)))
                          (Scall None
                            (Evar _sel25519 (Tfunction
                                              (Tcons (tptr tlong)
                                                (Tcons (tptr tlong)
                                                  (Tcons tint Tnil))) tvoid
                                              cc_default))
                            ((Evar _t (tarray tlong 16)) ::
                             (Evar _m (tarray tlong 16)) ::
                             (Ebinop Osub (Econst_int (Int.repr 1) tint)
                               (Etempvar _b tint) tint) :: nil))))))))
              (Sset _j
                (Ebinop Oadd (Etempvar _j tint)
                  (Econst_int (Int.repr 1) tint) tint))))
          (Ssequence
            (Sset _i (Econst_int (Int.repr 0) tint))
            (Sloop
              (Ssequence
                (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                               (Econst_int (Int.repr 16) tint) tint)
                  Sskip
                  Sbreak)
                (Ssequence
                  (Ssequence
                    (Sset _t'2
                      (Ederef
                        (Ebinop Oadd (Evar _t (tarray tlong 16))
                          (Etempvar _i tint) (tptr tlong)) tlong))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Etempvar _o (tptr tuchar))
                          (Ebinop Omul (Econst_int (Int.repr 2) tint)
                            (Etempvar _i tint) tint) (tptr tuchar)) tuchar)
                      (Ebinop Oand (Etempvar _t'2 tlong)
                        (Econst_int (Int.repr 255) tint) tlong)))
                  (Ssequence
                    (Sset _t'1
                      (Ederef
                        (Ebinop Oadd (Evar _t (tarray tlong 16))
                          (Etempvar _i tint) (tptr tlong)) tlong))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Etempvar _o (tptr tuchar))
                          (Ebinop Oadd
                            (Ebinop Omul (Econst_int (Int.repr 2) tint)
                              (Etempvar _i tint) tint)
                            (Econst_int (Int.repr 1) tint) tint)
                          (tptr tuchar)) tuchar)
                      (Ebinop Oshr (Etempvar _t'1 tlong)
                        (Econst_int (Int.repr 8) tint) tlong)))))
              (Sset _i
                (Ebinop Oadd (Etempvar _i tint)
                  (Econst_int (Int.repr 1) tint) tint)))))))))
|}.

Definition f_neq25519 := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_a, (tptr tlong)) :: (_b, (tptr tlong)) :: nil);
  fn_vars := ((_c, (tarray tuchar 32)) :: (_d, (tarray tuchar 32)) :: nil);
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _pack25519 (Tfunction
                       (Tcons (tptr tuchar) (Tcons (tptr tlong) Tnil)) tvoid
                       cc_default))
    ((Evar _c (tarray tuchar 32)) :: (Etempvar _a (tptr tlong)) :: nil))
  (Ssequence
    (Scall None
      (Evar _pack25519 (Tfunction
                         (Tcons (tptr tuchar) (Tcons (tptr tlong) Tnil))
                         tvoid cc_default))
      ((Evar _d (tarray tuchar 32)) :: (Etempvar _b (tptr tlong)) :: nil))
    (Ssequence
      (Scall (Some _t'1)
        (Evar _crypto_verify_32_tweet (Tfunction
                                        (Tcons (tptr tuchar)
                                          (Tcons (tptr tuchar) Tnil)) tint
                                        cc_default))
        ((Evar _c (tarray tuchar 32)) :: (Evar _d (tarray tuchar 32)) :: nil))
      (Sreturn (Some (Etempvar _t'1 tint))))))
|}.

Definition f_par25519 := {|
  fn_return := tuchar;
  fn_callconv := cc_default;
  fn_params := ((_a, (tptr tlong)) :: nil);
  fn_vars := ((_d, (tarray tuchar 32)) :: nil);
  fn_temps := ((_t'1, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _pack25519 (Tfunction
                       (Tcons (tptr tuchar) (Tcons (tptr tlong) Tnil)) tvoid
                       cc_default))
    ((Evar _d (tarray tuchar 32)) :: (Etempvar _a (tptr tlong)) :: nil))
  (Ssequence
    (Sset _t'1
      (Ederef
        (Ebinop Oadd (Evar _d (tarray tuchar 32))
          (Econst_int (Int.repr 0) tint) (tptr tuchar)) tuchar))
    (Sreturn (Some (Ebinop Oand (Etempvar _t'1 tuchar)
                     (Econst_int (Int.repr 1) tint) tint)))))
|}.

Definition f_unpack25519 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tlong)) :: (_n, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: (_t'3, tuchar) :: (_t'2, tuchar) ::
               (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _i (Econst_int (Int.repr 0) tint))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                       (Econst_int (Int.repr 16) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Sset _t'2
            (Ederef
              (Ebinop Oadd (Etempvar _n (tptr tuchar))
                (Ebinop Omul (Econst_int (Int.repr 2) tint)
                  (Etempvar _i tint) tint) (tptr tuchar)) tuchar))
          (Ssequence
            (Sset _t'3
              (Ederef
                (Ebinop Oadd (Etempvar _n (tptr tuchar))
                  (Ebinop Oadd
                    (Ebinop Omul (Econst_int (Int.repr 2) tint)
                      (Etempvar _i tint) tint) (Econst_int (Int.repr 1) tint)
                    tint) (tptr tuchar)) tuchar))
            (Sassign
              (Ederef
                (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _i tint)
                  (tptr tlong)) tlong)
              (Ebinop Oadd (Etempvar _t'2 tuchar)
                (Ebinop Oshl (Ecast (Etempvar _t'3 tuchar) tlong)
                  (Econst_int (Int.repr 8) tint) tlong) tlong)))))
      (Sset _i
        (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
  (Ssequence
    (Sset _t'1
      (Ederef
        (Ebinop Oadd (Etempvar _o (tptr tlong))
          (Econst_int (Int.repr 15) tint) (tptr tlong)) tlong))
    (Sassign
      (Ederef
        (Ebinop Oadd (Etempvar _o (tptr tlong))
          (Econst_int (Int.repr 15) tint) (tptr tlong)) tlong)
      (Ebinop Oand (Etempvar _t'1 tlong) (Econst_int (Int.repr 32767) tint)
        tlong))))
|}.

Definition f_A := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tlong)) :: (_a, (tptr tlong)) ::
                (_b, (tptr tlong)) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: (_t'2, tlong) :: (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Sset _i (Econst_int (Int.repr 0) tint))
  (Sloop
    (Ssequence
      (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                     (Econst_int (Int.repr 16) tint) tint)
        Sskip
        Sbreak)
      (Ssequence
        (Sset _t'1
          (Ederef
            (Ebinop Oadd (Etempvar _a (tptr tlong)) (Etempvar _i tint)
              (tptr tlong)) tlong))
        (Ssequence
          (Sset _t'2
            (Ederef
              (Ebinop Oadd (Etempvar _b (tptr tlong)) (Etempvar _i tint)
                (tptr tlong)) tlong))
          (Sassign
            (Ederef
              (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _i tint)
                (tptr tlong)) tlong)
            (Ebinop Oadd (Etempvar _t'1 tlong) (Etempvar _t'2 tlong) tlong)))))
    (Sset _i
      (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
|}.

Definition f_Z := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tlong)) :: (_a, (tptr tlong)) ::
                (_b, (tptr tlong)) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: (_t'2, tlong) :: (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Sset _i (Econst_int (Int.repr 0) tint))
  (Sloop
    (Ssequence
      (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                     (Econst_int (Int.repr 16) tint) tint)
        Sskip
        Sbreak)
      (Ssequence
        (Sset _t'1
          (Ederef
            (Ebinop Oadd (Etempvar _a (tptr tlong)) (Etempvar _i tint)
              (tptr tlong)) tlong))
        (Ssequence
          (Sset _t'2
            (Ederef
              (Ebinop Oadd (Etempvar _b (tptr tlong)) (Etempvar _i tint)
                (tptr tlong)) tlong))
          (Sassign
            (Ederef
              (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _i tint)
                (tptr tlong)) tlong)
            (Ebinop Osub (Etempvar _t'1 tlong) (Etempvar _t'2 tlong) tlong)))))
    (Sset _i
      (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
|}.

Definition f_M := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tlong)) :: (_a, (tptr tlong)) ::
                (_b, (tptr tlong)) :: nil);
  fn_vars := ((_t, (tarray tlong 31)) :: nil);
  fn_temps := ((_i, tlong) :: (_j, tlong) :: (_t'6, tlong) ::
               (_t'5, tlong) :: (_t'4, tlong) :: (_t'3, tlong) ::
               (_t'2, tlong) :: (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                       (Econst_int (Int.repr 31) tint) tint)
          Sskip
          Sbreak)
        (Sassign
          (Ederef
            (Ebinop Oadd (Evar _t (tarray tlong 31)) (Etempvar _i tlong)
              (tptr tlong)) tlong) (Econst_int (Int.repr 0) tint)))
      (Sset _i
        (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
          tlong))))
  (Ssequence
    (Ssequence
      (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                         (Econst_int (Int.repr 16) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Sset _j (Ecast (Econst_int (Int.repr 0) tint) tlong))
            (Sloop
              (Ssequence
                (Sifthenelse (Ebinop Olt (Etempvar _j tlong)
                               (Econst_int (Int.repr 16) tint) tint)
                  Sskip
                  Sbreak)
                (Ssequence
                  (Sset _t'4
                    (Ederef
                      (Ebinop Oadd (Evar _t (tarray tlong 31))
                        (Ebinop Oadd (Etempvar _i tlong) (Etempvar _j tlong)
                          tlong) (tptr tlong)) tlong))
                  (Ssequence
                    (Sset _t'5
                      (Ederef
                        (Ebinop Oadd (Etempvar _a (tptr tlong))
                          (Etempvar _i tlong) (tptr tlong)) tlong))
                    (Ssequence
                      (Sset _t'6
                        (Ederef
                          (Ebinop Oadd (Etempvar _b (tptr tlong))
                            (Etempvar _j tlong) (tptr tlong)) tlong))
                      (Sassign
                        (Ederef
                          (Ebinop Oadd (Evar _t (tarray tlong 31))
                            (Ebinop Oadd (Etempvar _i tlong)
                              (Etempvar _j tlong) tlong) (tptr tlong)) tlong)
                        (Ebinop Oadd (Etempvar _t'4 tlong)
                          (Ebinop Omul (Etempvar _t'5 tlong)
                            (Etempvar _t'6 tlong) tlong) tlong))))))
              (Sset _j
                (Ebinop Oadd (Etempvar _j tlong)
                  (Econst_int (Int.repr 1) tint) tlong)))))
        (Sset _i
          (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
            tlong))))
    (Ssequence
      (Ssequence
        (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
        (Sloop
          (Ssequence
            (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                           (Econst_int (Int.repr 15) tint) tint)
              Sskip
              Sbreak)
            (Ssequence
              (Sset _t'2
                (Ederef
                  (Ebinop Oadd (Evar _t (tarray tlong 31))
                    (Etempvar _i tlong) (tptr tlong)) tlong))
              (Ssequence
                (Sset _t'3
                  (Ederef
                    (Ebinop Oadd (Evar _t (tarray tlong 31))
                      (Ebinop Oadd (Etempvar _i tlong)
                        (Econst_int (Int.repr 16) tint) tlong) (tptr tlong))
                    tlong))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Evar _t (tarray tlong 31))
                      (Etempvar _i tlong) (tptr tlong)) tlong)
                  (Ebinop Oadd (Etempvar _t'2 tlong)
                    (Ebinop Omul (Econst_int (Int.repr 38) tint)
                      (Etempvar _t'3 tlong) tlong) tlong)))))
          (Sset _i
            (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
              tlong))))
      (Ssequence
        (Ssequence
          (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
          (Sloop
            (Ssequence
              (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                             (Econst_int (Int.repr 16) tint) tint)
                Sskip
                Sbreak)
              (Ssequence
                (Sset _t'1
                  (Ederef
                    (Ebinop Oadd (Evar _t (tarray tlong 31))
                      (Etempvar _i tlong) (tptr tlong)) tlong))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Etempvar _o (tptr tlong))
                      (Etempvar _i tlong) (tptr tlong)) tlong)
                  (Etempvar _t'1 tlong))))
            (Sset _i
              (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
                tlong))))
        (Ssequence
          (Scall None
            (Evar _car25519 (Tfunction (Tcons (tptr tlong) Tnil) tvoid
                              cc_default))
            ((Etempvar _o (tptr tlong)) :: nil))
          (Scall None
            (Evar _car25519 (Tfunction (Tcons (tptr tlong) Tnil) tvoid
                              cc_default))
            ((Etempvar _o (tptr tlong)) :: nil)))))))
|}.

Definition f_S := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tlong)) :: (_a, (tptr tlong)) :: nil);
  fn_vars := nil;
  fn_temps := nil;
  fn_body :=
(Scall None
  (Evar _M (Tfunction
             (Tcons (tptr tlong)
               (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
             cc_default))
  ((Etempvar _o (tptr tlong)) :: (Etempvar _a (tptr tlong)) ::
   (Etempvar _a (tptr tlong)) :: nil))
|}.

Definition f_inv25519 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tlong)) :: (_i, (tptr tlong)) :: nil);
  fn_vars := ((_c, (tarray tlong 16)) :: nil);
  fn_temps := ((_a, tint) :: (_t'1, tint) :: (_t'3, tlong) ::
               (_t'2, tlong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _a (Econst_int (Int.repr 0) tint))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _a tint)
                       (Econst_int (Int.repr 16) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Sset _t'3
            (Ederef
              (Ebinop Oadd (Etempvar _i (tptr tlong)) (Etempvar _a tint)
                (tptr tlong)) tlong))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _c (tarray tlong 16)) (Etempvar _a tint)
                (tptr tlong)) tlong) (Etempvar _t'3 tlong))))
      (Sset _a
        (Ebinop Oadd (Etempvar _a tint) (Econst_int (Int.repr 1) tint) tint))))
  (Ssequence
    (Ssequence
      (Sset _a (Econst_int (Int.repr 253) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Oge (Etempvar _a tint)
                         (Econst_int (Int.repr 0) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Scall None
              (Evar _S (Tfunction
                         (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)) tvoid
                         cc_default))
              ((Evar _c (tarray tlong 16)) :: (Evar _c (tarray tlong 16)) ::
               nil))
            (Ssequence
              (Sifthenelse (Ebinop One (Etempvar _a tint)
                             (Econst_int (Int.repr 2) tint) tint)
                (Sset _t'1
                  (Ecast
                    (Ebinop One (Etempvar _a tint)
                      (Econst_int (Int.repr 4) tint) tint) tbool))
                (Sset _t'1 (Econst_int (Int.repr 0) tint)))
              (Sifthenelse (Etempvar _t'1 tint)
                (Scall None
                  (Evar _M (Tfunction
                             (Tcons (tptr tlong)
                               (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)))
                             tvoid cc_default))
                  ((Evar _c (tarray tlong 16)) ::
                   (Evar _c (tarray tlong 16)) ::
                   (Etempvar _i (tptr tlong)) :: nil))
                Sskip))))
        (Sset _a
          (Ebinop Osub (Etempvar _a tint) (Econst_int (Int.repr 1) tint)
            tint))))
    (Ssequence
      (Sset _a (Econst_int (Int.repr 0) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _a tint)
                         (Econst_int (Int.repr 16) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Sset _t'2
              (Ederef
                (Ebinop Oadd (Evar _c (tarray tlong 16)) (Etempvar _a tint)
                  (tptr tlong)) tlong))
            (Sassign
              (Ederef
                (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _a tint)
                  (tptr tlong)) tlong) (Etempvar _t'2 tlong))))
        (Sset _a
          (Ebinop Oadd (Etempvar _a tint) (Econst_int (Int.repr 1) tint)
            tint))))))
|}.

Definition f_pow2523 := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_o, (tptr tlong)) :: (_i, (tptr tlong)) :: nil);
  fn_vars := ((_c, (tarray tlong 16)) :: nil);
  fn_temps := ((_a, tint) :: (_t'2, tlong) :: (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _a (Econst_int (Int.repr 0) tint))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _a tint)
                       (Econst_int (Int.repr 16) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Sset _t'2
            (Ederef
              (Ebinop Oadd (Etempvar _i (tptr tlong)) (Etempvar _a tint)
                (tptr tlong)) tlong))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _c (tarray tlong 16)) (Etempvar _a tint)
                (tptr tlong)) tlong) (Etempvar _t'2 tlong))))
      (Sset _a
        (Ebinop Oadd (Etempvar _a tint) (Econst_int (Int.repr 1) tint) tint))))
  (Ssequence
    (Ssequence
      (Sset _a (Econst_int (Int.repr 250) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Oge (Etempvar _a tint)
                         (Econst_int (Int.repr 0) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Scall None
              (Evar _S (Tfunction
                         (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)) tvoid
                         cc_default))
              ((Evar _c (tarray tlong 16)) :: (Evar _c (tarray tlong 16)) ::
               nil))
            (Sifthenelse (Ebinop One (Etempvar _a tint)
                           (Econst_int (Int.repr 1) tint) tint)
              (Scall None
                (Evar _M (Tfunction
                           (Tcons (tptr tlong)
                             (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)))
                           tvoid cc_default))
                ((Evar _c (tarray tlong 16)) ::
                 (Evar _c (tarray tlong 16)) :: (Etempvar _i (tptr tlong)) ::
                 nil))
              Sskip)))
        (Sset _a
          (Ebinop Osub (Etempvar _a tint) (Econst_int (Int.repr 1) tint)
            tint))))
    (Ssequence
      (Sset _a (Econst_int (Int.repr 0) tint))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _a tint)
                         (Econst_int (Int.repr 16) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Sset _t'1
              (Ederef
                (Ebinop Oadd (Evar _c (tarray tlong 16)) (Etempvar _a tint)
                  (tptr tlong)) tlong))
            (Sassign
              (Ederef
                (Ebinop Oadd (Etempvar _o (tptr tlong)) (Etempvar _a tint)
                  (tptr tlong)) tlong) (Etempvar _t'1 tlong))))
        (Sset _a
          (Ebinop Oadd (Etempvar _a tint) (Econst_int (Int.repr 1) tint)
            tint))))))
|}.

Definition f_crypto_scalarmult_curve25519_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_q, (tptr tuchar)) :: (_n, (tptr tuchar)) ::
                (_p, (tptr tuchar)) :: nil);
  fn_vars := ((_z, (tarray tuchar 32)) :: (_x, (tarray tlong 80)) ::
              (_a, (tarray tlong 16)) :: (_b, (tarray tlong 16)) ::
              (_c, (tarray tlong 16)) :: (_d, (tarray tlong 16)) ::
              (_e, (tarray tlong 16)) :: (_f, (tarray tlong 16)) :: nil);
  fn_temps := ((_r, tlong) :: (_i, tlong) :: (_t'3, tlong) ::
               (_t'2, tlong) :: (_t'1, tlong) :: (_t'12, tuchar) ::
               (_t'11, tuchar) :: (_t'10, tuchar) :: (_t'9, tlong) ::
               (_t'8, tuchar) :: (_t'7, tlong) :: (_t'6, tlong) ::
               (_t'5, tlong) :: (_t'4, tlong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                       (Econst_int (Int.repr 31) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Sset _t'12
            (Ederef
              (Ebinop Oadd (Etempvar _n (tptr tuchar)) (Etempvar _i tlong)
                (tptr tuchar)) tuchar))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _z (tarray tuchar 32)) (Etempvar _i tlong)
                (tptr tuchar)) tuchar) (Etempvar _t'12 tuchar))))
      (Sset _i
        (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
          tlong))))
  (Ssequence
    (Ssequence
      (Sset _t'11
        (Ederef
          (Ebinop Oadd (Etempvar _n (tptr tuchar))
            (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar))
      (Sassign
        (Ederef
          (Ebinop Oadd (Evar _z (tarray tuchar 32))
            (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar)
        (Ebinop Oor
          (Ebinop Oand (Etempvar _t'11 tuchar)
            (Econst_int (Int.repr 127) tint) tint)
          (Econst_int (Int.repr 64) tint) tint)))
    (Ssequence
      (Ssequence
        (Sset _t'10
          (Ederef
            (Ebinop Oadd (Evar _z (tarray tuchar 32))
              (Econst_int (Int.repr 0) tint) (tptr tuchar)) tuchar))
        (Sassign
          (Ederef
            (Ebinop Oadd (Evar _z (tarray tuchar 32))
              (Econst_int (Int.repr 0) tint) (tptr tuchar)) tuchar)
          (Ebinop Oand (Etempvar _t'10 tuchar)
            (Econst_int (Int.repr 248) tint) tint)))
      (Ssequence
        (Scall None
          (Evar _unpack25519 (Tfunction
                               (Tcons (tptr tlong)
                                 (Tcons (tptr tuchar) Tnil)) tvoid
                               cc_default))
          ((Evar _x (tarray tlong 80)) :: (Etempvar _p (tptr tuchar)) :: nil))
        (Ssequence
          (Ssequence
            (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
            (Sloop
              (Ssequence
                (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                               (Econst_int (Int.repr 16) tint) tint)
                  Sskip
                  Sbreak)
                (Ssequence
                  (Ssequence
                    (Sset _t'9
                      (Ederef
                        (Ebinop Oadd (Evar _x (tarray tlong 80))
                          (Etempvar _i tlong) (tptr tlong)) tlong))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Evar _b (tarray tlong 16))
                          (Etempvar _i tlong) (tptr tlong)) tlong)
                      (Etempvar _t'9 tlong)))
                  (Ssequence
                    (Ssequence
                      (Ssequence
                        (Ssequence
                          (Sset _t'1
                            (Ecast (Econst_int (Int.repr 0) tint) tlong))
                          (Sassign
                            (Ederef
                              (Ebinop Oadd (Evar _c (tarray tlong 16))
                                (Etempvar _i tlong) (tptr tlong)) tlong)
                            (Etempvar _t'1 tlong)))
                        (Sset _t'2 (Ecast (Etempvar _t'1 tlong) tlong)))
                      (Sassign
                        (Ederef
                          (Ebinop Oadd (Evar _a (tarray tlong 16))
                            (Etempvar _i tlong) (tptr tlong)) tlong)
                        (Etempvar _t'2 tlong)))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Evar _d (tarray tlong 16))
                          (Etempvar _i tlong) (tptr tlong)) tlong)
                      (Etempvar _t'2 tlong)))))
              (Sset _i
                (Ebinop Oadd (Etempvar _i tlong)
                  (Econst_int (Int.repr 1) tint) tlong))))
          (Ssequence
            (Ssequence
              (Ssequence
                (Sset _t'3 (Ecast (Econst_int (Int.repr 1) tint) tlong))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Evar _d (tarray tlong 16))
                      (Econst_int (Int.repr 0) tint) (tptr tlong)) tlong)
                  (Etempvar _t'3 tlong)))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Evar _a (tarray tlong 16))
                    (Econst_int (Int.repr 0) tint) (tptr tlong)) tlong)
                (Etempvar _t'3 tlong)))
            (Ssequence
              (Ssequence
                (Sset _i (Ecast (Econst_int (Int.repr 254) tint) tlong))
                (Sloop
                  (Ssequence
                    (Sifthenelse (Ebinop Oge (Etempvar _i tlong)
                                   (Econst_int (Int.repr 0) tint) tint)
                      Sskip
                      Sbreak)
                    (Ssequence
                      (Ssequence
                        (Sset _t'8
                          (Ederef
                            (Ebinop Oadd (Evar _z (tarray tuchar 32))
                              (Ebinop Oshr (Etempvar _i tlong)
                                (Econst_int (Int.repr 3) tint) tlong)
                              (tptr tuchar)) tuchar))
                        (Sset _r
                          (Ecast
                            (Ebinop Oand
                              (Ebinop Oshr (Etempvar _t'8 tuchar)
                                (Ebinop Oand (Etempvar _i tlong)
                                  (Econst_int (Int.repr 7) tint) tlong) tint)
                              (Econst_int (Int.repr 1) tint) tint) tlong)))
                      (Ssequence
                        (Scall None
                          (Evar _sel25519 (Tfunction
                                            (Tcons (tptr tlong)
                                              (Tcons (tptr tlong)
                                                (Tcons tint Tnil))) tvoid
                                            cc_default))
                          ((Evar _a (tarray tlong 16)) ::
                           (Evar _b (tarray tlong 16)) ::
                           (Etempvar _r tlong) :: nil))
                        (Ssequence
                          (Scall None
                            (Evar _sel25519 (Tfunction
                                              (Tcons (tptr tlong)
                                                (Tcons (tptr tlong)
                                                  (Tcons tint Tnil))) tvoid
                                              cc_default))
                            ((Evar _c (tarray tlong 16)) ::
                             (Evar _d (tarray tlong 16)) ::
                             (Etempvar _r tlong) :: nil))
                          (Ssequence
                            (Scall None
                              (Evar _A (Tfunction
                                         (Tcons (tptr tlong)
                                           (Tcons (tptr tlong)
                                             (Tcons (tptr tlong) Tnil)))
                                         tvoid cc_default))
                              ((Evar _e (tarray tlong 16)) ::
                               (Evar _a (tarray tlong 16)) ::
                               (Evar _c (tarray tlong 16)) :: nil))
                            (Ssequence
                              (Scall None
                                (Evar _Z (Tfunction
                                           (Tcons (tptr tlong)
                                             (Tcons (tptr tlong)
                                               (Tcons (tptr tlong) Tnil)))
                                           tvoid cc_default))
                                ((Evar _a (tarray tlong 16)) ::
                                 (Evar _a (tarray tlong 16)) ::
                                 (Evar _c (tarray tlong 16)) :: nil))
                              (Ssequence
                                (Scall None
                                  (Evar _A (Tfunction
                                             (Tcons (tptr tlong)
                                               (Tcons (tptr tlong)
                                                 (Tcons (tptr tlong) Tnil)))
                                             tvoid cc_default))
                                  ((Evar _c (tarray tlong 16)) ::
                                   (Evar _b (tarray tlong 16)) ::
                                   (Evar _d (tarray tlong 16)) :: nil))
                                (Ssequence
                                  (Scall None
                                    (Evar _Z (Tfunction
                                               (Tcons (tptr tlong)
                                                 (Tcons (tptr tlong)
                                                   (Tcons (tptr tlong) Tnil)))
                                               tvoid cc_default))
                                    ((Evar _b (tarray tlong 16)) ::
                                     (Evar _b (tarray tlong 16)) ::
                                     (Evar _d (tarray tlong 16)) :: nil))
                                  (Ssequence
                                    (Scall None
                                      (Evar _S (Tfunction
                                                 (Tcons (tptr tlong)
                                                   (Tcons (tptr tlong) Tnil))
                                                 tvoid cc_default))
                                      ((Evar _d (tarray tlong 16)) ::
                                       (Evar _e (tarray tlong 16)) :: nil))
                                    (Ssequence
                                      (Scall None
                                        (Evar _S (Tfunction
                                                   (Tcons (tptr tlong)
                                                     (Tcons (tptr tlong)
                                                       Tnil)) tvoid
                                                   cc_default))
                                        ((Evar _f (tarray tlong 16)) ::
                                         (Evar _a (tarray tlong 16)) :: nil))
                                      (Ssequence
                                        (Scall None
                                          (Evar _M (Tfunction
                                                     (Tcons (tptr tlong)
                                                       (Tcons (tptr tlong)
                                                         (Tcons (tptr tlong)
                                                           Tnil))) tvoid
                                                     cc_default))
                                          ((Evar _a (tarray tlong 16)) ::
                                           (Evar _c (tarray tlong 16)) ::
                                           (Evar _a (tarray tlong 16)) ::
                                           nil))
                                        (Ssequence
                                          (Scall None
                                            (Evar _M (Tfunction
                                                       (Tcons (tptr tlong)
                                                         (Tcons (tptr tlong)
                                                           (Tcons
                                                             (tptr tlong)
                                                             Tnil))) tvoid
                                                       cc_default))
                                            ((Evar _c (tarray tlong 16)) ::
                                             (Evar _b (tarray tlong 16)) ::
                                             (Evar _e (tarray tlong 16)) ::
                                             nil))
                                          (Ssequence
                                            (Scall None
                                              (Evar _A (Tfunction
                                                         (Tcons (tptr tlong)
                                                           (Tcons
                                                             (tptr tlong)
                                                             (Tcons
                                                               (tptr tlong)
                                                               Tnil))) tvoid
                                                         cc_default))
                                              ((Evar _e (tarray tlong 16)) ::
                                               (Evar _a (tarray tlong 16)) ::
                                               (Evar _c (tarray tlong 16)) ::
                                               nil))
                                            (Ssequence
                                              (Scall None
                                                (Evar _Z (Tfunction
                                                           (Tcons
                                                             (tptr tlong)
                                                             (Tcons
                                                               (tptr tlong)
                                                               (Tcons
                                                                 (tptr tlong)
                                                                 Tnil)))
                                                           tvoid cc_default))
                                                ((Evar _a (tarray tlong 16)) ::
                                                 (Evar _a (tarray tlong 16)) ::
                                                 (Evar _c (tarray tlong 16)) ::
                                                 nil))
                                              (Ssequence
                                                (Scall None
                                                  (Evar _S (Tfunction
                                                             (Tcons
                                                               (tptr tlong)
                                                               (Tcons
                                                                 (tptr tlong)
                                                                 Tnil)) tvoid
                                                             cc_default))
                                                  ((Evar _b (tarray tlong 16)) ::
                                                   (Evar _a (tarray tlong 16)) ::
                                                   nil))
                                                (Ssequence
                                                  (Scall None
                                                    (Evar _Z (Tfunction
                                                               (Tcons
                                                                 (tptr tlong)
                                                                 (Tcons
                                                                   (tptr tlong)
                                                                   (Tcons
                                                                    (tptr tlong)
                                                                    Tnil)))
                                                               tvoid
                                                               cc_default))
                                                    ((Evar _c (tarray tlong 16)) ::
                                                     (Evar _d (tarray tlong 16)) ::
                                                     (Evar _f (tarray tlong 16)) ::
                                                     nil))
                                                  (Ssequence
                                                    (Scall None
                                                      (Evar _M (Tfunction
                                                                 (Tcons
                                                                   (tptr tlong)
                                                                   (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    Tnil)))
                                                                 tvoid
                                                                 cc_default))
                                                      ((Evar _a (tarray tlong 16)) ::
                                                       (Evar _c (tarray tlong 16)) ::
                                                       (Evar __121665 (tarray tlong 16)) ::
                                                       nil))
                                                    (Ssequence
                                                      (Scall None
                                                        (Evar _A (Tfunction
                                                                   (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    Tnil)))
                                                                   tvoid
                                                                   cc_default))
                                                        ((Evar _a (tarray tlong 16)) ::
                                                         (Evar _a (tarray tlong 16)) ::
                                                         (Evar _d (tarray tlong 16)) ::
                                                         nil))
                                                      (Ssequence
                                                        (Scall None
                                                          (Evar _M (Tfunction
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    Tnil)))
                                                                    tvoid
                                                                    cc_default))
                                                          ((Evar _c (tarray tlong 16)) ::
                                                           (Evar _c (tarray tlong 16)) ::
                                                           (Evar _a (tarray tlong 16)) ::
                                                           nil))
                                                        (Ssequence
                                                          (Scall None
                                                            (Evar _M 
                                                            (Tfunction
                                                              (Tcons
                                                                (tptr tlong)
                                                                (Tcons
                                                                  (tptr tlong)
                                                                  (Tcons
                                                                    (tptr tlong)
                                                                    Tnil)))
                                                              tvoid
                                                              cc_default))
                                                            ((Evar _a (tarray tlong 16)) ::
                                                             (Evar _d (tarray tlong 16)) ::
                                                             (Evar _f (tarray tlong 16)) ::
                                                             nil))
                                                          (Ssequence
                                                            (Scall None
                                                              (Evar _M 
                                                              (Tfunction
                                                                (Tcons
                                                                  (tptr tlong)
                                                                  (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    Tnil)))
                                                                tvoid
                                                                cc_default))
                                                              ((Evar _d (tarray tlong 16)) ::
                                                               (Evar _b (tarray tlong 16)) ::
                                                               (Evar _x (tarray tlong 80)) ::
                                                               nil))
                                                            (Ssequence
                                                              (Scall None
                                                                (Evar _S 
                                                                (Tfunction
                                                                  (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    Tnil))
                                                                  tvoid
                                                                  cc_default))
                                                                ((Evar _b (tarray tlong 16)) ::
                                                                 (Evar _e (tarray tlong 16)) ::
                                                                 nil))
                                                              (Ssequence
                                                                (Scall None
                                                                  (Evar _sel25519 
                                                                  (Tfunction
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    tint
                                                                    Tnil)))
                                                                    tvoid
                                                                    cc_default))
                                                                  ((Evar _a (tarray tlong 16)) ::
                                                                   (Evar _b (tarray tlong 16)) ::
                                                                   (Etempvar _r tlong) ::
                                                                   nil))
                                                                (Scall None
                                                                  (Evar _sel25519 
                                                                  (Tfunction
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    tint
                                                                    Tnil)))
                                                                    tvoid
                                                                    cc_default))
                                                                  ((Evar _c (tarray tlong 16)) ::
                                                                   (Evar _d (tarray tlong 16)) ::
                                                                   (Etempvar _r tlong) ::
                                                                   nil)))))))))))))))))))))))))
                  (Sset _i
                    (Ebinop Osub (Etempvar _i tlong)
                      (Econst_int (Int.repr 1) tint) tlong))))
              (Ssequence
                (Ssequence
                  (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
                  (Sloop
                    (Ssequence
                      (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                                     (Econst_int (Int.repr 16) tint) tint)
                        Sskip
                        Sbreak)
                      (Ssequence
                        (Ssequence
                          (Sset _t'7
                            (Ederef
                              (Ebinop Oadd (Evar _a (tarray tlong 16))
                                (Etempvar _i tlong) (tptr tlong)) tlong))
                          (Sassign
                            (Ederef
                              (Ebinop Oadd (Evar _x (tarray tlong 80))
                                (Ebinop Oadd (Etempvar _i tlong)
                                  (Econst_int (Int.repr 16) tint) tlong)
                                (tptr tlong)) tlong) (Etempvar _t'7 tlong)))
                        (Ssequence
                          (Ssequence
                            (Sset _t'6
                              (Ederef
                                (Ebinop Oadd (Evar _c (tarray tlong 16))
                                  (Etempvar _i tlong) (tptr tlong)) tlong))
                            (Sassign
                              (Ederef
                                (Ebinop Oadd (Evar _x (tarray tlong 80))
                                  (Ebinop Oadd (Etempvar _i tlong)
                                    (Econst_int (Int.repr 32) tint) tlong)
                                  (tptr tlong)) tlong) (Etempvar _t'6 tlong)))
                          (Ssequence
                            (Ssequence
                              (Sset _t'5
                                (Ederef
                                  (Ebinop Oadd (Evar _b (tarray tlong 16))
                                    (Etempvar _i tlong) (tptr tlong)) tlong))
                              (Sassign
                                (Ederef
                                  (Ebinop Oadd (Evar _x (tarray tlong 80))
                                    (Ebinop Oadd (Etempvar _i tlong)
                                      (Econst_int (Int.repr 48) tint) tlong)
                                    (tptr tlong)) tlong)
                                (Etempvar _t'5 tlong)))
                            (Ssequence
                              (Sset _t'4
                                (Ederef
                                  (Ebinop Oadd (Evar _d (tarray tlong 16))
                                    (Etempvar _i tlong) (tptr tlong)) tlong))
                              (Sassign
                                (Ederef
                                  (Ebinop Oadd (Evar _x (tarray tlong 80))
                                    (Ebinop Oadd (Etempvar _i tlong)
                                      (Econst_int (Int.repr 64) tint) tlong)
                                    (tptr tlong)) tlong)
                                (Etempvar _t'4 tlong)))))))
                    (Sset _i
                      (Ebinop Oadd (Etempvar _i tlong)
                        (Econst_int (Int.repr 1) tint) tlong))))
                (Ssequence
                  (Scall None
                    (Evar _inv25519 (Tfunction
                                      (Tcons (tptr tlong)
                                        (Tcons (tptr tlong) Tnil)) tvoid
                                      cc_default))
                    ((Ebinop Oadd (Evar _x (tarray tlong 80))
                       (Econst_int (Int.repr 32) tint) (tptr tlong)) ::
                     (Ebinop Oadd (Evar _x (tarray tlong 80))
                       (Econst_int (Int.repr 32) tint) (tptr tlong)) :: nil))
                  (Ssequence
                    (Scall None
                      (Evar _M (Tfunction
                                 (Tcons (tptr tlong)
                                   (Tcons (tptr tlong)
                                     (Tcons (tptr tlong) Tnil))) tvoid
                                 cc_default))
                      ((Ebinop Oadd (Evar _x (tarray tlong 80))
                         (Econst_int (Int.repr 16) tint) (tptr tlong)) ::
                       (Ebinop Oadd (Evar _x (tarray tlong 80))
                         (Econst_int (Int.repr 16) tint) (tptr tlong)) ::
                       (Ebinop Oadd (Evar _x (tarray tlong 80))
                         (Econst_int (Int.repr 32) tint) (tptr tlong)) ::
                       nil))
                    (Ssequence
                      (Scall None
                        (Evar _pack25519 (Tfunction
                                           (Tcons (tptr tuchar)
                                             (Tcons (tptr tlong) Tnil)) tvoid
                                           cc_default))
                        ((Etempvar _q (tptr tuchar)) ::
                         (Ebinop Oadd (Evar _x (tarray tlong 80))
                           (Econst_int (Int.repr 16) tint) (tptr tlong)) ::
                         nil))
                      (Sreturn (Some (Econst_int (Int.repr 0) tint))))))))))))))
|}.

Definition f_crypto_scalarmult_curve25519_tweet_base := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_q, (tptr tuchar)) :: (_n, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall (Some _t'1)
    (Evar _crypto_scalarmult_curve25519_tweet (Tfunction
                                                (Tcons (tptr tuchar)
                                                  (Tcons (tptr tuchar)
                                                    (Tcons (tptr tuchar)
                                                      Tnil))) tint
                                                cc_default))
    ((Etempvar _q (tptr tuchar)) :: (Etempvar _n (tptr tuchar)) ::
     (Evar __9 (tarray tuchar 32)) :: nil))
  (Sreturn (Some (Etempvar _t'1 tint))))
|}.

Definition f_crypto_box_curve25519xsalsa20poly1305_tweet_keypair := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_y, (tptr tuchar)) :: (_x, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _randombytes (Tfunction (Tcons (tptr tuchar) (Tcons tulong Tnil))
                         tvoid cc_default))
    ((Etempvar _x (tptr tuchar)) :: (Econst_int (Int.repr 32) tint) :: nil))
  (Ssequence
    (Scall (Some _t'1)
      (Evar _crypto_scalarmult_curve25519_tweet_base (Tfunction
                                                       (Tcons (tptr tuchar)
                                                         (Tcons (tptr tuchar)
                                                           Tnil)) tint
                                                       cc_default))
      ((Etempvar _y (tptr tuchar)) :: (Etempvar _x (tptr tuchar)) :: nil))
    (Sreturn (Some (Etempvar _t'1 tint)))))
|}.

Definition f_crypto_box_curve25519xsalsa20poly1305_tweet_beforenm := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_k, (tptr tuchar)) :: (_y, (tptr tuchar)) ::
                (_x, (tptr tuchar)) :: nil);
  fn_vars := ((_s, (tarray tuchar 32)) :: nil);
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _crypto_scalarmult_curve25519_tweet (Tfunction
                                                (Tcons (tptr tuchar)
                                                  (Tcons (tptr tuchar)
                                                    (Tcons (tptr tuchar)
                                                      Tnil))) tint
                                                cc_default))
    ((Evar _s (tarray tuchar 32)) :: (Etempvar _x (tptr tuchar)) ::
     (Etempvar _y (tptr tuchar)) :: nil))
  (Ssequence
    (Scall (Some _t'1)
      (Evar _crypto_core_hsalsa20_tweet (Tfunction
                                          (Tcons (tptr tuchar)
                                            (Tcons (tptr tuchar)
                                              (Tcons (tptr tuchar)
                                                (Tcons (tptr tuchar) Tnil))))
                                          tint cc_default))
      ((Etempvar _k (tptr tuchar)) :: (Evar __0 (tarray tuchar 16)) ::
       (Evar _s (tarray tuchar 32)) :: (Evar _sigma (tarray tuchar 16)) ::
       nil))
    (Sreturn (Some (Etempvar _t'1 tint)))))
|}.

Definition f_crypto_box_curve25519xsalsa20poly1305_tweet_afternm := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_c, (tptr tuchar)) :: (_m, (tptr tuchar)) :: (_d, tulong) ::
                (_n, (tptr tuchar)) :: (_k, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall (Some _t'1)
    (Evar _crypto_secretbox_xsalsa20poly1305_tweet (Tfunction
                                                     (Tcons (tptr tuchar)
                                                       (Tcons (tptr tuchar)
                                                         (Tcons tulong
                                                           (Tcons
                                                             (tptr tuchar)
                                                             (Tcons
                                                               (tptr tuchar)
                                                               Tnil))))) tint
                                                     cc_default))
    ((Etempvar _c (tptr tuchar)) :: (Etempvar _m (tptr tuchar)) ::
     (Etempvar _d tulong) :: (Etempvar _n (tptr tuchar)) ::
     (Etempvar _k (tptr tuchar)) :: nil))
  (Sreturn (Some (Etempvar _t'1 tint))))
|}.

Definition f_crypto_box_curve25519xsalsa20poly1305_tweet_open_afternm := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_m, (tptr tuchar)) :: (_c, (tptr tuchar)) :: (_d, tulong) ::
                (_n, (tptr tuchar)) :: (_k, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall (Some _t'1)
    (Evar _crypto_secretbox_xsalsa20poly1305_tweet_open (Tfunction
                                                          (Tcons
                                                            (tptr tuchar)
                                                            (Tcons
                                                              (tptr tuchar)
                                                              (Tcons tulong
                                                                (Tcons
                                                                  (tptr tuchar)
                                                                  (Tcons
                                                                    (tptr tuchar)
                                                                    Tnil)))))
                                                          tint cc_default))
    ((Etempvar _m (tptr tuchar)) :: (Etempvar _c (tptr tuchar)) ::
     (Etempvar _d tulong) :: (Etempvar _n (tptr tuchar)) ::
     (Etempvar _k (tptr tuchar)) :: nil))
  (Sreturn (Some (Etempvar _t'1 tint))))
|}.

Definition f_crypto_box_curve25519xsalsa20poly1305_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_c, (tptr tuchar)) :: (_m, (tptr tuchar)) :: (_d, tulong) ::
                (_n, (tptr tuchar)) :: (_y, (tptr tuchar)) ::
                (_x, (tptr tuchar)) :: nil);
  fn_vars := ((_k, (tarray tuchar 32)) :: nil);
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _crypto_box_curve25519xsalsa20poly1305_tweet_beforenm (Tfunction
                                                                  (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    Tnil)))
                                                                  tint
                                                                  cc_default))
    ((Evar _k (tarray tuchar 32)) :: (Etempvar _y (tptr tuchar)) ::
     (Etempvar _x (tptr tuchar)) :: nil))
  (Ssequence
    (Scall (Some _t'1)
      (Evar _crypto_box_curve25519xsalsa20poly1305_tweet_afternm (Tfunction
                                                                   (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    tulong
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    Tnil)))))
                                                                   tint
                                                                   cc_default))
      ((Etempvar _c (tptr tuchar)) :: (Etempvar _m (tptr tuchar)) ::
       (Etempvar _d tulong) :: (Etempvar _n (tptr tuchar)) ::
       (Evar _k (tarray tuchar 32)) :: nil))
    (Sreturn (Some (Etempvar _t'1 tint)))))
|}.

Definition f_crypto_box_curve25519xsalsa20poly1305_tweet_open := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_m, (tptr tuchar)) :: (_c, (tptr tuchar)) :: (_d, tulong) ::
                (_n, (tptr tuchar)) :: (_y, (tptr tuchar)) ::
                (_x, (tptr tuchar)) :: nil);
  fn_vars := ((_k, (tarray tuchar 32)) :: nil);
  fn_temps := ((_t'1, tint) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _crypto_box_curve25519xsalsa20poly1305_tweet_beforenm (Tfunction
                                                                  (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    Tnil)))
                                                                  tint
                                                                  cc_default))
    ((Evar _k (tarray tuchar 32)) :: (Etempvar _y (tptr tuchar)) ::
     (Etempvar _x (tptr tuchar)) :: nil))
  (Ssequence
    (Scall (Some _t'1)
      (Evar _crypto_box_curve25519xsalsa20poly1305_tweet_open_afternm 
      (Tfunction
        (Tcons (tptr tuchar)
          (Tcons (tptr tuchar)
            (Tcons tulong (Tcons (tptr tuchar) (Tcons (tptr tuchar) Tnil)))))
        tint cc_default))
      ((Etempvar _m (tptr tuchar)) :: (Etempvar _c (tptr tuchar)) ::
       (Etempvar _d tulong) :: (Etempvar _n (tptr tuchar)) ::
       (Evar _k (tarray tuchar 32)) :: nil))
    (Sreturn (Some (Etempvar _t'1 tint)))))
|}.

Definition f_R := {|
  fn_return := tulong;
  fn_callconv := cc_default;
  fn_params := ((_x, tulong) :: (_c, tint) :: nil);
  fn_vars := nil;
  fn_temps := nil;
  fn_body :=
(Sreturn (Some (Ebinop Oor
                 (Ebinop Oshr (Etempvar _x tulong) (Etempvar _c tint) tulong)
                 (Ebinop Oshl (Etempvar _x tulong)
                   (Ebinop Osub (Econst_int (Int.repr 64) tint)
                     (Etempvar _c tint) tint) tulong) tulong)))
|}.

Definition f_Ch := {|
  fn_return := tulong;
  fn_callconv := cc_default;
  fn_params := ((_x, tulong) :: (_y, tulong) :: (_z, tulong) :: nil);
  fn_vars := nil;
  fn_temps := nil;
  fn_body :=
(Sreturn (Some (Ebinop Oxor
                 (Ebinop Oand (Etempvar _x tulong) (Etempvar _y tulong)
                   tulong)
                 (Ebinop Oand (Eunop Onotint (Etempvar _x tulong) tulong)
                   (Etempvar _z tulong) tulong) tulong)))
|}.

Definition f_Maj := {|
  fn_return := tulong;
  fn_callconv := cc_default;
  fn_params := ((_x, tulong) :: (_y, tulong) :: (_z, tulong) :: nil);
  fn_vars := nil;
  fn_temps := nil;
  fn_body :=
(Sreturn (Some (Ebinop Oxor
                 (Ebinop Oxor
                   (Ebinop Oand (Etempvar _x tulong) (Etempvar _y tulong)
                     tulong)
                   (Ebinop Oand (Etempvar _x tulong) (Etempvar _z tulong)
                     tulong) tulong)
                 (Ebinop Oand (Etempvar _y tulong) (Etempvar _z tulong)
                   tulong) tulong)))
|}.

Definition f_Sigma0 := {|
  fn_return := tulong;
  fn_callconv := cc_default;
  fn_params := ((_x, tulong) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'3, tulong) :: (_t'2, tulong) :: (_t'1, tulong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Ssequence
      (Scall (Some _t'1)
        (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong
                   cc_default))
        ((Etempvar _x tulong) :: (Econst_int (Int.repr 28) tint) :: nil))
      (Scall (Some _t'2)
        (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong
                   cc_default))
        ((Etempvar _x tulong) :: (Econst_int (Int.repr 34) tint) :: nil)))
    (Scall (Some _t'3)
      (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong cc_default))
      ((Etempvar _x tulong) :: (Econst_int (Int.repr 39) tint) :: nil)))
  (Sreturn (Some (Ebinop Oxor
                   (Ebinop Oxor (Etempvar _t'1 tulong) (Etempvar _t'2 tulong)
                     tulong) (Etempvar _t'3 tulong) tulong))))
|}.

Definition f_Sigma1 := {|
  fn_return := tulong;
  fn_callconv := cc_default;
  fn_params := ((_x, tulong) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'3, tulong) :: (_t'2, tulong) :: (_t'1, tulong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Ssequence
      (Scall (Some _t'1)
        (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong
                   cc_default))
        ((Etempvar _x tulong) :: (Econst_int (Int.repr 14) tint) :: nil))
      (Scall (Some _t'2)
        (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong
                   cc_default))
        ((Etempvar _x tulong) :: (Econst_int (Int.repr 18) tint) :: nil)))
    (Scall (Some _t'3)
      (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong cc_default))
      ((Etempvar _x tulong) :: (Econst_int (Int.repr 41) tint) :: nil)))
  (Sreturn (Some (Ebinop Oxor
                   (Ebinop Oxor (Etempvar _t'1 tulong) (Etempvar _t'2 tulong)
                     tulong) (Etempvar _t'3 tulong) tulong))))
|}.

Definition f_sigma0 := {|
  fn_return := tulong;
  fn_callconv := cc_default;
  fn_params := ((_x, tulong) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'2, tulong) :: (_t'1, tulong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Scall (Some _t'1)
      (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong cc_default))
      ((Etempvar _x tulong) :: (Econst_int (Int.repr 1) tint) :: nil))
    (Scall (Some _t'2)
      (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong cc_default))
      ((Etempvar _x tulong) :: (Econst_int (Int.repr 8) tint) :: nil)))
  (Sreturn (Some (Ebinop Oxor
                   (Ebinop Oxor (Etempvar _t'1 tulong) (Etempvar _t'2 tulong)
                     tulong)
                   (Ebinop Oshr (Etempvar _x tulong)
                     (Econst_int (Int.repr 7) tint) tulong) tulong))))
|}.

Definition f_sigma1 := {|
  fn_return := tulong;
  fn_callconv := cc_default;
  fn_params := ((_x, tulong) :: nil);
  fn_vars := nil;
  fn_temps := ((_t'2, tulong) :: (_t'1, tulong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Scall (Some _t'1)
      (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong cc_default))
      ((Etempvar _x tulong) :: (Econst_int (Int.repr 19) tint) :: nil))
    (Scall (Some _t'2)
      (Evar _R (Tfunction (Tcons tulong (Tcons tint Tnil)) tulong cc_default))
      ((Etempvar _x tulong) :: (Econst_int (Int.repr 61) tint) :: nil)))
  (Sreturn (Some (Ebinop Oxor
                   (Ebinop Oxor (Etempvar _t'1 tulong) (Etempvar _t'2 tulong)
                     tulong)
                   (Ebinop Oshr (Etempvar _x tulong)
                     (Econst_int (Int.repr 6) tint) tulong) tulong))))
|}.

Definition v_K := {|
  gvar_info := (tarray tulong 80);
  gvar_init := (Init_int64 (Int64.repr 4794697086780616226) ::
                Init_int64 (Int64.repr 8158064640168781261) ::
                Init_int64 (Int64.repr (-5349999486874862801)) ::
                Init_int64 (Int64.repr (-1606136188198331460)) ::
                Init_int64 (Int64.repr 4131703408338449720) ::
                Init_int64 (Int64.repr 6480981068601479193) ::
                Init_int64 (Int64.repr (-7908458776815382629)) ::
                Init_int64 (Int64.repr (-6116909921290321640)) ::
                Init_int64 (Int64.repr (-2880145864133508542)) ::
                Init_int64 (Int64.repr 1334009975649890238) ::
                Init_int64 (Int64.repr 2608012711638119052) ::
                Init_int64 (Int64.repr 6128411473006802146) ::
                Init_int64 (Int64.repr 8268148722764581231) ::
                Init_int64 (Int64.repr (-9160688886553864527)) ::
                Init_int64 (Int64.repr (-7215885187991268811)) ::
                Init_int64 (Int64.repr (-4495734319001033068)) ::
                Init_int64 (Int64.repr (-1973867731355612462)) ::
                Init_int64 (Int64.repr (-1171420211273849373)) ::
                Init_int64 (Int64.repr 1135362057144423861) ::
                Init_int64 (Int64.repr 2597628984639134821) ::
                Init_int64 (Int64.repr 3308224258029322869) ::
                Init_int64 (Int64.repr 5365058923640841347) ::
                Init_int64 (Int64.repr 6679025012923562964) ::
                Init_int64 (Int64.repr 8573033837759648693) ::
                Init_int64 (Int64.repr (-7476448914759557205)) ::
                Init_int64 (Int64.repr (-6327057829258317296)) ::
                Init_int64 (Int64.repr (-5763719355590565569)) ::
                Init_int64 (Int64.repr (-4658551843659510044)) ::
                Init_int64 (Int64.repr (-4116276920077217854)) ::
                Init_int64 (Int64.repr (-3051310485924567259)) ::
                Init_int64 (Int64.repr 489312712824947311) ::
                Init_int64 (Int64.repr 1452737877330783856) ::
                Init_int64 (Int64.repr 2861767655752347644) ::
                Init_int64 (Int64.repr 3322285676063803686) ::
                Init_int64 (Int64.repr 5560940570517711597) ::
                Init_int64 (Int64.repr 5996557281743188959) ::
                Init_int64 (Int64.repr 7280758554555802590) ::
                Init_int64 (Int64.repr 8532644243296465576) ::
                Init_int64 (Int64.repr (-9096487096722542874)) ::
                Init_int64 (Int64.repr (-7894198246740708037)) ::
                Init_int64 (Int64.repr (-6719396339535248540)) ::
                Init_int64 (Int64.repr (-6333637450476146687)) ::
                Init_int64 (Int64.repr (-4446306890439682159)) ::
                Init_int64 (Int64.repr (-4076793802049405392)) ::
                Init_int64 (Int64.repr (-3345356375505022440)) ::
                Init_int64 (Int64.repr (-2983346525034927856)) ::
                Init_int64 (Int64.repr (-860691631967231958)) ::
                Init_int64 (Int64.repr 1182934255886127544) ::
                Init_int64 (Int64.repr 1847814050463011016) ::
                Init_int64 (Int64.repr 2177327727835720531) ::
                Init_int64 (Int64.repr 2830643537854262169) ::
                Init_int64 (Int64.repr 3796741975233480872) ::
                Init_int64 (Int64.repr 4115178125766777443) ::
                Init_int64 (Int64.repr 5681478168544905931) ::
                Init_int64 (Int64.repr 6601373596472566643) ::
                Init_int64 (Int64.repr 7507060721942968483) ::
                Init_int64 (Int64.repr 8399075790359081724) ::
                Init_int64 (Int64.repr 8693463985226723168) ::
                Init_int64 (Int64.repr (-8878714635349349518)) ::
                Init_int64 (Int64.repr (-8302665154208450068)) ::
                Init_int64 (Int64.repr (-8016688836872298968)) ::
                Init_int64 (Int64.repr (-6606660893046293015)) ::
                Init_int64 (Int64.repr (-4685533653050689259)) ::
                Init_int64 (Int64.repr (-4147400797238176981)) ::
                Init_int64 (Int64.repr (-3880063495543823972)) ::
                Init_int64 (Int64.repr (-3348786107499101689)) ::
                Init_int64 (Int64.repr (-1523767162380948706)) ::
                Init_int64 (Int64.repr (-757361751448694408)) ::
                Init_int64 (Int64.repr 500013540394364858) ::
                Init_int64 (Int64.repr 748580250866718886) ::
                Init_int64 (Int64.repr 1242879168328830382) ::
                Init_int64 (Int64.repr 1977374033974150939) ::
                Init_int64 (Int64.repr 2944078676154940804) ::
                Init_int64 (Int64.repr 3659926193048069267) ::
                Init_int64 (Int64.repr 4368137639120453308) ::
                Init_int64 (Int64.repr 4836135668995329356) ::
                Init_int64 (Int64.repr 5532061633213252278) ::
                Init_int64 (Int64.repr 6448918945643986474) ::
                Init_int64 (Int64.repr 6902733635092675308) ::
                Init_int64 (Int64.repr 7801388544844847127) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition f_crypto_hashblocks_sha512_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_x, (tptr tuchar)) :: (_m, (tptr tuchar)) :: (_n, tulong) ::
                nil);
  fn_vars := ((_z, (tarray tulong 8)) :: (_b, (tarray tulong 8)) ::
              (_a, (tarray tulong 8)) :: (_w, (tarray tulong 16)) :: nil);
  fn_temps := ((_t, tulong) :: (_i, tint) :: (_j, tint) :: (_t'9, tulong) ::
               (_t'8, tulong) :: (_t'7, tulong) :: (_t'6, tulong) ::
               (_t'5, tulong) :: (_t'4, tulong) :: (_t'3, tulong) ::
               (_t'2, tulong) :: (_t'1, tulong) :: (_t'31, tulong) ::
               (_t'30, tulong) :: (_t'29, tulong) :: (_t'28, tulong) ::
               (_t'27, tulong) :: (_t'26, tulong) :: (_t'25, tulong) ::
               (_t'24, tulong) :: (_t'23, tulong) :: (_t'22, tulong) ::
               (_t'21, tulong) :: (_t'20, tulong) :: (_t'19, tulong) ::
               (_t'18, tulong) :: (_t'17, tulong) :: (_t'16, tulong) ::
               (_t'15, tulong) :: (_t'14, tulong) :: (_t'13, tulong) ::
               (_t'12, tulong) :: (_t'11, tulong) :: (_t'10, tulong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _i (Econst_int (Int.repr 0) tint))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                       (Econst_int (Int.repr 8) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Ssequence
            (Ssequence
              (Scall (Some _t'1)
                (Evar _dl64 (Tfunction (Tcons (tptr tuchar) Tnil) tulong
                              cc_default))
                ((Ebinop Oadd (Etempvar _x (tptr tuchar))
                   (Ebinop Omul (Econst_int (Int.repr 8) tint)
                     (Etempvar _i tint) tint) (tptr tuchar)) :: nil))
              (Sset _t'2 (Ecast (Etempvar _t'1 tulong) tulong)))
            (Sassign
              (Ederef
                (Ebinop Oadd (Evar _a (tarray tulong 8)) (Etempvar _i tint)
                  (tptr tulong)) tulong) (Etempvar _t'2 tulong)))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _z (tarray tulong 8)) (Etempvar _i tint)
                (tptr tulong)) tulong) (Etempvar _t'2 tulong))))
      (Sset _i
        (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
  (Ssequence
    (Swhile
      (Ebinop Oge (Etempvar _n tulong) (Econst_int (Int.repr 128) tint) tint)
      (Ssequence
        (Ssequence
          (Sset _i (Econst_int (Int.repr 0) tint))
          (Sloop
            (Ssequence
              (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                             (Econst_int (Int.repr 16) tint) tint)
                Sskip
                Sbreak)
              (Ssequence
                (Scall (Some _t'3)
                  (Evar _dl64 (Tfunction (Tcons (tptr tuchar) Tnil) tulong
                                cc_default))
                  ((Ebinop Oadd (Etempvar _m (tptr tuchar))
                     (Ebinop Omul (Econst_int (Int.repr 8) tint)
                       (Etempvar _i tint) tint) (tptr tuchar)) :: nil))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Evar _w (tarray tulong 16))
                      (Etempvar _i tint) (tptr tulong)) tulong)
                  (Etempvar _t'3 tulong))))
            (Sset _i
              (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
                tint))))
        (Ssequence
          (Ssequence
            (Sset _i (Econst_int (Int.repr 0) tint))
            (Sloop
              (Ssequence
                (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                               (Econst_int (Int.repr 80) tint) tint)
                  Sskip
                  Sbreak)
                (Ssequence
                  (Ssequence
                    (Sset _j (Econst_int (Int.repr 0) tint))
                    (Sloop
                      (Ssequence
                        (Sifthenelse (Ebinop Olt (Etempvar _j tint)
                                       (Econst_int (Int.repr 8) tint) tint)
                          Sskip
                          Sbreak)
                        (Ssequence
                          (Sset _t'31
                            (Ederef
                              (Ebinop Oadd (Evar _a (tarray tulong 8))
                                (Etempvar _j tint) (tptr tulong)) tulong))
                          (Sassign
                            (Ederef
                              (Ebinop Oadd (Evar _b (tarray tulong 8))
                                (Etempvar _j tint) (tptr tulong)) tulong)
                            (Etempvar _t'31 tulong))))
                      (Sset _j
                        (Ebinop Oadd (Etempvar _j tint)
                          (Econst_int (Int.repr 1) tint) tint))))
                  (Ssequence
                    (Ssequence
                      (Ssequence
                        (Ssequence
                          (Sset _t'30
                            (Ederef
                              (Ebinop Oadd (Evar _a (tarray tulong 8))
                                (Econst_int (Int.repr 4) tint) (tptr tulong))
                              tulong))
                          (Scall (Some _t'4)
                            (Evar _Sigma1 (Tfunction (Tcons tulong Tnil)
                                            tulong cc_default))
                            ((Etempvar _t'30 tulong) :: nil)))
                        (Ssequence
                          (Sset _t'27
                            (Ederef
                              (Ebinop Oadd (Evar _a (tarray tulong 8))
                                (Econst_int (Int.repr 4) tint) (tptr tulong))
                              tulong))
                          (Ssequence
                            (Sset _t'28
                              (Ederef
                                (Ebinop Oadd (Evar _a (tarray tulong 8))
                                  (Econst_int (Int.repr 5) tint)
                                  (tptr tulong)) tulong))
                            (Ssequence
                              (Sset _t'29
                                (Ederef
                                  (Ebinop Oadd (Evar _a (tarray tulong 8))
                                    (Econst_int (Int.repr 6) tint)
                                    (tptr tulong)) tulong))
                              (Scall (Some _t'5)
                                (Evar _Ch (Tfunction
                                            (Tcons tulong
                                              (Tcons tulong
                                                (Tcons tulong Tnil))) tulong
                                            cc_default))
                                ((Etempvar _t'27 tulong) ::
                                 (Etempvar _t'28 tulong) ::
                                 (Etempvar _t'29 tulong) :: nil))))))
                      (Ssequence
                        (Sset _t'24
                          (Ederef
                            (Ebinop Oadd (Evar _a (tarray tulong 8))
                              (Econst_int (Int.repr 7) tint) (tptr tulong))
                            tulong))
                        (Ssequence
                          (Sset _t'25
                            (Ederef
                              (Ebinop Oadd (Evar _K (tarray tulong 80))
                                (Etempvar _i tint) (tptr tulong)) tulong))
                          (Ssequence
                            (Sset _t'26
                              (Ederef
                                (Ebinop Oadd (Evar _w (tarray tulong 16))
                                  (Ebinop Omod (Etempvar _i tint)
                                    (Econst_int (Int.repr 16) tint) tint)
                                  (tptr tulong)) tulong))
                            (Sset _t
                              (Ebinop Oadd
                                (Ebinop Oadd
                                  (Ebinop Oadd
                                    (Ebinop Oadd (Etempvar _t'24 tulong)
                                      (Etempvar _t'4 tulong) tulong)
                                    (Etempvar _t'5 tulong) tulong)
                                  (Etempvar _t'25 tulong) tulong)
                                (Etempvar _t'26 tulong) tulong))))))
                    (Ssequence
                      (Ssequence
                        (Ssequence
                          (Ssequence
                            (Sset _t'23
                              (Ederef
                                (Ebinop Oadd (Evar _a (tarray tulong 8))
                                  (Econst_int (Int.repr 0) tint)
                                  (tptr tulong)) tulong))
                            (Scall (Some _t'6)
                              (Evar _Sigma0 (Tfunction (Tcons tulong Tnil)
                                              tulong cc_default))
                              ((Etempvar _t'23 tulong) :: nil)))
                          (Ssequence
                            (Sset _t'20
                              (Ederef
                                (Ebinop Oadd (Evar _a (tarray tulong 8))
                                  (Econst_int (Int.repr 0) tint)
                                  (tptr tulong)) tulong))
                            (Ssequence
                              (Sset _t'21
                                (Ederef
                                  (Ebinop Oadd (Evar _a (tarray tulong 8))
                                    (Econst_int (Int.repr 1) tint)
                                    (tptr tulong)) tulong))
                              (Ssequence
                                (Sset _t'22
                                  (Ederef
                                    (Ebinop Oadd (Evar _a (tarray tulong 8))
                                      (Econst_int (Int.repr 2) tint)
                                      (tptr tulong)) tulong))
                                (Scall (Some _t'7)
                                  (Evar _Maj (Tfunction
                                               (Tcons tulong
                                                 (Tcons tulong
                                                   (Tcons tulong Tnil)))
                                               tulong cc_default))
                                  ((Etempvar _t'20 tulong) ::
                                   (Etempvar _t'21 tulong) ::
                                   (Etempvar _t'22 tulong) :: nil))))))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Evar _b (tarray tulong 8))
                              (Econst_int (Int.repr 7) tint) (tptr tulong))
                            tulong)
                          (Ebinop Oadd
                            (Ebinop Oadd (Etempvar _t tulong)
                              (Etempvar _t'6 tulong) tulong)
                            (Etempvar _t'7 tulong) tulong)))
                      (Ssequence
                        (Ssequence
                          (Sset _t'19
                            (Ederef
                              (Ebinop Oadd (Evar _b (tarray tulong 8))
                                (Econst_int (Int.repr 3) tint) (tptr tulong))
                              tulong))
                          (Sassign
                            (Ederef
                              (Ebinop Oadd (Evar _b (tarray tulong 8))
                                (Econst_int (Int.repr 3) tint) (tptr tulong))
                              tulong)
                            (Ebinop Oadd (Etempvar _t'19 tulong)
                              (Etempvar _t tulong) tulong)))
                        (Ssequence
                          (Ssequence
                            (Sset _j (Econst_int (Int.repr 0) tint))
                            (Sloop
                              (Ssequence
                                (Sifthenelse (Ebinop Olt (Etempvar _j tint)
                                               (Econst_int (Int.repr 8) tint)
                                               tint)
                                  Sskip
                                  Sbreak)
                                (Ssequence
                                  (Sset _t'18
                                    (Ederef
                                      (Ebinop Oadd
                                        (Evar _b (tarray tulong 8))
                                        (Etempvar _j tint) (tptr tulong))
                                      tulong))
                                  (Sassign
                                    (Ederef
                                      (Ebinop Oadd
                                        (Evar _a (tarray tulong 8))
                                        (Ebinop Omod
                                          (Ebinop Oadd (Etempvar _j tint)
                                            (Econst_int (Int.repr 1) tint)
                                            tint)
                                          (Econst_int (Int.repr 8) tint)
                                          tint) (tptr tulong)) tulong)
                                    (Etempvar _t'18 tulong))))
                              (Sset _j
                                (Ebinop Oadd (Etempvar _j tint)
                                  (Econst_int (Int.repr 1) tint) tint))))
                          (Sifthenelse (Ebinop Oeq
                                         (Ebinop Omod (Etempvar _i tint)
                                           (Econst_int (Int.repr 16) tint)
                                           tint)
                                         (Econst_int (Int.repr 15) tint)
                                         tint)
                            (Ssequence
                              (Sset _j (Econst_int (Int.repr 0) tint))
                              (Sloop
                                (Ssequence
                                  (Sifthenelse (Ebinop Olt (Etempvar _j tint)
                                                 (Econst_int (Int.repr 16) tint)
                                                 tint)
                                    Sskip
                                    Sbreak)
                                  (Ssequence
                                    (Ssequence
                                      (Ssequence
                                        (Sset _t'17
                                          (Ederef
                                            (Ebinop Oadd
                                              (Evar _w (tarray tulong 16))
                                              (Ebinop Omod
                                                (Ebinop Oadd
                                                  (Etempvar _j tint)
                                                  (Econst_int (Int.repr 1) tint)
                                                  tint)
                                                (Econst_int (Int.repr 16) tint)
                                                tint) (tptr tulong)) tulong))
                                        (Scall (Some _t'8)
                                          (Evar _sigma0 (Tfunction
                                                          (Tcons tulong Tnil)
                                                          tulong cc_default))
                                          ((Etempvar _t'17 tulong) :: nil)))
                                      (Ssequence
                                        (Sset _t'16
                                          (Ederef
                                            (Ebinop Oadd
                                              (Evar _w (tarray tulong 16))
                                              (Ebinop Omod
                                                (Ebinop Oadd
                                                  (Etempvar _j tint)
                                                  (Econst_int (Int.repr 14) tint)
                                                  tint)
                                                (Econst_int (Int.repr 16) tint)
                                                tint) (tptr tulong)) tulong))
                                        (Scall (Some _t'9)
                                          (Evar _sigma1 (Tfunction
                                                          (Tcons tulong Tnil)
                                                          tulong cc_default))
                                          ((Etempvar _t'16 tulong) :: nil))))
                                    (Ssequence
                                      (Sset _t'14
                                        (Ederef
                                          (Ebinop Oadd
                                            (Evar _w (tarray tulong 16))
                                            (Etempvar _j tint) (tptr tulong))
                                          tulong))
                                      (Ssequence
                                        (Sset _t'15
                                          (Ederef
                                            (Ebinop Oadd
                                              (Evar _w (tarray tulong 16))
                                              (Ebinop Omod
                                                (Ebinop Oadd
                                                  (Etempvar _j tint)
                                                  (Econst_int (Int.repr 9) tint)
                                                  tint)
                                                (Econst_int (Int.repr 16) tint)
                                                tint) (tptr tulong)) tulong))
                                        (Sassign
                                          (Ederef
                                            (Ebinop Oadd
                                              (Evar _w (tarray tulong 16))
                                              (Etempvar _j tint)
                                              (tptr tulong)) tulong)
                                          (Ebinop Oadd
                                            (Etempvar _t'14 tulong)
                                            (Ebinop Oadd
                                              (Ebinop Oadd
                                                (Etempvar _t'15 tulong)
                                                (Etempvar _t'8 tulong)
                                                tulong)
                                              (Etempvar _t'9 tulong) tulong)
                                            tulong))))))
                                (Sset _j
                                  (Ebinop Oadd (Etempvar _j tint)
                                    (Econst_int (Int.repr 1) tint) tint))))
                            Sskip)))))))
              (Sset _i
                (Ebinop Oadd (Etempvar _i tint)
                  (Econst_int (Int.repr 1) tint) tint))))
          (Ssequence
            (Ssequence
              (Sset _i (Econst_int (Int.repr 0) tint))
              (Sloop
                (Ssequence
                  (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                                 (Econst_int (Int.repr 8) tint) tint)
                    Sskip
                    Sbreak)
                  (Ssequence
                    (Ssequence
                      (Sset _t'12
                        (Ederef
                          (Ebinop Oadd (Evar _a (tarray tulong 8))
                            (Etempvar _i tint) (tptr tulong)) tulong))
                      (Ssequence
                        (Sset _t'13
                          (Ederef
                            (Ebinop Oadd (Evar _z (tarray tulong 8))
                              (Etempvar _i tint) (tptr tulong)) tulong))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Evar _a (tarray tulong 8))
                              (Etempvar _i tint) (tptr tulong)) tulong)
                          (Ebinop Oadd (Etempvar _t'12 tulong)
                            (Etempvar _t'13 tulong) tulong))))
                    (Ssequence
                      (Sset _t'11
                        (Ederef
                          (Ebinop Oadd (Evar _a (tarray tulong 8))
                            (Etempvar _i tint) (tptr tulong)) tulong))
                      (Sassign
                        (Ederef
                          (Ebinop Oadd (Evar _z (tarray tulong 8))
                            (Etempvar _i tint) (tptr tulong)) tulong)
                        (Etempvar _t'11 tulong)))))
                (Sset _i
                  (Ebinop Oadd (Etempvar _i tint)
                    (Econst_int (Int.repr 1) tint) tint))))
            (Ssequence
              (Sset _m
                (Ebinop Oadd (Etempvar _m (tptr tuchar))
                  (Econst_int (Int.repr 128) tint) (tptr tuchar)))
              (Sset _n
                (Ebinop Osub (Etempvar _n tulong)
                  (Econst_int (Int.repr 128) tint) tulong)))))))
    (Ssequence
      (Ssequence
        (Sset _i (Econst_int (Int.repr 0) tint))
        (Sloop
          (Ssequence
            (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                           (Econst_int (Int.repr 8) tint) tint)
              Sskip
              Sbreak)
            (Ssequence
              (Sset _t'10
                (Ederef
                  (Ebinop Oadd (Evar _z (tarray tulong 8)) (Etempvar _i tint)
                    (tptr tulong)) tulong))
              (Scall None
                (Evar _ts64 (Tfunction
                              (Tcons (tptr tuchar) (Tcons tulong Tnil)) tvoid
                              cc_default))
                ((Ebinop Oadd (Etempvar _x (tptr tuchar))
                   (Ebinop Omul (Econst_int (Int.repr 8) tint)
                     (Etempvar _i tint) tint) (tptr tuchar)) ::
                 (Etempvar _t'10 tulong) :: nil))))
          (Sset _i
            (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
              tint))))
      (Sreturn (Some (Etempvar _n tulong))))))
|}.

Definition v_iv := {|
  gvar_info := (tarray tuchar 64);
  gvar_init := (Init_int8 (Int.repr 106) :: Init_int8 (Int.repr 9) ::
                Init_int8 (Int.repr 230) :: Init_int8 (Int.repr 103) ::
                Init_int8 (Int.repr 243) :: Init_int8 (Int.repr 188) ::
                Init_int8 (Int.repr 201) :: Init_int8 (Int.repr 8) ::
                Init_int8 (Int.repr 187) :: Init_int8 (Int.repr 103) ::
                Init_int8 (Int.repr 174) :: Init_int8 (Int.repr 133) ::
                Init_int8 (Int.repr 132) :: Init_int8 (Int.repr 202) ::
                Init_int8 (Int.repr 167) :: Init_int8 (Int.repr 59) ::
                Init_int8 (Int.repr 60) :: Init_int8 (Int.repr 110) ::
                Init_int8 (Int.repr 243) :: Init_int8 (Int.repr 114) ::
                Init_int8 (Int.repr 254) :: Init_int8 (Int.repr 148) ::
                Init_int8 (Int.repr 248) :: Init_int8 (Int.repr 43) ::
                Init_int8 (Int.repr 165) :: Init_int8 (Int.repr 79) ::
                Init_int8 (Int.repr 245) :: Init_int8 (Int.repr 58) ::
                Init_int8 (Int.repr 95) :: Init_int8 (Int.repr 29) ::
                Init_int8 (Int.repr 54) :: Init_int8 (Int.repr 241) ::
                Init_int8 (Int.repr 81) :: Init_int8 (Int.repr 14) ::
                Init_int8 (Int.repr 82) :: Init_int8 (Int.repr 127) ::
                Init_int8 (Int.repr 173) :: Init_int8 (Int.repr 230) ::
                Init_int8 (Int.repr 130) :: Init_int8 (Int.repr 209) ::
                Init_int8 (Int.repr 155) :: Init_int8 (Int.repr 5) ::
                Init_int8 (Int.repr 104) :: Init_int8 (Int.repr 140) ::
                Init_int8 (Int.repr 43) :: Init_int8 (Int.repr 62) ::
                Init_int8 (Int.repr 108) :: Init_int8 (Int.repr 31) ::
                Init_int8 (Int.repr 31) :: Init_int8 (Int.repr 131) ::
                Init_int8 (Int.repr 217) :: Init_int8 (Int.repr 171) ::
                Init_int8 (Int.repr 251) :: Init_int8 (Int.repr 65) ::
                Init_int8 (Int.repr 189) :: Init_int8 (Int.repr 107) ::
                Init_int8 (Int.repr 91) :: Init_int8 (Int.repr 224) ::
                Init_int8 (Int.repr 205) :: Init_int8 (Int.repr 25) ::
                Init_int8 (Int.repr 19) :: Init_int8 (Int.repr 126) ::
                Init_int8 (Int.repr 33) :: Init_int8 (Int.repr 121) :: nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition f_crypto_hash_sha512_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_out, (tptr tuchar)) :: (_m, (tptr tuchar)) ::
                (_n, tulong) :: nil);
  fn_vars := ((_h, (tarray tuchar 64)) :: (_x, (tarray tuchar 256)) :: nil);
  fn_temps := ((_i, tulong) :: (_b, tulong) :: (_t'3, tuchar) ::
               (_t'2, tuchar) :: (_t'1, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Sset _b (Etempvar _n tulong))
  (Ssequence
    (Ssequence
      (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tulong))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _i tulong)
                         (Econst_int (Int.repr 64) tint) tint)
            Sskip
            Sbreak)
          (Ssequence
            (Sset _t'3
              (Ederef
                (Ebinop Oadd (Evar _iv (tarray tuchar 64))
                  (Etempvar _i tulong) (tptr tuchar)) tuchar))
            (Sassign
              (Ederef
                (Ebinop Oadd (Evar _h (tarray tuchar 64))
                  (Etempvar _i tulong) (tptr tuchar)) tuchar)
              (Etempvar _t'3 tuchar))))
        (Sset _i
          (Ebinop Oadd (Etempvar _i tulong) (Econst_int (Int.repr 1) tint)
            tulong))))
    (Ssequence
      (Scall None
        (Evar _crypto_hashblocks_sha512_tweet (Tfunction
                                                (Tcons (tptr tuchar)
                                                  (Tcons (tptr tuchar)
                                                    (Tcons tulong Tnil)))
                                                tint cc_default))
        ((Evar _h (tarray tuchar 64)) :: (Etempvar _m (tptr tuchar)) ::
         (Etempvar _n tulong) :: nil))
      (Ssequence
        (Sset _m
          (Ebinop Oadd (Etempvar _m (tptr tuchar)) (Etempvar _n tulong)
            (tptr tuchar)))
        (Ssequence
          (Sset _n
            (Ebinop Oand (Etempvar _n tulong)
              (Econst_int (Int.repr 127) tint) tulong))
          (Ssequence
            (Sset _m
              (Ebinop Osub (Etempvar _m (tptr tuchar)) (Etempvar _n tulong)
                (tptr tuchar)))
            (Ssequence
              (Ssequence
                (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tulong))
                (Sloop
                  (Ssequence
                    (Sifthenelse (Ebinop Olt (Etempvar _i tulong)
                                   (Econst_int (Int.repr 256) tint) tint)
                      Sskip
                      Sbreak)
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Evar _x (tarray tuchar 256))
                          (Etempvar _i tulong) (tptr tuchar)) tuchar)
                      (Econst_int (Int.repr 0) tint)))
                  (Sset _i
                    (Ebinop Oadd (Etempvar _i tulong)
                      (Econst_int (Int.repr 1) tint) tulong))))
              (Ssequence
                (Ssequence
                  (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tulong))
                  (Sloop
                    (Ssequence
                      (Sifthenelse (Ebinop Olt (Etempvar _i tulong)
                                     (Etempvar _n tulong) tint)
                        Sskip
                        Sbreak)
                      (Ssequence
                        (Sset _t'2
                          (Ederef
                            (Ebinop Oadd (Etempvar _m (tptr tuchar))
                              (Etempvar _i tulong) (tptr tuchar)) tuchar))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Evar _x (tarray tuchar 256))
                              (Etempvar _i tulong) (tptr tuchar)) tuchar)
                          (Etempvar _t'2 tuchar))))
                    (Sset _i
                      (Ebinop Oadd (Etempvar _i tulong)
                        (Econst_int (Int.repr 1) tint) tulong))))
                (Ssequence
                  (Sassign
                    (Ederef
                      (Ebinop Oadd (Evar _x (tarray tuchar 256))
                        (Etempvar _n tulong) (tptr tuchar)) tuchar)
                    (Econst_int (Int.repr 128) tint))
                  (Ssequence
                    (Sset _n
                      (Ecast
                        (Ebinop Osub (Econst_int (Int.repr 256) tint)
                          (Ebinop Omul (Econst_int (Int.repr 128) tint)
                            (Ebinop Olt (Etempvar _n tulong)
                              (Econst_int (Int.repr 112) tint) tint) tint)
                          tint) tulong))
                    (Ssequence
                      (Sassign
                        (Ederef
                          (Ebinop Oadd (Evar _x (tarray tuchar 256))
                            (Ebinop Osub (Etempvar _n tulong)
                              (Econst_int (Int.repr 9) tint) tulong)
                            (tptr tuchar)) tuchar)
                        (Ebinop Oshr (Etempvar _b tulong)
                          (Econst_int (Int.repr 61) tint) tulong))
                      (Ssequence
                        (Scall None
                          (Evar _ts64 (Tfunction
                                        (Tcons (tptr tuchar)
                                          (Tcons tulong Tnil)) tvoid
                                        cc_default))
                          ((Ebinop Osub
                             (Ebinop Oadd (Evar _x (tarray tuchar 256))
                               (Etempvar _n tulong) (tptr tuchar))
                             (Econst_int (Int.repr 8) tint) (tptr tuchar)) ::
                           (Ebinop Oshl (Etempvar _b tulong)
                             (Econst_int (Int.repr 3) tint) tulong) :: nil))
                        (Ssequence
                          (Scall None
                            (Evar _crypto_hashblocks_sha512_tweet (Tfunction
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    (tptr tuchar)
                                                                    (Tcons
                                                                    tulong
                                                                    Tnil)))
                                                                    tint
                                                                    cc_default))
                            ((Evar _h (tarray tuchar 64)) ::
                             (Evar _x (tarray tuchar 256)) ::
                             (Etempvar _n tulong) :: nil))
                          (Ssequence
                            (Ssequence
                              (Sset _i
                                (Ecast (Econst_int (Int.repr 0) tint) tulong))
                              (Sloop
                                (Ssequence
                                  (Sifthenelse (Ebinop Olt
                                                 (Etempvar _i tulong)
                                                 (Econst_int (Int.repr 64) tint)
                                                 tint)
                                    Sskip
                                    Sbreak)
                                  (Ssequence
                                    (Sset _t'1
                                      (Ederef
                                        (Ebinop Oadd
                                          (Evar _h (tarray tuchar 64))
                                          (Etempvar _i tulong) (tptr tuchar))
                                        tuchar))
                                    (Sassign
                                      (Ederef
                                        (Ebinop Oadd
                                          (Etempvar _out (tptr tuchar))
                                          (Etempvar _i tulong) (tptr tuchar))
                                        tuchar) (Etempvar _t'1 tuchar))))
                                (Sset _i
                                  (Ebinop Oadd (Etempvar _i tulong)
                                    (Econst_int (Int.repr 1) tint) tulong))))
                            (Sreturn (Some (Econst_int (Int.repr 0) tint)))))))))))))))))
|}.

Definition f_add := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_p, (tptr (tarray tlong 16))) ::
                (_q, (tptr (tarray tlong 16))) :: nil);
  fn_vars := ((_a, (tarray tlong 16)) :: (_b, (tarray tlong 16)) ::
              (_c, (tarray tlong 16)) :: (_d, (tarray tlong 16)) ::
              (_t, (tarray tlong 16)) :: (_e, (tarray tlong 16)) ::
              (_f, (tarray tlong 16)) :: (_g, (tarray tlong 16)) ::
              (_h, (tarray tlong 16)) :: nil);
  fn_temps := nil;
  fn_body :=
(Ssequence
  (Scall None
    (Evar _Z (Tfunction
               (Tcons (tptr tlong)
                 (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
               cc_default))
    ((Evar _a (tarray tlong 16)) ::
     (Ederef
       (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
         (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
       (tarray tlong 16)) ::
     (Ederef
       (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
         (Econst_int (Int.repr 0) tint) (tptr (tarray tlong 16)))
       (tarray tlong 16)) :: nil))
  (Ssequence
    (Scall None
      (Evar _Z (Tfunction
                 (Tcons (tptr tlong)
                   (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
                 cc_default))
      ((Evar _t (tarray tlong 16)) ::
       (Ederef
         (Ebinop Oadd (Etempvar _q (tptr (tarray tlong 16)))
           (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
         (tarray tlong 16)) ::
       (Ederef
         (Ebinop Oadd (Etempvar _q (tptr (tarray tlong 16)))
           (Econst_int (Int.repr 0) tint) (tptr (tarray tlong 16)))
         (tarray tlong 16)) :: nil))
    (Ssequence
      (Scall None
        (Evar _M (Tfunction
                   (Tcons (tptr tlong)
                     (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
                   cc_default))
        ((Evar _a (tarray tlong 16)) :: (Evar _a (tarray tlong 16)) ::
         (Evar _t (tarray tlong 16)) :: nil))
      (Ssequence
        (Scall None
          (Evar _A (Tfunction
                     (Tcons (tptr tlong)
                       (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
                     cc_default))
          ((Evar _b (tarray tlong 16)) ::
           (Ederef
             (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
               (Econst_int (Int.repr 0) tint) (tptr (tarray tlong 16)))
             (tarray tlong 16)) ::
           (Ederef
             (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
               (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
             (tarray tlong 16)) :: nil))
        (Ssequence
          (Scall None
            (Evar _A (Tfunction
                       (Tcons (tptr tlong)
                         (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)))
                       tvoid cc_default))
            ((Evar _t (tarray tlong 16)) ::
             (Ederef
               (Ebinop Oadd (Etempvar _q (tptr (tarray tlong 16)))
                 (Econst_int (Int.repr 0) tint) (tptr (tarray tlong 16)))
               (tarray tlong 16)) ::
             (Ederef
               (Ebinop Oadd (Etempvar _q (tptr (tarray tlong 16)))
                 (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
               (tarray tlong 16)) :: nil))
          (Ssequence
            (Scall None
              (Evar _M (Tfunction
                         (Tcons (tptr tlong)
                           (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)))
                         tvoid cc_default))
              ((Evar _b (tarray tlong 16)) :: (Evar _b (tarray tlong 16)) ::
               (Evar _t (tarray tlong 16)) :: nil))
            (Ssequence
              (Scall None
                (Evar _M (Tfunction
                           (Tcons (tptr tlong)
                             (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)))
                           tvoid cc_default))
                ((Evar _c (tarray tlong 16)) ::
                 (Ederef
                   (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
                     (Econst_int (Int.repr 3) tint) (tptr (tarray tlong 16)))
                   (tarray tlong 16)) ::
                 (Ederef
                   (Ebinop Oadd (Etempvar _q (tptr (tarray tlong 16)))
                     (Econst_int (Int.repr 3) tint) (tptr (tarray tlong 16)))
                   (tarray tlong 16)) :: nil))
              (Ssequence
                (Scall None
                  (Evar _M (Tfunction
                             (Tcons (tptr tlong)
                               (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)))
                             tvoid cc_default))
                  ((Evar _c (tarray tlong 16)) ::
                   (Evar _c (tarray tlong 16)) ::
                   (Evar _D2 (tarray tlong 16)) :: nil))
                (Ssequence
                  (Scall None
                    (Evar _M (Tfunction
                               (Tcons (tptr tlong)
                                 (Tcons (tptr tlong)
                                   (Tcons (tptr tlong) Tnil))) tvoid
                               cc_default))
                    ((Evar _d (tarray tlong 16)) ::
                     (Ederef
                       (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
                         (Econst_int (Int.repr 2) tint)
                         (tptr (tarray tlong 16))) (tarray tlong 16)) ::
                     (Ederef
                       (Ebinop Oadd (Etempvar _q (tptr (tarray tlong 16)))
                         (Econst_int (Int.repr 2) tint)
                         (tptr (tarray tlong 16))) (tarray tlong 16)) :: nil))
                  (Ssequence
                    (Scall None
                      (Evar _A (Tfunction
                                 (Tcons (tptr tlong)
                                   (Tcons (tptr tlong)
                                     (Tcons (tptr tlong) Tnil))) tvoid
                                 cc_default))
                      ((Evar _d (tarray tlong 16)) ::
                       (Evar _d (tarray tlong 16)) ::
                       (Evar _d (tarray tlong 16)) :: nil))
                    (Ssequence
                      (Scall None
                        (Evar _Z (Tfunction
                                   (Tcons (tptr tlong)
                                     (Tcons (tptr tlong)
                                       (Tcons (tptr tlong) Tnil))) tvoid
                                   cc_default))
                        ((Evar _e (tarray tlong 16)) ::
                         (Evar _b (tarray tlong 16)) ::
                         (Evar _a (tarray tlong 16)) :: nil))
                      (Ssequence
                        (Scall None
                          (Evar _Z (Tfunction
                                     (Tcons (tptr tlong)
                                       (Tcons (tptr tlong)
                                         (Tcons (tptr tlong) Tnil))) tvoid
                                     cc_default))
                          ((Evar _f (tarray tlong 16)) ::
                           (Evar _d (tarray tlong 16)) ::
                           (Evar _c (tarray tlong 16)) :: nil))
                        (Ssequence
                          (Scall None
                            (Evar _A (Tfunction
                                       (Tcons (tptr tlong)
                                         (Tcons (tptr tlong)
                                           (Tcons (tptr tlong) Tnil))) tvoid
                                       cc_default))
                            ((Evar _g (tarray tlong 16)) ::
                             (Evar _d (tarray tlong 16)) ::
                             (Evar _c (tarray tlong 16)) :: nil))
                          (Ssequence
                            (Scall None
                              (Evar _A (Tfunction
                                         (Tcons (tptr tlong)
                                           (Tcons (tptr tlong)
                                             (Tcons (tptr tlong) Tnil)))
                                         tvoid cc_default))
                              ((Evar _h (tarray tlong 16)) ::
                               (Evar _b (tarray tlong 16)) ::
                               (Evar _a (tarray tlong 16)) :: nil))
                            (Ssequence
                              (Scall None
                                (Evar _M (Tfunction
                                           (Tcons (tptr tlong)
                                             (Tcons (tptr tlong)
                                               (Tcons (tptr tlong) Tnil)))
                                           tvoid cc_default))
                                ((Ederef
                                   (Ebinop Oadd
                                     (Etempvar _p (tptr (tarray tlong 16)))
                                     (Econst_int (Int.repr 0) tint)
                                     (tptr (tarray tlong 16)))
                                   (tarray tlong 16)) ::
                                 (Evar _e (tarray tlong 16)) ::
                                 (Evar _f (tarray tlong 16)) :: nil))
                              (Ssequence
                                (Scall None
                                  (Evar _M (Tfunction
                                             (Tcons (tptr tlong)
                                               (Tcons (tptr tlong)
                                                 (Tcons (tptr tlong) Tnil)))
                                             tvoid cc_default))
                                  ((Ederef
                                     (Ebinop Oadd
                                       (Etempvar _p (tptr (tarray tlong 16)))
                                       (Econst_int (Int.repr 1) tint)
                                       (tptr (tarray tlong 16)))
                                     (tarray tlong 16)) ::
                                   (Evar _h (tarray tlong 16)) ::
                                   (Evar _g (tarray tlong 16)) :: nil))
                                (Ssequence
                                  (Scall None
                                    (Evar _M (Tfunction
                                               (Tcons (tptr tlong)
                                                 (Tcons (tptr tlong)
                                                   (Tcons (tptr tlong) Tnil)))
                                               tvoid cc_default))
                                    ((Ederef
                                       (Ebinop Oadd
                                         (Etempvar _p (tptr (tarray tlong 16)))
                                         (Econst_int (Int.repr 2) tint)
                                         (tptr (tarray tlong 16)))
                                       (tarray tlong 16)) ::
                                     (Evar _g (tarray tlong 16)) ::
                                     (Evar _f (tarray tlong 16)) :: nil))
                                  (Scall None
                                    (Evar _M (Tfunction
                                               (Tcons (tptr tlong)
                                                 (Tcons (tptr tlong)
                                                   (Tcons (tptr tlong) Tnil)))
                                               tvoid cc_default))
                                    ((Ederef
                                       (Ebinop Oadd
                                         (Etempvar _p (tptr (tarray tlong 16)))
                                         (Econst_int (Int.repr 3) tint)
                                         (tptr (tarray tlong 16)))
                                       (tarray tlong 16)) ::
                                     (Evar _e (tarray tlong 16)) ::
                                     (Evar _h (tarray tlong 16)) :: nil)))))))))))))))))))
|}.

Definition f_cswap := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_p, (tptr (tarray tlong 16))) ::
                (_q, (tptr (tarray tlong 16))) :: (_b, tuchar) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: nil);
  fn_body :=
(Ssequence
  (Sset _i (Econst_int (Int.repr 0) tint))
  (Sloop
    (Ssequence
      (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                     (Econst_int (Int.repr 4) tint) tint)
        Sskip
        Sbreak)
      (Scall None
        (Evar _sel25519 (Tfunction
                          (Tcons (tptr tlong)
                            (Tcons (tptr tlong) (Tcons tint Tnil))) tvoid
                          cc_default))
        ((Ederef
           (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
             (Etempvar _i tint) (tptr (tarray tlong 16))) (tarray tlong 16)) ::
         (Ederef
           (Ebinop Oadd (Etempvar _q (tptr (tarray tlong 16)))
             (Etempvar _i tint) (tptr (tarray tlong 16))) (tarray tlong 16)) ::
         (Etempvar _b tuchar) :: nil)))
    (Sset _i
      (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint))))
|}.

Definition f_pack := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_r, (tptr tuchar)) :: (_p, (tptr (tarray tlong 16))) :: nil);
  fn_vars := ((_tx, (tarray tlong 16)) :: (_ty, (tarray tlong 16)) ::
              (_zi, (tarray tlong 16)) :: nil);
  fn_temps := ((_t'1, tuchar) :: (_t'2, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _inv25519 (Tfunction (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                      tvoid cc_default))
    ((Evar _zi (tarray tlong 16)) ::
     (Ederef
       (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
         (Econst_int (Int.repr 2) tint) (tptr (tarray tlong 16)))
       (tarray tlong 16)) :: nil))
  (Ssequence
    (Scall None
      (Evar _M (Tfunction
                 (Tcons (tptr tlong)
                   (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
                 cc_default))
      ((Evar _tx (tarray tlong 16)) ::
       (Ederef
         (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
           (Econst_int (Int.repr 0) tint) (tptr (tarray tlong 16)))
         (tarray tlong 16)) :: (Evar _zi (tarray tlong 16)) :: nil))
    (Ssequence
      (Scall None
        (Evar _M (Tfunction
                   (Tcons (tptr tlong)
                     (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
                   cc_default))
        ((Evar _ty (tarray tlong 16)) ::
         (Ederef
           (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
             (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
           (tarray tlong 16)) :: (Evar _zi (tarray tlong 16)) :: nil))
      (Ssequence
        (Scall None
          (Evar _pack25519 (Tfunction
                             (Tcons (tptr tuchar) (Tcons (tptr tlong) Tnil))
                             tvoid cc_default))
          ((Etempvar _r (tptr tuchar)) :: (Evar _ty (tarray tlong 16)) ::
           nil))
        (Ssequence
          (Scall (Some _t'1)
            (Evar _par25519 (Tfunction (Tcons (tptr tlong) Tnil) tuchar
                              cc_default))
            ((Evar _tx (tarray tlong 16)) :: nil))
          (Ssequence
            (Sset _t'2
              (Ederef
                (Ebinop Oadd (Etempvar _r (tptr tuchar))
                  (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar))
            (Sassign
              (Ederef
                (Ebinop Oadd (Etempvar _r (tptr tuchar))
                  (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar)
              (Ebinop Oxor (Etempvar _t'2 tuchar)
                (Ebinop Oshl (Etempvar _t'1 tuchar)
                  (Econst_int (Int.repr 7) tint) tint) tint))))))))
|}.

Definition f_scalarmult := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_p, (tptr (tarray tlong 16))) ::
                (_q, (tptr (tarray tlong 16))) :: (_s, (tptr tuchar)) :: nil);
  fn_vars := nil;
  fn_temps := ((_i, tint) :: (_b, tuchar) :: (_t'1, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _set25519 (Tfunction (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                      tvoid cc_default))
    ((Ederef
       (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
         (Econst_int (Int.repr 0) tint) (tptr (tarray tlong 16)))
       (tarray tlong 16)) :: (Evar _gf0 (tarray tlong 16)) :: nil))
  (Ssequence
    (Scall None
      (Evar _set25519 (Tfunction
                        (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)) tvoid
                        cc_default))
      ((Ederef
         (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
           (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
         (tarray tlong 16)) :: (Evar _gf1 (tarray tlong 16)) :: nil))
    (Ssequence
      (Scall None
        (Evar _set25519 (Tfunction
                          (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                          tvoid cc_default))
        ((Ederef
           (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
             (Econst_int (Int.repr 2) tint) (tptr (tarray tlong 16)))
           (tarray tlong 16)) :: (Evar _gf1 (tarray tlong 16)) :: nil))
      (Ssequence
        (Scall None
          (Evar _set25519 (Tfunction
                            (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                            tvoid cc_default))
          ((Ederef
             (Ebinop Oadd (Etempvar _p (tptr (tarray tlong 16)))
               (Econst_int (Int.repr 3) tint) (tptr (tarray tlong 16)))
             (tarray tlong 16)) :: (Evar _gf0 (tarray tlong 16)) :: nil))
        (Ssequence
          (Sset _i (Econst_int (Int.repr 255) tint))
          (Sloop
            (Ssequence
              (Sifthenelse (Ebinop Oge (Etempvar _i tint)
                             (Econst_int (Int.repr 0) tint) tint)
                Sskip
                Sbreak)
              (Ssequence
                (Ssequence
                  (Sset _t'1
                    (Ederef
                      (Ebinop Oadd (Etempvar _s (tptr tuchar))
                        (Ebinop Odiv (Etempvar _i tint)
                          (Econst_int (Int.repr 8) tint) tint) (tptr tuchar))
                      tuchar))
                  (Sset _b
                    (Ecast
                      (Ebinop Oand
                        (Ebinop Oshr (Etempvar _t'1 tuchar)
                          (Ebinop Oand (Etempvar _i tint)
                            (Econst_int (Int.repr 7) tint) tint) tint)
                        (Econst_int (Int.repr 1) tint) tint) tuchar)))
                (Ssequence
                  (Scall None
                    (Evar _cswap (Tfunction
                                   (Tcons (tptr (tarray tlong 16))
                                     (Tcons (tptr (tarray tlong 16))
                                       (Tcons tuchar Tnil))) tvoid
                                   cc_default))
                    ((Etempvar _p (tptr (tarray tlong 16))) ::
                     (Etempvar _q (tptr (tarray tlong 16))) ::
                     (Etempvar _b tuchar) :: nil))
                  (Ssequence
                    (Scall None
                      (Evar _add (Tfunction
                                   (Tcons (tptr (tarray tlong 16))
                                     (Tcons (tptr (tarray tlong 16)) Tnil))
                                   tvoid cc_default))
                      ((Etempvar _q (tptr (tarray tlong 16))) ::
                       (Etempvar _p (tptr (tarray tlong 16))) :: nil))
                    (Ssequence
                      (Scall None
                        (Evar _add (Tfunction
                                     (Tcons (tptr (tarray tlong 16))
                                       (Tcons (tptr (tarray tlong 16)) Tnil))
                                     tvoid cc_default))
                        ((Etempvar _p (tptr (tarray tlong 16))) ::
                         (Etempvar _p (tptr (tarray tlong 16))) :: nil))
                      (Scall None
                        (Evar _cswap (Tfunction
                                       (Tcons (tptr (tarray tlong 16))
                                         (Tcons (tptr (tarray tlong 16))
                                           (Tcons tuchar Tnil))) tvoid
                                       cc_default))
                        ((Etempvar _p (tptr (tarray tlong 16))) ::
                         (Etempvar _q (tptr (tarray tlong 16))) ::
                         (Etempvar _b tuchar) :: nil)))))))
            (Sset _i
              (Ebinop Osub (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
                tint))))))))
|}.

Definition f_scalarbase := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_p, (tptr (tarray tlong 16))) :: (_s, (tptr tuchar)) :: nil);
  fn_vars := ((_q, (tarray (tarray tlong 16) 4)) :: nil);
  fn_temps := nil;
  fn_body :=
(Ssequence
  (Scall None
    (Evar _set25519 (Tfunction (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                      tvoid cc_default))
    ((Ederef
       (Ebinop Oadd (Evar _q (tarray (tarray tlong 16) 4))
         (Econst_int (Int.repr 0) tint) (tptr (tarray tlong 16)))
       (tarray tlong 16)) :: (Evar _X (tarray tlong 16)) :: nil))
  (Ssequence
    (Scall None
      (Evar _set25519 (Tfunction
                        (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)) tvoid
                        cc_default))
      ((Ederef
         (Ebinop Oadd (Evar _q (tarray (tarray tlong 16) 4))
           (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
         (tarray tlong 16)) :: (Evar _Y (tarray tlong 16)) :: nil))
    (Ssequence
      (Scall None
        (Evar _set25519 (Tfunction
                          (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                          tvoid cc_default))
        ((Ederef
           (Ebinop Oadd (Evar _q (tarray (tarray tlong 16) 4))
             (Econst_int (Int.repr 2) tint) (tptr (tarray tlong 16)))
           (tarray tlong 16)) :: (Evar _gf1 (tarray tlong 16)) :: nil))
      (Ssequence
        (Scall None
          (Evar _M (Tfunction
                     (Tcons (tptr tlong)
                       (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
                     cc_default))
          ((Ederef
             (Ebinop Oadd (Evar _q (tarray (tarray tlong 16) 4))
               (Econst_int (Int.repr 3) tint) (tptr (tarray tlong 16)))
             (tarray tlong 16)) :: (Evar _X (tarray tlong 16)) ::
           (Evar _Y (tarray tlong 16)) :: nil))
        (Scall None
          (Evar _scalarmult (Tfunction
                              (Tcons (tptr (tarray tlong 16))
                                (Tcons (tptr (tarray tlong 16))
                                  (Tcons (tptr tuchar) Tnil))) tvoid
                              cc_default))
          ((Etempvar _p (tptr (tarray tlong 16))) ::
           (Evar _q (tarray (tarray tlong 16) 4)) ::
           (Etempvar _s (tptr tuchar)) :: nil))))))
|}.

Definition f_crypto_sign_ed25519_tweet_keypair := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_pk, (tptr tuchar)) :: (_sk, (tptr tuchar)) :: nil);
  fn_vars := ((_d, (tarray tuchar 64)) ::
              (_p, (tarray (tarray tlong 16) 4)) :: nil);
  fn_temps := ((_i, tint) :: (_t'4, tuchar) :: (_t'3, tuchar) ::
               (_t'2, tuchar) :: (_t'1, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _randombytes (Tfunction (Tcons (tptr tuchar) (Tcons tulong Tnil))
                         tvoid cc_default))
    ((Etempvar _sk (tptr tuchar)) :: (Econst_int (Int.repr 32) tint) :: nil))
  (Ssequence
    (Scall None
      (Evar _crypto_hash_sha512_tweet (Tfunction
                                        (Tcons (tptr tuchar)
                                          (Tcons (tptr tuchar)
                                            (Tcons tulong Tnil))) tint
                                        cc_default))
      ((Evar _d (tarray tuchar 64)) :: (Etempvar _sk (tptr tuchar)) ::
       (Econst_int (Int.repr 32) tint) :: nil))
    (Ssequence
      (Ssequence
        (Sset _t'4
          (Ederef
            (Ebinop Oadd (Evar _d (tarray tuchar 64))
              (Econst_int (Int.repr 0) tint) (tptr tuchar)) tuchar))
        (Sassign
          (Ederef
            (Ebinop Oadd (Evar _d (tarray tuchar 64))
              (Econst_int (Int.repr 0) tint) (tptr tuchar)) tuchar)
          (Ebinop Oand (Etempvar _t'4 tuchar)
            (Econst_int (Int.repr 248) tint) tint)))
      (Ssequence
        (Ssequence
          (Sset _t'3
            (Ederef
              (Ebinop Oadd (Evar _d (tarray tuchar 64))
                (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _d (tarray tuchar 64))
                (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar)
            (Ebinop Oand (Etempvar _t'3 tuchar)
              (Econst_int (Int.repr 127) tint) tint)))
        (Ssequence
          (Ssequence
            (Sset _t'2
              (Ederef
                (Ebinop Oadd (Evar _d (tarray tuchar 64))
                  (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar))
            (Sassign
              (Ederef
                (Ebinop Oadd (Evar _d (tarray tuchar 64))
                  (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar)
              (Ebinop Oor (Etempvar _t'2 tuchar)
                (Econst_int (Int.repr 64) tint) tint)))
          (Ssequence
            (Scall None
              (Evar _scalarbase (Tfunction
                                  (Tcons (tptr (tarray tlong 16))
                                    (Tcons (tptr tuchar) Tnil)) tvoid
                                  cc_default))
              ((Evar _p (tarray (tarray tlong 16) 4)) ::
               (Evar _d (tarray tuchar 64)) :: nil))
            (Ssequence
              (Scall None
                (Evar _pack (Tfunction
                              (Tcons (tptr tuchar)
                                (Tcons (tptr (tarray tlong 16)) Tnil)) tvoid
                              cc_default))
                ((Etempvar _pk (tptr tuchar)) ::
                 (Evar _p (tarray (tarray tlong 16) 4)) :: nil))
              (Ssequence
                (Ssequence
                  (Sset _i (Econst_int (Int.repr 0) tint))
                  (Sloop
                    (Ssequence
                      (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                                     (Econst_int (Int.repr 32) tint) tint)
                        Sskip
                        Sbreak)
                      (Ssequence
                        (Sset _t'1
                          (Ederef
                            (Ebinop Oadd (Etempvar _pk (tptr tuchar))
                              (Etempvar _i tint) (tptr tuchar)) tuchar))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Etempvar _sk (tptr tuchar))
                              (Ebinop Oadd (Econst_int (Int.repr 32) tint)
                                (Etempvar _i tint) tint) (tptr tuchar))
                            tuchar) (Etempvar _t'1 tuchar))))
                    (Sset _i
                      (Ebinop Oadd (Etempvar _i tint)
                        (Econst_int (Int.repr 1) tint) tint))))
                (Sreturn (Some (Econst_int (Int.repr 0) tint)))))))))))
|}.

Definition v_L := {|
  gvar_info := (tarray tulong 32);
  gvar_init := (Init_int64 (Int64.repr 237) :: Init_int64 (Int64.repr 211) ::
                Init_int64 (Int64.repr 245) :: Init_int64 (Int64.repr 92) ::
                Init_int64 (Int64.repr 26) :: Init_int64 (Int64.repr 99) ::
                Init_int64 (Int64.repr 18) :: Init_int64 (Int64.repr 88) ::
                Init_int64 (Int64.repr 214) :: Init_int64 (Int64.repr 156) ::
                Init_int64 (Int64.repr 247) :: Init_int64 (Int64.repr 162) ::
                Init_int64 (Int64.repr 222) :: Init_int64 (Int64.repr 249) ::
                Init_int64 (Int64.repr 222) :: Init_int64 (Int64.repr 20) ::
                Init_int64 (Int64.repr 0) :: Init_int64 (Int64.repr 0) ::
                Init_int64 (Int64.repr 0) :: Init_int64 (Int64.repr 0) ::
                Init_int64 (Int64.repr 0) :: Init_int64 (Int64.repr 0) ::
                Init_int64 (Int64.repr 0) :: Init_int64 (Int64.repr 0) ::
                Init_int64 (Int64.repr 0) :: Init_int64 (Int64.repr 0) ::
                Init_int64 (Int64.repr 0) :: Init_int64 (Int64.repr 0) ::
                Init_int64 (Int64.repr 0) :: Init_int64 (Int64.repr 0) ::
                Init_int64 (Int64.repr 0) :: Init_int64 (Int64.repr 16) ::
                nil);
  gvar_readonly := true;
  gvar_volatile := false
|}.

Definition f_modL := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_r, (tptr tuchar)) :: (_x, (tptr tlong)) :: nil);
  fn_vars := nil;
  fn_temps := ((_carry, tlong) :: (_i, tlong) :: (_j, tlong) ::
               (_t'16, tulong) :: (_t'15, tlong) :: (_t'14, tlong) ::
               (_t'13, tlong) :: (_t'12, tlong) :: (_t'11, tlong) ::
               (_t'10, tulong) :: (_t'9, tlong) :: (_t'8, tlong) ::
               (_t'7, tlong) :: (_t'6, tlong) :: (_t'5, tulong) ::
               (_t'4, tlong) :: (_t'3, tlong) :: (_t'2, tlong) ::
               (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _i (Ecast (Econst_int (Int.repr 63) tint) tlong))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Oge (Etempvar _i tlong)
                       (Econst_int (Int.repr 32) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Sset _carry (Ecast (Econst_int (Int.repr 0) tint) tlong))
          (Ssequence
            (Ssequence
              (Sset _j
                (Ebinop Osub (Etempvar _i tlong)
                  (Econst_int (Int.repr 32) tint) tlong))
              (Sloop
                (Ssequence
                  (Sifthenelse (Ebinop Olt (Etempvar _j tlong)
                                 (Ebinop Osub (Etempvar _i tlong)
                                   (Econst_int (Int.repr 12) tint) tlong)
                                 tint)
                    Sskip
                    Sbreak)
                  (Ssequence
                    (Ssequence
                      (Sset _t'14
                        (Ederef
                          (Ebinop Oadd (Etempvar _x (tptr tlong))
                            (Etempvar _j tlong) (tptr tlong)) tlong))
                      (Ssequence
                        (Sset _t'15
                          (Ederef
                            (Ebinop Oadd (Etempvar _x (tptr tlong))
                              (Etempvar _i tlong) (tptr tlong)) tlong))
                        (Ssequence
                          (Sset _t'16
                            (Ederef
                              (Ebinop Oadd (Evar _L (tarray tulong 32))
                                (Ebinop Osub (Etempvar _j tlong)
                                  (Ebinop Osub (Etempvar _i tlong)
                                    (Econst_int (Int.repr 32) tint) tlong)
                                  tlong) (tptr tulong)) tulong))
                          (Sassign
                            (Ederef
                              (Ebinop Oadd (Etempvar _x (tptr tlong))
                                (Etempvar _j tlong) (tptr tlong)) tlong)
                            (Ebinop Oadd (Etempvar _t'14 tlong)
                              (Ebinop Osub (Etempvar _carry tlong)
                                (Ebinop Omul
                                  (Ebinop Omul
                                    (Econst_int (Int.repr 16) tint)
                                    (Etempvar _t'15 tlong) tlong)
                                  (Etempvar _t'16 tulong) tulong) tulong)
                              tulong)))))
                    (Ssequence
                      (Ssequence
                        (Sset _t'13
                          (Ederef
                            (Ebinop Oadd (Etempvar _x (tptr tlong))
                              (Etempvar _j tlong) (tptr tlong)) tlong))
                        (Sset _carry
                          (Ebinop Oshr
                            (Ebinop Oadd (Etempvar _t'13 tlong)
                              (Econst_int (Int.repr 128) tint) tlong)
                            (Econst_int (Int.repr 8) tint) tlong)))
                      (Ssequence
                        (Sset _t'12
                          (Ederef
                            (Ebinop Oadd (Etempvar _x (tptr tlong))
                              (Etempvar _j tlong) (tptr tlong)) tlong))
                        (Sassign
                          (Ederef
                            (Ebinop Oadd (Etempvar _x (tptr tlong))
                              (Etempvar _j tlong) (tptr tlong)) tlong)
                          (Ebinop Osub (Etempvar _t'12 tlong)
                            (Ebinop Oshl (Etempvar _carry tlong)
                              (Econst_int (Int.repr 8) tint) tlong) tlong))))))
                (Sset _j
                  (Ebinop Oadd (Etempvar _j tlong)
                    (Econst_int (Int.repr 1) tint) tlong))))
            (Ssequence
              (Ssequence
                (Sset _t'11
                  (Ederef
                    (Ebinop Oadd (Etempvar _x (tptr tlong))
                      (Etempvar _j tlong) (tptr tlong)) tlong))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Etempvar _x (tptr tlong))
                      (Etempvar _j tlong) (tptr tlong)) tlong)
                  (Ebinop Oadd (Etempvar _t'11 tlong) (Etempvar _carry tlong)
                    tlong)))
              (Sassign
                (Ederef
                  (Ebinop Oadd (Etempvar _x (tptr tlong)) (Etempvar _i tlong)
                    (tptr tlong)) tlong) (Econst_int (Int.repr 0) tint))))))
      (Sset _i
        (Ebinop Osub (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
          tlong))))
  (Ssequence
    (Sset _carry (Ecast (Econst_int (Int.repr 0) tint) tlong))
    (Ssequence
      (Ssequence
        (Sset _j (Ecast (Econst_int (Int.repr 0) tint) tlong))
        (Sloop
          (Ssequence
            (Sifthenelse (Ebinop Olt (Etempvar _j tlong)
                           (Econst_int (Int.repr 32) tint) tint)
              Sskip
              Sbreak)
            (Ssequence
              (Ssequence
                (Sset _t'8
                  (Ederef
                    (Ebinop Oadd (Etempvar _x (tptr tlong))
                      (Etempvar _j tlong) (tptr tlong)) tlong))
                (Ssequence
                  (Sset _t'9
                    (Ederef
                      (Ebinop Oadd (Etempvar _x (tptr tlong))
                        (Econst_int (Int.repr 31) tint) (tptr tlong)) tlong))
                  (Ssequence
                    (Sset _t'10
                      (Ederef
                        (Ebinop Oadd (Evar _L (tarray tulong 32))
                          (Etempvar _j tlong) (tptr tulong)) tulong))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Etempvar _x (tptr tlong))
                          (Etempvar _j tlong) (tptr tlong)) tlong)
                      (Ebinop Oadd (Etempvar _t'8 tlong)
                        (Ebinop Osub (Etempvar _carry tlong)
                          (Ebinop Omul
                            (Ebinop Oshr (Etempvar _t'9 tlong)
                              (Econst_int (Int.repr 4) tint) tlong)
                            (Etempvar _t'10 tulong) tulong) tulong) tulong)))))
              (Ssequence
                (Ssequence
                  (Sset _t'7
                    (Ederef
                      (Ebinop Oadd (Etempvar _x (tptr tlong))
                        (Etempvar _j tlong) (tptr tlong)) tlong))
                  (Sset _carry
                    (Ebinop Oshr (Etempvar _t'7 tlong)
                      (Econst_int (Int.repr 8) tint) tlong)))
                (Ssequence
                  (Sset _t'6
                    (Ederef
                      (Ebinop Oadd (Etempvar _x (tptr tlong))
                        (Etempvar _j tlong) (tptr tlong)) tlong))
                  (Sassign
                    (Ederef
                      (Ebinop Oadd (Etempvar _x (tptr tlong))
                        (Etempvar _j tlong) (tptr tlong)) tlong)
                    (Ebinop Oand (Etempvar _t'6 tlong)
                      (Econst_int (Int.repr 255) tint) tlong))))))
          (Sset _j
            (Ebinop Oadd (Etempvar _j tlong) (Econst_int (Int.repr 1) tint)
              tlong))))
      (Ssequence
        (Ssequence
          (Sset _j (Ecast (Econst_int (Int.repr 0) tint) tlong))
          (Sloop
            (Ssequence
              (Sifthenelse (Ebinop Olt (Etempvar _j tlong)
                             (Econst_int (Int.repr 32) tint) tint)
                Sskip
                Sbreak)
              (Ssequence
                (Sset _t'4
                  (Ederef
                    (Ebinop Oadd (Etempvar _x (tptr tlong))
                      (Etempvar _j tlong) (tptr tlong)) tlong))
                (Ssequence
                  (Sset _t'5
                    (Ederef
                      (Ebinop Oadd (Evar _L (tarray tulong 32))
                        (Etempvar _j tlong) (tptr tulong)) tulong))
                  (Sassign
                    (Ederef
                      (Ebinop Oadd (Etempvar _x (tptr tlong))
                        (Etempvar _j tlong) (tptr tlong)) tlong)
                    (Ebinop Osub (Etempvar _t'4 tlong)
                      (Ebinop Omul (Etempvar _carry tlong)
                        (Etempvar _t'5 tulong) tulong) tulong)))))
            (Sset _j
              (Ebinop Oadd (Etempvar _j tlong) (Econst_int (Int.repr 1) tint)
                tlong))))
        (Ssequence
          (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
          (Sloop
            (Ssequence
              (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                             (Econst_int (Int.repr 32) tint) tint)
                Sskip
                Sbreak)
              (Ssequence
                (Ssequence
                  (Sset _t'2
                    (Ederef
                      (Ebinop Oadd (Etempvar _x (tptr tlong))
                        (Ebinop Oadd (Etempvar _i tlong)
                          (Econst_int (Int.repr 1) tint) tlong) (tptr tlong))
                      tlong))
                  (Ssequence
                    (Sset _t'3
                      (Ederef
                        (Ebinop Oadd (Etempvar _x (tptr tlong))
                          (Etempvar _i tlong) (tptr tlong)) tlong))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Etempvar _x (tptr tlong))
                          (Ebinop Oadd (Etempvar _i tlong)
                            (Econst_int (Int.repr 1) tint) tlong)
                          (tptr tlong)) tlong)
                      (Ebinop Oadd (Etempvar _t'2 tlong)
                        (Ebinop Oshr (Etempvar _t'3 tlong)
                          (Econst_int (Int.repr 8) tint) tlong) tlong))))
                (Ssequence
                  (Sset _t'1
                    (Ederef
                      (Ebinop Oadd (Etempvar _x (tptr tlong))
                        (Etempvar _i tlong) (tptr tlong)) tlong))
                  (Sassign
                    (Ederef
                      (Ebinop Oadd (Etempvar _r (tptr tuchar))
                        (Etempvar _i tlong) (tptr tuchar)) tuchar)
                    (Ebinop Oand (Etempvar _t'1 tlong)
                      (Econst_int (Int.repr 255) tint) tlong)))))
            (Sset _i
              (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
                tlong))))))))
|}.

Definition f_reduce := {|
  fn_return := tvoid;
  fn_callconv := cc_default;
  fn_params := ((_r, (tptr tuchar)) :: nil);
  fn_vars := ((_x, (tarray tlong 64)) :: nil);
  fn_temps := ((_i, tlong) :: (_t'1, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Ssequence
    (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
    (Sloop
      (Ssequence
        (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                       (Econst_int (Int.repr 64) tint) tint)
          Sskip
          Sbreak)
        (Ssequence
          (Sset _t'1
            (Ederef
              (Ebinop Oadd (Etempvar _r (tptr tuchar)) (Etempvar _i tlong)
                (tptr tuchar)) tuchar))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _x (tarray tlong 64)) (Etempvar _i tlong)
                (tptr tlong)) tlong) (Ecast (Etempvar _t'1 tuchar) tulong))))
      (Sset _i
        (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
          tlong))))
  (Ssequence
    (Ssequence
      (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
      (Sloop
        (Ssequence
          (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                         (Econst_int (Int.repr 64) tint) tint)
            Sskip
            Sbreak)
          (Sassign
            (Ederef
              (Ebinop Oadd (Etempvar _r (tptr tuchar)) (Etempvar _i tlong)
                (tptr tuchar)) tuchar) (Econst_int (Int.repr 0) tint)))
        (Sset _i
          (Ebinop Oadd (Etempvar _i tlong) (Econst_int (Int.repr 1) tint)
            tlong))))
    (Scall None
      (Evar _modL (Tfunction (Tcons (tptr tuchar) (Tcons (tptr tlong) Tnil))
                    tvoid cc_default))
      ((Etempvar _r (tptr tuchar)) :: (Evar _x (tarray tlong 64)) :: nil))))
|}.

Definition f_crypto_sign_ed25519_tweet := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_sm, (tptr tuchar)) :: (_smlen, (tptr tulong)) ::
                (_m, (tptr tuchar)) :: (_n, tulong) ::
                (_sk, (tptr tuchar)) :: nil);
  fn_vars := ((_d, (tarray tuchar 64)) :: (_h, (tarray tuchar 64)) ::
              (_r, (tarray tuchar 64)) :: (_x, (tarray tlong 64)) ::
              (_p, (tarray (tarray tlong 16) 4)) :: nil);
  fn_temps := ((_i, tlong) :: (_j, tlong) :: (_t'10, tuchar) ::
               (_t'9, tuchar) :: (_t'8, tuchar) :: (_t'7, tuchar) ::
               (_t'6, tuchar) :: (_t'5, tuchar) :: (_t'4, tuchar) ::
               (_t'3, tuchar) :: (_t'2, tuchar) :: (_t'1, tlong) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _crypto_hash_sha512_tweet (Tfunction
                                      (Tcons (tptr tuchar)
                                        (Tcons (tptr tuchar)
                                          (Tcons tulong Tnil))) tint
                                      cc_default))
    ((Evar _d (tarray tuchar 64)) :: (Etempvar _sk (tptr tuchar)) ::
     (Econst_int (Int.repr 32) tint) :: nil))
  (Ssequence
    (Ssequence
      (Sset _t'10
        (Ederef
          (Ebinop Oadd (Evar _d (tarray tuchar 64))
            (Econst_int (Int.repr 0) tint) (tptr tuchar)) tuchar))
      (Sassign
        (Ederef
          (Ebinop Oadd (Evar _d (tarray tuchar 64))
            (Econst_int (Int.repr 0) tint) (tptr tuchar)) tuchar)
        (Ebinop Oand (Etempvar _t'10 tuchar) (Econst_int (Int.repr 248) tint)
          tint)))
    (Ssequence
      (Ssequence
        (Sset _t'9
          (Ederef
            (Ebinop Oadd (Evar _d (tarray tuchar 64))
              (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar))
        (Sassign
          (Ederef
            (Ebinop Oadd (Evar _d (tarray tuchar 64))
              (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar)
          (Ebinop Oand (Etempvar _t'9 tuchar)
            (Econst_int (Int.repr 127) tint) tint)))
      (Ssequence
        (Ssequence
          (Sset _t'8
            (Ederef
              (Ebinop Oadd (Evar _d (tarray tuchar 64))
                (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar))
          (Sassign
            (Ederef
              (Ebinop Oadd (Evar _d (tarray tuchar 64))
                (Econst_int (Int.repr 31) tint) (tptr tuchar)) tuchar)
            (Ebinop Oor (Etempvar _t'8 tuchar)
              (Econst_int (Int.repr 64) tint) tint)))
        (Ssequence
          (Sassign (Ederef (Etempvar _smlen (tptr tulong)) tulong)
            (Ebinop Oadd (Etempvar _n tulong) (Econst_int (Int.repr 64) tint)
              tulong))
          (Ssequence
            (Ssequence
              (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
              (Sloop
                (Ssequence
                  (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                                 (Etempvar _n tulong) tint)
                    Sskip
                    Sbreak)
                  (Ssequence
                    (Sset _t'7
                      (Ederef
                        (Ebinop Oadd (Etempvar _m (tptr tuchar))
                          (Etempvar _i tlong) (tptr tuchar)) tuchar))
                    (Sassign
                      (Ederef
                        (Ebinop Oadd (Etempvar _sm (tptr tuchar))
                          (Ebinop Oadd (Econst_int (Int.repr 64) tint)
                            (Etempvar _i tlong) tlong) (tptr tuchar)) tuchar)
                      (Etempvar _t'7 tuchar))))
                (Sset _i
                  (Ebinop Oadd (Etempvar _i tlong)
                    (Econst_int (Int.repr 1) tint) tlong))))
            (Ssequence
              (Ssequence
                (Sset _i (Ecast (Econst_int (Int.repr 0) tint) tlong))
                (Sloop
                  (Ssequence
                    (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                                   (Econst_int (Int.repr 32) tint) tint)
                      Sskip
                      Sbreak)
                    (Ssequence
                      (Sset _t'6
                        (Ederef
                          (Ebinop Oadd (Evar _d (tarray tuchar 64))
                            (Ebinop Oadd (Econst_int (Int.repr 32) tint)
                              (Etempvar _i tlong) tlong) (tptr tuchar))
                          tuchar))
                      (Sassign
                        (Ederef
                          (Ebinop Oadd (Etempvar _sm (tptr tuchar))
                            (Ebinop Oadd (Econst_int (Int.repr 32) tint)
                              (Etempvar _i tlong) tlong) (tptr tuchar))
                          tuchar) (Etempvar _t'6 tuchar))))
                  (Sset _i
                    (Ebinop Oadd (Etempvar _i tlong)
                      (Econst_int (Int.repr 1) tint) tlong))))
              (Ssequence
                (Scall None
                  (Evar _crypto_hash_sha512_tweet (Tfunction
                                                    (Tcons (tptr tuchar)
                                                      (Tcons (tptr tuchar)
                                                        (Tcons tulong Tnil)))
                                                    tint cc_default))
                  ((Evar _r (tarray tuchar 64)) ::
                   (Ebinop Oadd (Etempvar _sm (tptr tuchar))
                     (Econst_int (Int.repr 32) tint) (tptr tuchar)) ::
                   (Ebinop Oadd (Etempvar _n tulong)
                     (Econst_int (Int.repr 32) tint) tulong) :: nil))
                (Ssequence
                  (Scall None
                    (Evar _reduce (Tfunction (Tcons (tptr tuchar) Tnil) tvoid
                                    cc_default))
                    ((Evar _r (tarray tuchar 64)) :: nil))
                  (Ssequence
                    (Scall None
                      (Evar _scalarbase (Tfunction
                                          (Tcons (tptr (tarray tlong 16))
                                            (Tcons (tptr tuchar) Tnil)) tvoid
                                          cc_default))
                      ((Evar _p (tarray (tarray tlong 16) 4)) ::
                       (Evar _r (tarray tuchar 64)) :: nil))
                    (Ssequence
                      (Scall None
                        (Evar _pack (Tfunction
                                      (Tcons (tptr tuchar)
                                        (Tcons (tptr (tarray tlong 16)) Tnil))
                                      tvoid cc_default))
                        ((Etempvar _sm (tptr tuchar)) ::
                         (Evar _p (tarray (tarray tlong 16) 4)) :: nil))
                      (Ssequence
                        (Ssequence
                          (Sset _i
                            (Ecast (Econst_int (Int.repr 0) tint) tlong))
                          (Sloop
                            (Ssequence
                              (Sifthenelse (Ebinop Olt (Etempvar _i tlong)
                                             (Econst_int (Int.repr 32) tint)
                                             tint)
                                Sskip
                                Sbreak)
                              (Ssequence
                                (Sset _t'5
                                  (Ederef
                                    (Ebinop Oadd (Etempvar _sk (tptr tuchar))
                                      (Ebinop Oadd (Etempvar _i tlong)
                                        (Econst_int (Int.repr 32) tint)
                                        tlong) (tptr tuchar)) tuchar))
                                (Sassign
                                  (Ederef
                                    (Ebinop Oadd (Etempvar _sm (tptr tuchar))
                                      (Ebinop Oadd (Etempvar _i tlong)
                                        (Econst_int (Int.repr 32) tint)
                                        tlong) (tptr tuchar)) tuchar)
                                  (Etempvar _t'5 tuchar))))
                            (Sset _i
                              (Ebinop Oadd (Etempvar _i tlong)
                                (Econst_int (Int.repr 1) tint) tlong))))
                        (Ssequence
                          (Scall None
                            (Evar _crypto_hash_sha512_tweet (Tfunction
                                                              (Tcons
                                                                (tptr tuchar)
                                                                (Tcons
                                                                  (tptr tuchar)
                                                                  (Tcons
                                                                    tulong
                                                                    Tnil)))
                                                              tint
                                                              cc_default))
                            ((Evar _h (tarray tuchar 64)) ::
                             (Etempvar _sm (tptr tuchar)) ::
                             (Ebinop Oadd (Etempvar _n tulong)
                               (Econst_int (Int.repr 64) tint) tulong) ::
                             nil))
                          (Ssequence
                            (Scall None
                              (Evar _reduce (Tfunction
                                              (Tcons (tptr tuchar) Tnil)
                                              tvoid cc_default))
                              ((Evar _h (tarray tuchar 64)) :: nil))
                            (Ssequence
                              (Ssequence
                                (Sset _i
                                  (Ecast (Econst_int (Int.repr 0) tint)
                                    tlong))
                                (Sloop
                                  (Ssequence
                                    (Sifthenelse (Ebinop Olt
                                                   (Etempvar _i tlong)
                                                   (Econst_int (Int.repr 64) tint)
                                                   tint)
                                      Sskip
                                      Sbreak)
                                    (Sassign
                                      (Ederef
                                        (Ebinop Oadd
                                          (Evar _x (tarray tlong 64))
                                          (Etempvar _i tlong) (tptr tlong))
                                        tlong)
                                      (Econst_int (Int.repr 0) tint)))
                                  (Sset _i
                                    (Ebinop Oadd (Etempvar _i tlong)
                                      (Econst_int (Int.repr 1) tint) tlong))))
                              (Ssequence
                                (Ssequence
                                  (Sset _i
                                    (Ecast (Econst_int (Int.repr 0) tint)
                                      tlong))
                                  (Sloop
                                    (Ssequence
                                      (Sifthenelse (Ebinop Olt
                                                     (Etempvar _i tlong)
                                                     (Econst_int (Int.repr 32) tint)
                                                     tint)
                                        Sskip
                                        Sbreak)
                                      (Ssequence
                                        (Sset _t'4
                                          (Ederef
                                            (Ebinop Oadd
                                              (Evar _r (tarray tuchar 64))
                                              (Etempvar _i tlong)
                                              (tptr tuchar)) tuchar))
                                        (Sassign
                                          (Ederef
                                            (Ebinop Oadd
                                              (Evar _x (tarray tlong 64))
                                              (Etempvar _i tlong)
                                              (tptr tlong)) tlong)
                                          (Ecast (Etempvar _t'4 tuchar)
                                            tulong))))
                                    (Sset _i
                                      (Ebinop Oadd (Etempvar _i tlong)
                                        (Econst_int (Int.repr 1) tint) tlong))))
                                (Ssequence
                                  (Ssequence
                                    (Sset _i
                                      (Ecast (Econst_int (Int.repr 0) tint)
                                        tlong))
                                    (Sloop
                                      (Ssequence
                                        (Sifthenelse (Ebinop Olt
                                                       (Etempvar _i tlong)
                                                       (Econst_int (Int.repr 32) tint)
                                                       tint)
                                          Sskip
                                          Sbreak)
                                        (Ssequence
                                          (Sset _j
                                            (Ecast
                                              (Econst_int (Int.repr 0) tint)
                                              tlong))
                                          (Sloop
                                            (Ssequence
                                              (Sifthenelse (Ebinop Olt
                                                             (Etempvar _j tlong)
                                                             (Econst_int (Int.repr 32) tint)
                                                             tint)
                                                Sskip
                                                Sbreak)
                                              (Ssequence
                                                (Sset _t'1
                                                  (Ederef
                                                    (Ebinop Oadd
                                                      (Evar _x (tarray tlong 64))
                                                      (Ebinop Oadd
                                                        (Etempvar _i tlong)
                                                        (Etempvar _j tlong)
                                                        tlong) (tptr tlong))
                                                    tlong))
                                                (Ssequence
                                                  (Sset _t'2
                                                    (Ederef
                                                      (Ebinop Oadd
                                                        (Evar _h (tarray tuchar 64))
                                                        (Etempvar _i tlong)
                                                        (tptr tuchar))
                                                      tuchar))
                                                  (Ssequence
                                                    (Sset _t'3
                                                      (Ederef
                                                        (Ebinop Oadd
                                                          (Evar _d (tarray tuchar 64))
                                                          (Etempvar _j tlong)
                                                          (tptr tuchar))
                                                        tuchar))
                                                    (Sassign
                                                      (Ederef
                                                        (Ebinop Oadd
                                                          (Evar _x (tarray tlong 64))
                                                          (Ebinop Oadd
                                                            (Etempvar _i tlong)
                                                            (Etempvar _j tlong)
                                                            tlong)
                                                          (tptr tlong))
                                                        tlong)
                                                      (Ebinop Oadd
                                                        (Etempvar _t'1 tlong)
                                                        (Ebinop Omul
                                                          (Etempvar _t'2 tuchar)
                                                          (Ecast
                                                            (Etempvar _t'3 tuchar)
                                                            tulong) tulong)
                                                        tulong))))))
                                            (Sset _j
                                              (Ebinop Oadd
                                                (Etempvar _j tlong)
                                                (Econst_int (Int.repr 1) tint)
                                                tlong)))))
                                      (Sset _i
                                        (Ebinop Oadd (Etempvar _i tlong)
                                          (Econst_int (Int.repr 1) tint)
                                          tlong))))
                                  (Ssequence
                                    (Scall None
                                      (Evar _modL (Tfunction
                                                    (Tcons (tptr tuchar)
                                                      (Tcons (tptr tlong)
                                                        Tnil)) tvoid
                                                    cc_default))
                                      ((Ebinop Oadd
                                         (Etempvar _sm (tptr tuchar))
                                         (Econst_int (Int.repr 32) tint)
                                         (tptr tuchar)) ::
                                       (Evar _x (tarray tlong 64)) :: nil))
                                    (Sreturn (Some (Econst_int (Int.repr 0) tint)))))))))))))))))))))
|}.

Definition f_unpackneg := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_r, (tptr (tarray tlong 16))) :: (_p, (tptr tuchar)) :: nil);
  fn_vars := ((_t, (tarray tlong 16)) :: (_chk, (tarray tlong 16)) ::
              (_num, (tarray tlong 16)) :: (_den, (tarray tlong 16)) ::
              (_den2, (tarray tlong 16)) :: (_den4, (tarray tlong 16)) ::
              (_den6, (tarray tlong 16)) :: nil);
  fn_temps := ((_t'3, tuchar) :: (_t'2, tint) :: (_t'1, tint) ::
               (_t'4, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Scall None
    (Evar _set25519 (Tfunction (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                      tvoid cc_default))
    ((Ederef
       (Ebinop Oadd (Etempvar _r (tptr (tarray tlong 16)))
         (Econst_int (Int.repr 2) tint) (tptr (tarray tlong 16)))
       (tarray tlong 16)) :: (Evar _gf1 (tarray tlong 16)) :: nil))
  (Ssequence
    (Scall None
      (Evar _unpack25519 (Tfunction
                           (Tcons (tptr tlong) (Tcons (tptr tuchar) Tnil))
                           tvoid cc_default))
      ((Ederef
         (Ebinop Oadd (Etempvar _r (tptr (tarray tlong 16)))
           (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
         (tarray tlong 16)) :: (Etempvar _p (tptr tuchar)) :: nil))
    (Ssequence
      (Scall None
        (Evar _S (Tfunction (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                   tvoid cc_default))
        ((Evar _num (tarray tlong 16)) ::
         (Ederef
           (Ebinop Oadd (Etempvar _r (tptr (tarray tlong 16)))
             (Econst_int (Int.repr 1) tint) (tptr (tarray tlong 16)))
           (tarray tlong 16)) :: nil))
      (Ssequence
        (Scall None
          (Evar _M (Tfunction
                     (Tcons (tptr tlong)
                       (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))) tvoid
                     cc_default))
          ((Evar _den (tarray tlong 16)) :: (Evar _num (tarray tlong 16)) ::
           (Evar _D (tarray tlong 16)) :: nil))
        (Ssequence
          (Scall None
            (Evar _Z (Tfunction
                       (Tcons (tptr tlong)
                         (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)))
                       tvoid cc_default))
            ((Evar _num (tarray tlong 16)) ::
             (Evar _num (tarray tlong 16)) ::
             (Ederef
               (Ebinop Oadd (Etempvar _r (tptr (tarray tlong 16)))
                 (Econst_int (Int.repr 2) tint) (tptr (tarray tlong 16)))
               (tarray tlong 16)) :: nil))
          (Ssequence
            (Scall None
              (Evar _A (Tfunction
                         (Tcons (tptr tlong)
                           (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil)))
                         tvoid cc_default))
              ((Evar _den (tarray tlong 16)) ::
               (Ederef
                 (Ebinop Oadd (Etempvar _r (tptr (tarray tlong 16)))
                   (Econst_int (Int.repr 2) tint) (tptr (tarray tlong 16)))
                 (tarray tlong 16)) :: (Evar _den (tarray tlong 16)) :: nil))
            (Ssequence
              (Scall None
                (Evar _S (Tfunction
                           (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                           tvoid cc_default))
                ((Evar _den2 (tarray tlong 16)) ::
                 (Evar _den (tarray tlong 16)) :: nil))
              (Ssequence
                (Scall None
                  (Evar _S (Tfunction
                             (Tcons (tptr tlong) (Tcons (tptr tlong) Tnil))
                             tvoid cc_default))
                  ((Evar _den4 (tarray tlong 16)) ::
                   (Evar _den2 (tarray tlong 16)) :: nil))
                (Ssequence
                  (Scall None
                    (Evar _M (Tfunction
                               (Tcons (tptr tlong)
                                 (Tcons (tptr tlong)
                                   (Tcons (tptr tlong) Tnil))) tvoid
                               cc_default))
                    ((Evar _den6 (tarray tlong 16)) ::
                     (Evar _den4 (tarray tlong 16)) ::
                     (Evar _den2 (tarray tlong 16)) :: nil))
                  (Ssequence
                    (Scall None
                      (Evar _M (Tfunction
                                 (Tcons (tptr tlong)
                                   (Tcons (tptr tlong)
                                     (Tcons (tptr tlong) Tnil))) tvoid
                                 cc_default))
                      ((Evar _t (tarray tlong 16)) ::
                       (Evar _den6 (tarray tlong 16)) ::
                       (Evar _num (tarray tlong 16)) :: nil))
                    (Ssequence
                      (Scall None
                        (Evar _M (Tfunction
                                   (Tcons (tptr tlong)
                                     (Tcons (tptr tlong)
                                       (Tcons (tptr tlong) Tnil))) tvoid
                                   cc_default))
                        ((Evar _t (tarray tlong 16)) ::
                         (Evar _t (tarray tlong 16)) ::
                         (Evar _den (tarray tlong 16)) :: nil))
                      (Ssequence
                        (Scall None
                          (Evar _pow2523 (Tfunction
                                           (Tcons (tptr tlong)
                                             (Tcons (tptr tlong) Tnil)) tvoid
                                           cc_default))
                          ((Evar _t (tarray tlong 16)) ::
                           (Evar _t (tarray tlong 16)) :: nil))
                        (Ssequence
                          (Scall None
                            (Evar _M (Tfunction
                                       (Tcons (tptr tlong)
                                         (Tcons (tptr tlong)
                                           (Tcons (tptr tlong) Tnil))) tvoid
                                       cc_default))
                            ((Evar _t (tarray tlong 16)) ::
                             (Evar _t (tarray tlong 16)) ::
                             (Evar _num (tarray tlong 16)) :: nil))
                          (Ssequence
                            (Scall None
                              (Evar _M (Tfunction
                                         (Tcons (tptr tlong)
                                           (Tcons (tptr tlong)
                                             (Tcons (tptr tlong) Tnil)))
                                         tvoid cc_default))
                              ((Evar _t (tarray tlong 16)) ::
                               (Evar _t (tarray tlong 16)) ::
                               (Evar _den (tarray tlong 16)) :: nil))
                            (Ssequence
                              (Scall None
                                (Evar _M (Tfunction
                                           (Tcons (tptr tlong)
                                             (Tcons (tptr tlong)
                                               (Tcons (tptr tlong) Tnil)))
                                           tvoid cc_default))
                                ((Evar _t (tarray tlong 16)) ::
                                 (Evar _t (tarray tlong 16)) ::
                                 (Evar _den (tarray tlong 16)) :: nil))
                              (Ssequence
                                (Scall None
                                  (Evar _M (Tfunction
                                             (Tcons (tptr tlong)
                                               (Tcons (tptr tlong)
                                                 (Tcons (tptr tlong) Tnil)))
                                             tvoid cc_default))
                                  ((Ederef
                                     (Ebinop Oadd
                                       (Etempvar _r (tptr (tarray tlong 16)))
                                       (Econst_int (Int.repr 0) tint)
                                       (tptr (tarray tlong 16)))
                                     (tarray tlong 16)) ::
                                   (Evar _t (tarray tlong 16)) ::
                                   (Evar _den (tarray tlong 16)) :: nil))
                                (Ssequence
                                  (Scall None
                                    (Evar _S (Tfunction
                                               (Tcons (tptr tlong)
                                                 (Tcons (tptr tlong) Tnil))
                                               tvoid cc_default))
                                    ((Evar _chk (tarray tlong 16)) ::
                                     (Ederef
                                       (Ebinop Oadd
                                         (Etempvar _r (tptr (tarray tlong 16)))
                                         (Econst_int (Int.repr 0) tint)
                                         (tptr (tarray tlong 16)))
                                       (tarray tlong 16)) :: nil))
                                  (Ssequence
                                    (Scall None
                                      (Evar _M (Tfunction
                                                 (Tcons (tptr tlong)
                                                   (Tcons (tptr tlong)
                                                     (Tcons (tptr tlong)
                                                       Tnil))) tvoid
                                                 cc_default))
                                      ((Evar _chk (tarray tlong 16)) ::
                                       (Evar _chk (tarray tlong 16)) ::
                                       (Evar _den (tarray tlong 16)) :: nil))
                                    (Ssequence
                                      (Ssequence
                                        (Scall (Some _t'1)
                                          (Evar _neq25519 (Tfunction
                                                            (Tcons
                                                              (tptr tlong)
                                                              (Tcons
                                                                (tptr tlong)
                                                                Tnil)) tint
                                                            cc_default))
                                          ((Evar _chk (tarray tlong 16)) ::
                                           (Evar _num (tarray tlong 16)) ::
                                           nil))
                                        (Sifthenelse (Etempvar _t'1 tint)
                                          (Scall None
                                            (Evar _M (Tfunction
                                                       (Tcons (tptr tlong)
                                                         (Tcons (tptr tlong)
                                                           (Tcons
                                                             (tptr tlong)
                                                             Tnil))) tvoid
                                                       cc_default))
                                            ((Ederef
                                               (Ebinop Oadd
                                                 (Etempvar _r (tptr (tarray tlong 16)))
                                                 (Econst_int (Int.repr 0) tint)
                                                 (tptr (tarray tlong 16)))
                                               (tarray tlong 16)) ::
                                             (Ederef
                                               (Ebinop Oadd
                                                 (Etempvar _r (tptr (tarray tlong 16)))
                                                 (Econst_int (Int.repr 0) tint)
                                                 (tptr (tarray tlong 16)))
                                               (tarray tlong 16)) ::
                                             (Evar _I (tarray tlong 16)) ::
                                             nil))
                                          Sskip))
                                      (Ssequence
                                        (Scall None
                                          (Evar _S (Tfunction
                                                     (Tcons (tptr tlong)
                                                       (Tcons (tptr tlong)
                                                         Tnil)) tvoid
                                                     cc_default))
                                          ((Evar _chk (tarray tlong 16)) ::
                                           (Ederef
                                             (Ebinop Oadd
                                               (Etempvar _r (tptr (tarray tlong 16)))
                                               (Econst_int (Int.repr 0) tint)
                                               (tptr (tarray tlong 16)))
                                             (tarray tlong 16)) :: nil))
                                        (Ssequence
                                          (Scall None
                                            (Evar _M (Tfunction
                                                       (Tcons (tptr tlong)
                                                         (Tcons (tptr tlong)
                                                           (Tcons
                                                             (tptr tlong)
                                                             Tnil))) tvoid
                                                       cc_default))
                                            ((Evar _chk (tarray tlong 16)) ::
                                             (Evar _chk (tarray tlong 16)) ::
                                             (Evar _den (tarray tlong 16)) ::
                                             nil))
                                          (Ssequence
                                            (Ssequence
                                              (Scall (Some _t'2)
                                                (Evar _neq25519 (Tfunction
                                                                  (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    Tnil))
                                                                  tint
                                                                  cc_default))
                                                ((Evar _chk (tarray tlong 16)) ::
                                                 (Evar _num (tarray tlong 16)) ::
                                                 nil))
                                              (Sifthenelse (Etempvar _t'2 tint)
                                                (Sreturn (Some (Eunop Oneg
                                                                 (Econst_int (Int.repr 1) tint)
                                                                 tint)))
                                                Sskip))
                                            (Ssequence
                                              (Ssequence
                                                (Scall (Some _t'3)
                                                  (Evar _par25519 (Tfunction
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    Tnil)
                                                                    tuchar
                                                                    cc_default))
                                                  ((Ederef
                                                     (Ebinop Oadd
                                                       (Etempvar _r (tptr (tarray tlong 16)))
                                                       (Econst_int (Int.repr 0) tint)
                                                       (tptr (tarray tlong 16)))
                                                     (tarray tlong 16)) ::
                                                   nil))
                                                (Ssequence
                                                  (Sset _t'4
                                                    (Ederef
                                                      (Ebinop Oadd
                                                        (Etempvar _p (tptr tuchar))
                                                        (Econst_int (Int.repr 31) tint)
                                                        (tptr tuchar))
                                                      tuchar))
                                                  (Sifthenelse (Ebinop Oeq
                                                                 (Etempvar _t'3 tuchar)
                                                                 (Ebinop Oshr
                                                                   (Etempvar _t'4 tuchar)
                                                                   (Econst_int (Int.repr 7) tint)
                                                                   tint)
                                                                 tint)
                                                    (Scall None
                                                      (Evar _Z (Tfunction
                                                                 (Tcons
                                                                   (tptr tlong)
                                                                   (Tcons
                                                                    (tptr tlong)
                                                                    (Tcons
                                                                    (tptr tlong)
                                                                    Tnil)))
                                                                 tvoid
                                                                 cc_default))
                                                      ((Ederef
                                                         (Ebinop Oadd
                                                           (Etempvar _r (tptr (tarray tlong 16)))
                                                           (Econst_int (Int.repr 0) tint)
                                                           (tptr (tarray tlong 16)))
                                                         (tarray tlong 16)) ::
                                                       (Evar _gf0 (tarray tlong 16)) ::
                                                       (Ederef
                                                         (Ebinop Oadd
                                                           (Etempvar _r (tptr (tarray tlong 16)))
                                                           (Econst_int (Int.repr 0) tint)
                                                           (tptr (tarray tlong 16)))
                                                         (tarray tlong 16)) ::
                                                       nil))
                                                    Sskip)))
                                              (Ssequence
                                                (Scall None
                                                  (Evar _M (Tfunction
                                                             (Tcons
                                                               (tptr tlong)
                                                               (Tcons
                                                                 (tptr tlong)
                                                                 (Tcons
                                                                   (tptr tlong)
                                                                   Tnil)))
                                                             tvoid
                                                             cc_default))
                                                  ((Ederef
                                                     (Ebinop Oadd
                                                       (Etempvar _r (tptr (tarray tlong 16)))
                                                       (Econst_int (Int.repr 3) tint)
                                                       (tptr (tarray tlong 16)))
                                                     (tarray tlong 16)) ::
                                                   (Ederef
                                                     (Ebinop Oadd
                                                       (Etempvar _r (tptr (tarray tlong 16)))
                                                       (Econst_int (Int.repr 0) tint)
                                                       (tptr (tarray tlong 16)))
                                                     (tarray tlong 16)) ::
                                                   (Ederef
                                                     (Ebinop Oadd
                                                       (Etempvar _r (tptr (tarray tlong 16)))
                                                       (Econst_int (Int.repr 1) tint)
                                                       (tptr (tarray tlong 16)))
                                                     (tarray tlong 16)) ::
                                                   nil))
                                                (Sreturn (Some (Econst_int (Int.repr 0) tint)))))))))))))))))))))))))))
|}.

Definition f_crypto_sign_ed25519_tweet_open := {|
  fn_return := tint;
  fn_callconv := cc_default;
  fn_params := ((_m, (tptr tuchar)) :: (_mlen, (tptr tulong)) ::
                (_sm, (tptr tuchar)) :: (_n, tulong) ::
                (_pk, (tptr tuchar)) :: nil);
  fn_vars := ((_t, (tarray tuchar 32)) :: (_h, (tarray tuchar 64)) ::
              (_p, (tarray (tarray tlong 16) 4)) ::
              (_q, (tarray (tarray tlong 16) 4)) :: nil);
  fn_temps := ((_i, tint) :: (_t'2, tint) :: (_t'1, tint) ::
               (_t'5, tuchar) :: (_t'4, tuchar) :: (_t'3, tuchar) :: nil);
  fn_body :=
(Ssequence
  (Sassign (Ederef (Etempvar _mlen (tptr tulong)) tulong)
    (Eunop Oneg (Econst_int (Int.repr 1) tint) tint))
  (Ssequence
    (Sifthenelse (Ebinop Olt (Etempvar _n tulong)
                   (Econst_int (Int.repr 64) tint) tint)
      (Sreturn (Some (Eunop Oneg (Econst_int (Int.repr 1) tint) tint)))
      Sskip)
    (Ssequence
      (Ssequence
        (Scall (Some _t'1)
          (Evar _unpackneg (Tfunction
                             (Tcons (tptr (tarray tlong 16))
                               (Tcons (tptr tuchar) Tnil)) tint cc_default))
          ((Evar _q (tarray (tarray tlong 16) 4)) ::
           (Etempvar _pk (tptr tuchar)) :: nil))
        (Sifthenelse (Etempvar _t'1 tint)
          (Sreturn (Some (Eunop Oneg (Econst_int (Int.repr 1) tint) tint)))
          Sskip))
      (Ssequence
        (Ssequence
          (Sset _i (Econst_int (Int.repr 0) tint))
          (Sloop
            (Ssequence
              (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                             (Etempvar _n tulong) tint)
                Sskip
                Sbreak)
              (Ssequence
                (Sset _t'5
                  (Ederef
                    (Ebinop Oadd (Etempvar _sm (tptr tuchar))
                      (Etempvar _i tint) (tptr tuchar)) tuchar))
                (Sassign
                  (Ederef
                    (Ebinop Oadd (Etempvar _m (tptr tuchar))
                      (Etempvar _i tint) (tptr tuchar)) tuchar)
                  (Etempvar _t'5 tuchar))))
            (Sset _i
              (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint)
                tint))))
        (Ssequence
          (Ssequence
            (Sset _i (Econst_int (Int.repr 0) tint))
            (Sloop
              (Ssequence
                (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                               (Econst_int (Int.repr 32) tint) tint)
                  Sskip
                  Sbreak)
                (Ssequence
                  (Sset _t'4
                    (Ederef
                      (Ebinop Oadd (Etempvar _pk (tptr tuchar))
                        (Etempvar _i tint) (tptr tuchar)) tuchar))
                  (Sassign
                    (Ederef
                      (Ebinop Oadd (Etempvar _m (tptr tuchar))
                        (Ebinop Oadd (Etempvar _i tint)
                          (Econst_int (Int.repr 32) tint) tint)
                        (tptr tuchar)) tuchar) (Etempvar _t'4 tuchar))))
              (Sset _i
                (Ebinop Oadd (Etempvar _i tint)
                  (Econst_int (Int.repr 1) tint) tint))))
          (Ssequence
            (Scall None
              (Evar _crypto_hash_sha512_tweet (Tfunction
                                                (Tcons (tptr tuchar)
                                                  (Tcons (tptr tuchar)
                                                    (Tcons tulong Tnil)))
                                                tint cc_default))
              ((Evar _h (tarray tuchar 64)) :: (Etempvar _m (tptr tuchar)) ::
               (Etempvar _n tulong) :: nil))
            (Ssequence
              (Scall None
                (Evar _reduce (Tfunction (Tcons (tptr tuchar) Tnil) tvoid
                                cc_default))
                ((Evar _h (tarray tuchar 64)) :: nil))
              (Ssequence
                (Scall None
                  (Evar _scalarmult (Tfunction
                                      (Tcons (tptr (tarray tlong 16))
                                        (Tcons (tptr (tarray tlong 16))
                                          (Tcons (tptr tuchar) Tnil))) tvoid
                                      cc_default))
                  ((Evar _p (tarray (tarray tlong 16) 4)) ::
                   (Evar _q (tarray (tarray tlong 16) 4)) ::
                   (Evar _h (tarray tuchar 64)) :: nil))
                (Ssequence
                  (Scall None
                    (Evar _scalarbase (Tfunction
                                        (Tcons (tptr (tarray tlong 16))
                                          (Tcons (tptr tuchar) Tnil)) tvoid
                                        cc_default))
                    ((Evar _q (tarray (tarray tlong 16) 4)) ::
                     (Ebinop Oadd (Etempvar _sm (tptr tuchar))
                       (Econst_int (Int.repr 32) tint) (tptr tuchar)) :: nil))
                  (Ssequence
                    (Scall None
                      (Evar _add (Tfunction
                                   (Tcons (tptr (tarray tlong 16))
                                     (Tcons (tptr (tarray tlong 16)) Tnil))
                                   tvoid cc_default))
                      ((Evar _p (tarray (tarray tlong 16) 4)) ::
                       (Evar _q (tarray (tarray tlong 16) 4)) :: nil))
                    (Ssequence
                      (Scall None
                        (Evar _pack (Tfunction
                                      (Tcons (tptr tuchar)
                                        (Tcons (tptr (tarray tlong 16)) Tnil))
                                      tvoid cc_default))
                        ((Evar _t (tarray tuchar 32)) ::
                         (Evar _p (tarray (tarray tlong 16) 4)) :: nil))
                      (Ssequence
                        (Sset _n
                          (Ebinop Osub (Etempvar _n tulong)
                            (Econst_int (Int.repr 64) tint) tulong))
                        (Ssequence
                          (Ssequence
                            (Scall (Some _t'2)
                              (Evar _crypto_verify_32_tweet (Tfunction
                                                              (Tcons
                                                                (tptr tuchar)
                                                                (Tcons
                                                                  (tptr tuchar)
                                                                  Tnil)) tint
                                                              cc_default))
                              ((Etempvar _sm (tptr tuchar)) ::
                               (Evar _t (tarray tuchar 32)) :: nil))
                            (Sifthenelse (Etempvar _t'2 tint)
                              (Ssequence
                                (Ssequence
                                  (Sset _i (Econst_int (Int.repr 0) tint))
                                  (Sloop
                                    (Ssequence
                                      (Sifthenelse (Ebinop Olt
                                                     (Etempvar _i tint)
                                                     (Etempvar _n tulong)
                                                     tint)
                                        Sskip
                                        Sbreak)
                                      (Sassign
                                        (Ederef
                                          (Ebinop Oadd
                                            (Etempvar _m (tptr tuchar))
                                            (Etempvar _i tint) (tptr tuchar))
                                          tuchar)
                                        (Econst_int (Int.repr 0) tint)))
                                    (Sset _i
                                      (Ebinop Oadd (Etempvar _i tint)
                                        (Econst_int (Int.repr 1) tint) tint))))
                                (Sreturn (Some (Eunop Oneg
                                                 (Econst_int (Int.repr 1) tint)
                                                 tint))))
                              Sskip))
                          (Ssequence
                            (Ssequence
                              (Sset _i (Econst_int (Int.repr 0) tint))
                              (Sloop
                                (Ssequence
                                  (Sifthenelse (Ebinop Olt (Etempvar _i tint)
                                                 (Etempvar _n tulong) tint)
                                    Sskip
                                    Sbreak)
                                  (Ssequence
                                    (Sset _t'3
                                      (Ederef
                                        (Ebinop Oadd
                                          (Etempvar _sm (tptr tuchar))
                                          (Ebinop Oadd (Etempvar _i tint)
                                            (Econst_int (Int.repr 64) tint)
                                            tint) (tptr tuchar)) tuchar))
                                    (Sassign
                                      (Ederef
                                        (Ebinop Oadd
                                          (Etempvar _m (tptr tuchar))
                                          (Etempvar _i tint) (tptr tuchar))
                                        tuchar) (Etempvar _t'3 tuchar))))
                                (Sset _i
                                  (Ebinop Oadd (Etempvar _i tint)
                                    (Econst_int (Int.repr 1) tint) tint))))
                            (Ssequence
                              (Sassign
                                (Ederef (Etempvar _mlen (tptr tulong))
                                  tulong) (Etempvar _n tulong))
                              (Sreturn (Some (Econst_int (Int.repr 0) tint))))))))))))))))))
|}.

Definition composites : list composite_definition :=
nil.

Definition global_definitions : list (ident * globdef fundef type) :=
((___builtin_bswap,
   Gfun(External (EF_builtin "__builtin_bswap"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons tuint Tnil) tuint cc_default)) ::
 (___builtin_bswap32,
   Gfun(External (EF_builtin "__builtin_bswap32"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons tuint Tnil) tuint cc_default)) ::
 (___builtin_bswap16,
   Gfun(External (EF_builtin "__builtin_bswap16"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons tushort Tnil) tushort cc_default)) ::
 (___builtin_fabs,
   Gfun(External (EF_builtin "__builtin_fabs"
                   (mksignature (AST.Tfloat :: nil) (Some AST.Tfloat)
                     cc_default)) (Tcons tdouble Tnil) tdouble cc_default)) ::
 (___builtin_fsqrt,
   Gfun(External (EF_builtin "__builtin_fsqrt"
                   (mksignature (AST.Tfloat :: nil) (Some AST.Tfloat)
                     cc_default)) (Tcons tdouble Tnil) tdouble cc_default)) ::
 (___builtin_memcpy_aligned,
   Gfun(External (EF_builtin "__builtin_memcpy_aligned"
                   (mksignature
                     (AST.Tint :: AST.Tint :: AST.Tint :: AST.Tint :: nil)
                     None cc_default))
     (Tcons (tptr tvoid)
       (Tcons (tptr tvoid) (Tcons tuint (Tcons tuint Tnil)))) tvoid
     cc_default)) ::
 (___builtin_annot,
   Gfun(External (EF_builtin "__builtin_annot"
                   (mksignature (AST.Tint :: nil) None
                     {|cc_vararg:=true; cc_unproto:=false; cc_structret:=false|}))
     (Tcons (tptr tschar) Tnil) tvoid
     {|cc_vararg:=true; cc_unproto:=false; cc_structret:=false|})) ::
 (___builtin_annot_intval,
   Gfun(External (EF_builtin "__builtin_annot_intval"
                   (mksignature (AST.Tint :: AST.Tint :: nil) (Some AST.Tint)
                     cc_default)) (Tcons (tptr tschar) (Tcons tint Tnil))
     tint cc_default)) ::
 (___builtin_membar,
   Gfun(External (EF_builtin "__builtin_membar"
                   (mksignature nil None cc_default)) Tnil tvoid cc_default)) ::
 (___builtin_va_start,
   Gfun(External (EF_builtin "__builtin_va_start"
                   (mksignature (AST.Tint :: nil) None cc_default))
     (Tcons (tptr tvoid) Tnil) tvoid cc_default)) ::
 (___builtin_va_arg,
   Gfun(External (EF_builtin "__builtin_va_arg"
                   (mksignature (AST.Tint :: AST.Tint :: nil) None
                     cc_default)) (Tcons (tptr tvoid) (Tcons tuint Tnil))
     tvoid cc_default)) ::
 (___builtin_va_copy,
   Gfun(External (EF_builtin "__builtin_va_copy"
                   (mksignature (AST.Tint :: AST.Tint :: nil) None
                     cc_default))
     (Tcons (tptr tvoid) (Tcons (tptr tvoid) Tnil)) tvoid cc_default)) ::
 (___builtin_va_end,
   Gfun(External (EF_builtin "__builtin_va_end"
                   (mksignature (AST.Tint :: nil) None cc_default))
     (Tcons (tptr tvoid) Tnil) tvoid cc_default)) ::
 (___compcert_va_int32,
   Gfun(External (EF_external "__compcert_va_int32"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons (tptr tvoid) Tnil) tuint cc_default)) ::
 (___compcert_va_int64,
   Gfun(External (EF_external "__compcert_va_int64"
                   (mksignature (AST.Tint :: nil) (Some AST.Tlong)
                     cc_default)) (Tcons (tptr tvoid) Tnil) tulong
     cc_default)) ::
 (___compcert_va_float64,
   Gfun(External (EF_external "__compcert_va_float64"
                   (mksignature (AST.Tint :: nil) (Some AST.Tfloat)
                     cc_default)) (Tcons (tptr tvoid) Tnil) tdouble
     cc_default)) ::
 (___compcert_va_composite,
   Gfun(External (EF_external "__compcert_va_composite"
                   (mksignature (AST.Tint :: AST.Tint :: nil) (Some AST.Tint)
                     cc_default)) (Tcons (tptr tvoid) (Tcons tuint Tnil))
     (tptr tvoid) cc_default)) ::
 (___compcert_i64_dtos,
   Gfun(External (EF_runtime "__compcert_i64_dtos"
                   (mksignature (AST.Tfloat :: nil) (Some AST.Tlong)
                     cc_default)) (Tcons tdouble Tnil) tlong cc_default)) ::
 (___compcert_i64_dtou,
   Gfun(External (EF_runtime "__compcert_i64_dtou"
                   (mksignature (AST.Tfloat :: nil) (Some AST.Tlong)
                     cc_default)) (Tcons tdouble Tnil) tulong cc_default)) ::
 (___compcert_i64_stod,
   Gfun(External (EF_runtime "__compcert_i64_stod"
                   (mksignature (AST.Tlong :: nil) (Some AST.Tfloat)
                     cc_default)) (Tcons tlong Tnil) tdouble cc_default)) ::
 (___compcert_i64_utod,
   Gfun(External (EF_runtime "__compcert_i64_utod"
                   (mksignature (AST.Tlong :: nil) (Some AST.Tfloat)
                     cc_default)) (Tcons tulong Tnil) tdouble cc_default)) ::
 (___compcert_i64_stof,
   Gfun(External (EF_runtime "__compcert_i64_stof"
                   (mksignature (AST.Tlong :: nil) (Some AST.Tsingle)
                     cc_default)) (Tcons tlong Tnil) tfloat cc_default)) ::
 (___compcert_i64_utof,
   Gfun(External (EF_runtime "__compcert_i64_utof"
                   (mksignature (AST.Tlong :: nil) (Some AST.Tsingle)
                     cc_default)) (Tcons tulong Tnil) tfloat cc_default)) ::
 (___compcert_i64_sdiv,
   Gfun(External (EF_runtime "__compcert_i64_sdiv"
                   (mksignature (AST.Tlong :: AST.Tlong :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tlong (Tcons tlong Tnil)) tlong cc_default)) ::
 (___compcert_i64_udiv,
   Gfun(External (EF_runtime "__compcert_i64_udiv"
                   (mksignature (AST.Tlong :: AST.Tlong :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tulong (Tcons tulong Tnil)) tulong cc_default)) ::
 (___compcert_i64_smod,
   Gfun(External (EF_runtime "__compcert_i64_smod"
                   (mksignature (AST.Tlong :: AST.Tlong :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tlong (Tcons tlong Tnil)) tlong cc_default)) ::
 (___compcert_i64_umod,
   Gfun(External (EF_runtime "__compcert_i64_umod"
                   (mksignature (AST.Tlong :: AST.Tlong :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tulong (Tcons tulong Tnil)) tulong cc_default)) ::
 (___compcert_i64_shl,
   Gfun(External (EF_runtime "__compcert_i64_shl"
                   (mksignature (AST.Tlong :: AST.Tint :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tlong (Tcons tint Tnil)) tlong cc_default)) ::
 (___compcert_i64_shr,
   Gfun(External (EF_runtime "__compcert_i64_shr"
                   (mksignature (AST.Tlong :: AST.Tint :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tulong (Tcons tint Tnil)) tulong cc_default)) ::
 (___compcert_i64_sar,
   Gfun(External (EF_runtime "__compcert_i64_sar"
                   (mksignature (AST.Tlong :: AST.Tint :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tlong (Tcons tint Tnil)) tlong cc_default)) ::
 (___compcert_i64_smulh,
   Gfun(External (EF_runtime "__compcert_i64_smulh"
                   (mksignature (AST.Tlong :: AST.Tlong :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tlong (Tcons tlong Tnil)) tlong cc_default)) ::
 (___compcert_i64_umulh,
   Gfun(External (EF_runtime "__compcert_i64_umulh"
                   (mksignature (AST.Tlong :: AST.Tlong :: nil)
                     (Some AST.Tlong) cc_default))
     (Tcons tulong (Tcons tulong Tnil)) tulong cc_default)) ::
 (___builtin_bswap64,
   Gfun(External (EF_builtin "__builtin_bswap64"
                   (mksignature (AST.Tlong :: nil) (Some AST.Tlong)
                     cc_default)) (Tcons tulong Tnil) tulong cc_default)) ::
 (___builtin_clz,
   Gfun(External (EF_builtin "__builtin_clz"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons tuint Tnil) tint cc_default)) ::
 (___builtin_clzl,
   Gfun(External (EF_builtin "__builtin_clzl"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons tuint Tnil) tint cc_default)) ::
 (___builtin_clzll,
   Gfun(External (EF_builtin "__builtin_clzll"
                   (mksignature (AST.Tlong :: nil) (Some AST.Tint)
                     cc_default)) (Tcons tulong Tnil) tint cc_default)) ::
 (___builtin_ctz,
   Gfun(External (EF_builtin "__builtin_ctz"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons tuint Tnil) tint cc_default)) ::
 (___builtin_ctzl,
   Gfun(External (EF_builtin "__builtin_ctzl"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons tuint Tnil) tint cc_default)) ::
 (___builtin_ctzll,
   Gfun(External (EF_builtin "__builtin_ctzll"
                   (mksignature (AST.Tlong :: nil) (Some AST.Tint)
                     cc_default)) (Tcons tulong Tnil) tint cc_default)) ::
 (___builtin_fmax,
   Gfun(External (EF_builtin "__builtin_fmax"
                   (mksignature (AST.Tfloat :: AST.Tfloat :: nil)
                     (Some AST.Tfloat) cc_default))
     (Tcons tdouble (Tcons tdouble Tnil)) tdouble cc_default)) ::
 (___builtin_fmin,
   Gfun(External (EF_builtin "__builtin_fmin"
                   (mksignature (AST.Tfloat :: AST.Tfloat :: nil)
                     (Some AST.Tfloat) cc_default))
     (Tcons tdouble (Tcons tdouble Tnil)) tdouble cc_default)) ::
 (___builtin_fmadd,
   Gfun(External (EF_builtin "__builtin_fmadd"
                   (mksignature
                     (AST.Tfloat :: AST.Tfloat :: AST.Tfloat :: nil)
                     (Some AST.Tfloat) cc_default))
     (Tcons tdouble (Tcons tdouble (Tcons tdouble Tnil))) tdouble
     cc_default)) ::
 (___builtin_fmsub,
   Gfun(External (EF_builtin "__builtin_fmsub"
                   (mksignature
                     (AST.Tfloat :: AST.Tfloat :: AST.Tfloat :: nil)
                     (Some AST.Tfloat) cc_default))
     (Tcons tdouble (Tcons tdouble (Tcons tdouble Tnil))) tdouble
     cc_default)) ::
 (___builtin_fnmadd,
   Gfun(External (EF_builtin "__builtin_fnmadd"
                   (mksignature
                     (AST.Tfloat :: AST.Tfloat :: AST.Tfloat :: nil)
                     (Some AST.Tfloat) cc_default))
     (Tcons tdouble (Tcons tdouble (Tcons tdouble Tnil))) tdouble
     cc_default)) ::
 (___builtin_fnmsub,
   Gfun(External (EF_builtin "__builtin_fnmsub"
                   (mksignature
                     (AST.Tfloat :: AST.Tfloat :: AST.Tfloat :: nil)
                     (Some AST.Tfloat) cc_default))
     (Tcons tdouble (Tcons tdouble (Tcons tdouble Tnil))) tdouble
     cc_default)) ::
 (___builtin_read16_reversed,
   Gfun(External (EF_builtin "__builtin_read16_reversed"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons (tptr tushort) Tnil) tushort cc_default)) ::
 (___builtin_read32_reversed,
   Gfun(External (EF_builtin "__builtin_read32_reversed"
                   (mksignature (AST.Tint :: nil) (Some AST.Tint) cc_default))
     (Tcons (tptr tuint) Tnil) tuint cc_default)) ::
 (___builtin_write16_reversed,
   Gfun(External (EF_builtin "__builtin_write16_reversed"
                   (mksignature (AST.Tint :: AST.Tint :: nil) None
                     cc_default)) (Tcons (tptr tushort) (Tcons tushort Tnil))
     tvoid cc_default)) ::
 (___builtin_write32_reversed,
   Gfun(External (EF_builtin "__builtin_write32_reversed"
                   (mksignature (AST.Tint :: AST.Tint :: nil) None
                     cc_default)) (Tcons (tptr tuint) (Tcons tuint Tnil))
     tvoid cc_default)) ::
 (___builtin_nop,
   Gfun(External (EF_builtin "__builtin_nop"
                   (mksignature nil None cc_default)) Tnil tvoid cc_default)) ::
 (___builtin_debug,
   Gfun(External (EF_external "__builtin_debug"
                   (mksignature (AST.Tint :: nil) None
                     {|cc_vararg:=true; cc_unproto:=false; cc_structret:=false|}))
     (Tcons tint Tnil) tvoid
     {|cc_vararg:=true; cc_unproto:=false; cc_structret:=false|})) ::
 (_randombytes,
   Gfun(External (EF_external "randombytes"
                   (mksignature (AST.Tint :: AST.Tlong :: nil) None
                     cc_default)) (Tcons (tptr tuchar) (Tcons tulong Tnil))
     tvoid cc_default)) :: (__0, Gvar v__0) :: (__9, Gvar v__9) ::
 (_gf0, Gvar v_gf0) :: (_gf1, Gvar v_gf1) :: (__121665, Gvar v__121665) ::
 (_D, Gvar v_D) :: (_D2, Gvar v_D2) :: (_X, Gvar v_X) :: (_Y, Gvar v_Y) ::
 (_I, Gvar v_I) :: (_L32, Gfun(Internal f_L32)) ::
 (_ld32, Gfun(Internal f_ld32)) :: (_dl64, Gfun(Internal f_dl64)) ::
 (_st32, Gfun(Internal f_st32)) :: (_ts64, Gfun(Internal f_ts64)) ::
 (_vn, Gfun(Internal f_vn)) ::
 (_crypto_verify_16_tweet, Gfun(Internal f_crypto_verify_16_tweet)) ::
 (_crypto_verify_32_tweet, Gfun(Internal f_crypto_verify_32_tweet)) ::
 (_core, Gfun(Internal f_core)) ::
 (_crypto_core_salsa20_tweet, Gfun(Internal f_crypto_core_salsa20_tweet)) ::
 (_crypto_core_hsalsa20_tweet, Gfun(Internal f_crypto_core_hsalsa20_tweet)) ::
 (_sigma, Gvar v_sigma) ::
 (_crypto_stream_salsa20_tweet_xor, Gfun(Internal f_crypto_stream_salsa20_tweet_xor)) ::
 (_crypto_stream_salsa20_tweet, Gfun(Internal f_crypto_stream_salsa20_tweet)) ::
 (_crypto_stream_xsalsa20_tweet, Gfun(Internal f_crypto_stream_xsalsa20_tweet)) ::
 (_crypto_stream_xsalsa20_tweet_xor, Gfun(Internal f_crypto_stream_xsalsa20_tweet_xor)) ::
 (_add1305, Gfun(Internal f_add1305)) :: (_minusp, Gvar v_minusp) ::
 (_crypto_onetimeauth_poly1305_tweet, Gfun(Internal f_crypto_onetimeauth_poly1305_tweet)) ::
 (_crypto_onetimeauth_poly1305_tweet_verify, Gfun(Internal f_crypto_onetimeauth_poly1305_tweet_verify)) ::
 (_crypto_secretbox_xsalsa20poly1305_tweet, Gfun(Internal f_crypto_secretbox_xsalsa20poly1305_tweet)) ::
 (_crypto_secretbox_xsalsa20poly1305_tweet_open, Gfun(Internal f_crypto_secretbox_xsalsa20poly1305_tweet_open)) ::
 (_set25519, Gfun(Internal f_set25519)) ::
 (_car25519, Gfun(Internal f_car25519)) ::
 (_sel25519, Gfun(Internal f_sel25519)) ::
 (_pack25519, Gfun(Internal f_pack25519)) ::
 (_neq25519, Gfun(Internal f_neq25519)) ::
 (_par25519, Gfun(Internal f_par25519)) ::
 (_unpack25519, Gfun(Internal f_unpack25519)) :: (_A, Gfun(Internal f_A)) ::
 (_Z, Gfun(Internal f_Z)) :: (_M, Gfun(Internal f_M)) ::
 (_S, Gfun(Internal f_S)) :: (_inv25519, Gfun(Internal f_inv25519)) ::
 (_pow2523, Gfun(Internal f_pow2523)) ::
 (_crypto_scalarmult_curve25519_tweet, Gfun(Internal f_crypto_scalarmult_curve25519_tweet)) ::
 (_crypto_scalarmult_curve25519_tweet_base, Gfun(Internal f_crypto_scalarmult_curve25519_tweet_base)) ::
 (_crypto_box_curve25519xsalsa20poly1305_tweet_keypair, Gfun(Internal f_crypto_box_curve25519xsalsa20poly1305_tweet_keypair)) ::
 (_crypto_box_curve25519xsalsa20poly1305_tweet_beforenm, Gfun(Internal f_crypto_box_curve25519xsalsa20poly1305_tweet_beforenm)) ::
 (_crypto_box_curve25519xsalsa20poly1305_tweet_afternm, Gfun(Internal f_crypto_box_curve25519xsalsa20poly1305_tweet_afternm)) ::
 (_crypto_box_curve25519xsalsa20poly1305_tweet_open_afternm, Gfun(Internal f_crypto_box_curve25519xsalsa20poly1305_tweet_open_afternm)) ::
 (_crypto_box_curve25519xsalsa20poly1305_tweet, Gfun(Internal f_crypto_box_curve25519xsalsa20poly1305_tweet)) ::
 (_crypto_box_curve25519xsalsa20poly1305_tweet_open, Gfun(Internal f_crypto_box_curve25519xsalsa20poly1305_tweet_open)) ::
 (_R, Gfun(Internal f_R)) :: (_Ch, Gfun(Internal f_Ch)) ::
 (_Maj, Gfun(Internal f_Maj)) :: (_Sigma0, Gfun(Internal f_Sigma0)) ::
 (_Sigma1, Gfun(Internal f_Sigma1)) :: (_sigma0, Gfun(Internal f_sigma0)) ::
 (_sigma1, Gfun(Internal f_sigma1)) :: (_K, Gvar v_K) ::
 (_crypto_hashblocks_sha512_tweet, Gfun(Internal f_crypto_hashblocks_sha512_tweet)) ::
 (_iv, Gvar v_iv) ::
 (_crypto_hash_sha512_tweet, Gfun(Internal f_crypto_hash_sha512_tweet)) ::
 (_add, Gfun(Internal f_add)) :: (_cswap, Gfun(Internal f_cswap)) ::
 (_pack, Gfun(Internal f_pack)) ::
 (_scalarmult, Gfun(Internal f_scalarmult)) ::
 (_scalarbase, Gfun(Internal f_scalarbase)) ::
 (_crypto_sign_ed25519_tweet_keypair, Gfun(Internal f_crypto_sign_ed25519_tweet_keypair)) ::
 (_L, Gvar v_L) :: (_modL, Gfun(Internal f_modL)) ::
 (_reduce, Gfun(Internal f_reduce)) ::
 (_crypto_sign_ed25519_tweet, Gfun(Internal f_crypto_sign_ed25519_tweet)) ::
 (_unpackneg, Gfun(Internal f_unpackneg)) ::
 (_crypto_sign_ed25519_tweet_open, Gfun(Internal f_crypto_sign_ed25519_tweet_open)) ::
 nil).

Definition public_idents : list ident :=
(_crypto_sign_ed25519_tweet_open :: _crypto_sign_ed25519_tweet ::
 _crypto_sign_ed25519_tweet_keypair :: _crypto_hash_sha512_tweet ::
 _crypto_hashblocks_sha512_tweet ::
 _crypto_box_curve25519xsalsa20poly1305_tweet_open ::
 _crypto_box_curve25519xsalsa20poly1305_tweet ::
 _crypto_box_curve25519xsalsa20poly1305_tweet_open_afternm ::
 _crypto_box_curve25519xsalsa20poly1305_tweet_afternm ::
 _crypto_box_curve25519xsalsa20poly1305_tweet_beforenm ::
 _crypto_box_curve25519xsalsa20poly1305_tweet_keypair ::
 _crypto_scalarmult_curve25519_tweet_base ::
 _crypto_scalarmult_curve25519_tweet ::
 _crypto_secretbox_xsalsa20poly1305_tweet_open ::
 _crypto_secretbox_xsalsa20poly1305_tweet ::
 _crypto_onetimeauth_poly1305_tweet_verify ::
 _crypto_onetimeauth_poly1305_tweet :: _crypto_stream_xsalsa20_tweet_xor ::
 _crypto_stream_xsalsa20_tweet :: _crypto_stream_salsa20_tweet ::
 _crypto_stream_salsa20_tweet_xor :: _crypto_core_hsalsa20_tweet ::
 _crypto_core_salsa20_tweet :: _crypto_verify_32_tweet ::
 _crypto_verify_16_tweet :: _randombytes :: ___builtin_debug ::
 ___builtin_nop :: ___builtin_write32_reversed ::
 ___builtin_write16_reversed :: ___builtin_read32_reversed ::
 ___builtin_read16_reversed :: ___builtin_fnmsub :: ___builtin_fnmadd ::
 ___builtin_fmsub :: ___builtin_fmadd :: ___builtin_fmin ::
 ___builtin_fmax :: ___builtin_ctzll :: ___builtin_ctzl :: ___builtin_ctz ::
 ___builtin_clzll :: ___builtin_clzl :: ___builtin_clz ::
 ___builtin_bswap64 :: ___compcert_i64_umulh :: ___compcert_i64_smulh ::
 ___compcert_i64_sar :: ___compcert_i64_shr :: ___compcert_i64_shl ::
 ___compcert_i64_umod :: ___compcert_i64_smod :: ___compcert_i64_udiv ::
 ___compcert_i64_sdiv :: ___compcert_i64_utof :: ___compcert_i64_stof ::
 ___compcert_i64_utod :: ___compcert_i64_stod :: ___compcert_i64_dtou ::
 ___compcert_i64_dtos :: ___compcert_va_composite ::
 ___compcert_va_float64 :: ___compcert_va_int64 :: ___compcert_va_int32 ::
 ___builtin_va_end :: ___builtin_va_copy :: ___builtin_va_arg ::
 ___builtin_va_start :: ___builtin_membar :: ___builtin_annot_intval ::
 ___builtin_annot :: ___builtin_memcpy_aligned :: ___builtin_fsqrt ::
 ___builtin_fabs :: ___builtin_bswap16 :: ___builtin_bswap32 ::
 ___builtin_bswap :: nil).

Definition prog : Clight.program := 
  mkprogram composites global_definitions public_idents _main Logic.I. *)
Require Import tweetnacl20140427.Snuffle.
(* tweetnacl20140427.Snuffle:
Require Import compcert.lib.Coqlib.
Require Import Coq.Strings.String.
Require Import VST.msl.Extensionality.
Require Import List. Import ListNotations.

Require Import compcert.lib.Integers.
Require Import sha.functional_prog.
Require Import tweetnacl20140427.Salsa20.
Require Import tweetnacl20140427.tweetNaclBase. 

Definition Step1 (x:list int): option (list int):=
match x with [x0; x1; x2; x3; x4; x5; x6; x7; x8; x9; x10; x11; x12; x13; x14; x15]
=>
 let y3 := Int.xor x3 (Int.rol (Int.add x15 x11) (Int.repr 7)) in
 let y4 := Int.xor x4 (Int.rol (Int.add x0 x12) (Int.repr 7)) in
 let y9 := Int.xor x9 (Int.rol (Int.add x5 x1) (Int.repr 7)) in
 let y14 := Int.xor x14 (Int.rol (Int.add x10 x6) (Int.repr 7)) in
 Some [x0; x1; x2; y3;
       y4; x5; x6; x7;
       x8; y9; x10; x11;
       x12; x13; y14; x15]
| _ => None
 end.
Definition test1_in := map x2i
  ([ "61707865"; "04030201"; "08070605"; "0c0b0a09";
     "100f0e0d"; "3320646e"; "01040103"; "06020905";
     "00000007"; "00000000"; "79622d32"; "14131211";
     "18171615"; "1c1b1a19"; "201f1e1d"; "6b206574"])%string.
Definition test1_out1 := map x2i ([
"61707865"; "04030201"; "08070605"; "95b0c8b6";
"d3c83331"; "3320646e"; "01040103"; "06020905";
"00000007"; "91b3379b"; "79622d32"; "14131211";
"18171615"; "1c1b1a19"; "130804a0"; "6b206574"])%string.

Definition Step2 (x:list int): option (list int):=
match x with [x0; x1; x2; x3; x4; x5; x6; x7; x8; x9; x10; x11; x12; x13; x14; x15]
=>
 let y2 := Int.xor x2 (Int.rol (Int.add x10 x14) (Int.repr 9)) in
 let y7 := Int.xor x7 (Int.rol (Int.add x15 x3) (Int.repr 9)) in
 let y8 := Int.xor x8 (Int.rol (Int.add x0 x4) (Int.repr 9)) in
 let y13 := Int.xor x13 (Int.rol (Int.add x5 x9) (Int.repr 9)) in
 Some [x0; x1; y2; x3;
       x4; x5; x6; y7;
       y8; x9; x10; x11;
       x12; y13; x14; x15]
| _ => None
 end.

Definition test1_out2 := map x2i ([
"61707865"; "04030201"; "dc64a31d"; "95b0c8b6";
"d3c83331"; "3320646e"; "01040103"; "a45e5d04";
"71572c6d"; "91b3379b"; "79622d32"; "14131211";
"18171615"; "bb230990"; "130804a0"; "6b206574"])%string.

Definition Step3 (x:list int): option (list int):=
match x with [x0; x1; x2; x3; x4; x5; x6; x7; x8; x9; x10; x11; x12; x13; x14; x15]
=>
 let y1 := Int.xor x1 (Int.rol (Int.add x9 x13) (Int.repr 13)) in
 let y6 := Int.xor x6 (Int.rol (Int.add x14 x2) (Int.repr 13)) in
 let y11 := Int.xor x11 (Int.rol (Int.add x3 x7) (Int.repr 13)) in
 let y12 := Int.xor x12 (Int.rol (Int.add x4 x8) (Int.repr 13)) in
 Some [x0; y1; x2; x3;
       x4; x5; y6; x7;
       x8; x9; x10; y11;
       y12; x13; x14; x15]
| _ => None
 end.

Definition test1_out3 := map x2i ([
"61707865"; "cc266b9b"; "dc64a31d"; "95b0c8b6";
"d3c83331"; "3320646e"; "95f3bcee"; "a45e5d04";
"71572c6d"; "91b3379b"; "79622d32"; "f0a45550";
"f3e4deb6"; "bb230990"; "130804a0"; "6b206574"])%string.

Definition Step4 (x:list int): option (list int):=
match x with [x0; x1; x2; x3;  x4; x5; x6; x7; x8; x9; x10; x11; x12; x13; x14; x15]
=>
 let y0 := Int.xor x0 (Int.rol (Int.add x8 x12) (Int.repr 18)) in
 let y5 := Int.xor x5 (Int.rol (Int.add x13 x1) (Int.repr 18)) in
 let y10 := Int.xor x10 (Int.rol (Int.add x2 x6) (Int.repr 18)) in
 let y15 := Int.xor x15 (Int.rol (Int.add x7 x11) (Int.repr 18)) in
 Some [y0; x1; x2; x3;
       x4; y5; x6; x7;
       x8; x9; y10; x11;
       x12; x13; x14; y15]
| _ => None
 end.

Definition test1_out4 := map x2i ([
"4dfdec95"; "cc266b9b"; "dc64a31d"; "95b0c8b6";
"d3c83331"; "e78e794b"; "95f3bcee"; "a45e5d04";
"71572c6d"; "91b3379b"; "f94fe453"; "f0a45550";
"f3e4deb6"; "bb230990"; "130804a0"; "a272317e"])%string.

Definition transp (x:list int): option (list int):=
match x with [x0; x1; x2; x3;  x4; x5; x6; x7; x8; x9; x10; x11; x12; x13; x14; x15]
=> Some [x0; x4; x8; x12;
         x1; x5; x9; x13;
         x2; x6; x10; x14;
         x3; x7; x11; x15]
| _ => None
 end.
Definition test1_out := map x2i ([
"4dfdec95"; "d3c83331"; "71572c6d"; "f3e4deb6";
"cc266b9b"; "e78e794b"; "91b3379b"; "bb230990";
"dc64a31d"; "95f3bcee"; "f94fe453"; "130804a0";
"95b0c8b6"; "a45e5d04"; "f0a45550"; "a272317e"])%string.

Definition snuffleStep x :=
  bind (Step1 x) (fun y => bind (Step2 y) (fun z => bind (Step3 z) Step4)).

Definition snuffleRound x := bind (snuffleStep x) transp.

Definition test1_round2 := map x2i ([
"ba2409b1"; "1b7cce6a"; "29115dcf"; "5037e027";
"37b75378"; "348d94c8"; "3ea582b3"; "c3a9a148";
"825bfcb9"; "226ae9eb"; "63dd7748"; "7129a215";
"4effd1ec"; "5f25dc72"; "a6c3d164"; "152a26d8"])%string.

Fixpoint Snuffle n x :=
  match n with O => Some x | S m => bind (Snuffle m x) snuffleRound end.

Goal Snuffle 1 = snuffleRound. extensionality. reflexivity. Qed.

Definition test1_round20 := map x2i ([
"58318d3e"; "0292df4f"; "a28d8215"; "a1aca723";
"697a34c7"; "f2f00ba8"; "63e9b0a1"; "27250e3a";
"b1c7f1f3"; "62066edc"; "66d3ccf1"; "b0365cf3";
"091ad09e"; "64f0c40f"; "d60d95ea"; "00be78c9"])%string.

Lemma snuffleRound_length r l:
  snuffleRound r = Some l -> length l = 16%nat /\ length r = 16%nat.

Lemma snuffleRound_Zlength r l (R: snuffleRound r = Some l):
      Zlength l = 16 /\ Zlength r = 16.

Lemma Snuffle_length r: forall i l, Snuffle i r = Some l -> length r = 16%nat -> length l = 16%nat.

Lemma Snuffle_Zlength r i l (SN:Snuffle i r = Some l)
      (R:Zlength r = 16): Zlength l= 16.
Opaque Snuffle. *)
Require Import tweetnacl20140427.spec_salsa.
(* tweetnacl20140427.spec_salsa:
Require Import Recdef.
Require Import VST.floyd.proofauto.
Local Open Scope logic.
Require Import List. Import ListNotations.
Require Import sha.general_lemmas.
Require Import ZArith.
Require Import tweetnacl20140427.Salsa20.
Require Import tweetnacl20140427.tweetNaclBase.
Require Import tweetnacl20140427.verif_salsa_base.

Require Import tweetnacl20140427.tweetnaclVerifiableC.
Require Import tweetnacl20140427.Snuffle.
Require Import VST.floyd.library.

Definition CoreInSEP (data : SixteenByte * SixteenByte * (SixteenByte * SixteenByte))
                     (v: val * val * val) : mpred :=
  match data with (Nonce, C, K) =>
  match v with (n, c, k) =>
   (SByte Nonce n) * (SByte C c) * (ThirtyTwoByte K k)
  end end.

Definition prepare_data
           (data : SixteenByte * SixteenByte * (SixteenByte * SixteenByte)) :=
match data with ((Nonce, C), K) =>
  match Nonce with (N1, N2, N3, N4) =>
  match C with (C1, C2, C3, C4) =>
  match K with ((K1, K2, K3, K4), (L1, L2, L3, L4)) =>
      map littleendian [C1; K1; K2; K3; K4; C2; N1; N2; N3; N4; C3; L1; L2; L3; L4; C4]
  end end end
end.

Lemma prepare_data_length x: length (prepare_data x) = 16%nat.

Definition sumlist := combinelist _ Int.add.

Definition sumlist_Some:= combinelist _ Int.add.

Definition sumlist_SomeInv:= combinelist_SomeInv _ Int.add.

Definition sumlist_length:= combinelist_length _ Int.add.

Definition sumlist_symm:= combinelist_symm _ Int.add Int.add_commut.

Definition sumlist_char_nth:= combinelist_char_nth _ Int.add.

Definition sumlist_char_Znth:= combinelist_char_Znth _ Int.add.

Definition Snuffle20 x := bind (Snuffle 20 x) (fun y => sumlist y x).

Lemma Snuffle20_length s l: Snuffle20 s = Some l -> length s = 16%nat -> length l = 16%nat.

Definition fcore_result h data l :=
  match Snuffle20 (prepare_data data)
  with None => False
     | Some x =>
             if Int.eq (Int.repr h) Int.zero
             then l=QuadChunks2ValList (map littleendian_invert x)
             else match data with ((Nonce, C), K) =>
                    match Nonce with (N1, N2, N3, N4) =>
                    match C with (C1, C2, C3, C4) =>
                    l = QuadByte2ValList (littleendian_invert (Int.sub (Znth 0 x)  (littleendian C1))) ++
                    QuadByte2ValList (littleendian_invert (Int.sub (Znth 5 x)  (littleendian C2))) ++
                    QuadByte2ValList (littleendian_invert (Int.sub (Znth 10 x) (littleendian C3))) ++
                    QuadByte2ValList (littleendian_invert (Int.sub (Znth 15 x) (littleendian C4))) ++
                    QuadByte2ValList (littleendian_invert (Int.sub (Znth 6 x)  (littleendian N1))) ++
                    QuadByte2ValList (littleendian_invert (Int.sub (Znth 7 x)  (littleendian N2))) ++
                    QuadByte2ValList (littleendian_invert (Int.sub (Znth 8 x)  (littleendian N3))) ++
                    QuadByte2ValList (littleendian_invert (Int.sub (Znth 9 x)  (littleendian N4)))
                    end end end
  end.

Definition OutLen h := if Int.eq (Int.repr h) Int.zero then 64 else 32.

Definition fcorePOST_SEP h data d l out :=
  CoreInSEP data d *
  data_at Tsh (tarray tuchar (OutLen h)) l out.

Definition f_core_POST d out h (data: SixteenByte * SixteenByte * (SixteenByte * SixteenByte) ) :=
EX l:_,
   PROP (fcore_result h data l)
   LOCAL ()
   SEP (fcorePOST_SEP h data d l out).

Definition core_spec :=
  DECLARE _core
   WITH c : val, k:val, h:Z,
        nonce:val, out:val, OUT:list val,
        data : SixteenByte * SixteenByte * (SixteenByte * SixteenByte)
   PRE [ _out OF tptr tuchar,
         _in OF tptr tuchar,
         _k OF tptr tuchar,
         _c OF tptr tuchar,
         _h OF tint ]
      PROP ()
      LOCAL (temp _in nonce; temp _out out;
             temp _c c; temp _k k; temp _h (Vint (Int.repr h)))
      SEP (CoreInSEP data (nonce, c, k);
           data_at Tsh (tarray tuchar (OutLen h)) OUT out)
  POST [ tvoid ] (f_core_POST (nonce, c, k) out h data).

Definition ld32_spec :=
  DECLARE _ld32
   WITH x : val, B:QuadByte
   PRE [ _x OF tptr tuchar ]
      PROP ()
      LOCAL (temp _x x)
      SEP (data_at Tsh (tarray tuchar 4) (QuadByte2ValList B) x)
  POST [ tuint ] 
     PROP ()
     LOCAL (temp ret_temp (Vint (littleendian B)))
     SEP (QByte B x).

Definition st32_spec :=
  DECLARE _st32
   WITH x : val, u:int
   PRE [ _x OF tptr tuchar, _u OF tuint ]
      PROP ()
      LOCAL (temp _x x; temp _u (Vint u))
      SEP (data_at_ Tsh (tarray tuchar 4) x)
  POST [ tvoid ] 
     PROP ()
     LOCAL ()
     SEP (QByte (littleendian_invert u) x).

Definition L32_spec :=
  DECLARE _L32
   WITH x : int, c: int
   PRE [ _x OF tuint, _c OF tint ]
      PROP (0 < Int.signed c < 32) 
      LOCAL (temp _x (Vint x); temp _c (Vint c))
      SEP ()
  POST [ tuint ]
     PROP ()
     LOCAL (temp ret_temp (Vint (Int.rol x c)))
     SEP ().

Definition bigendian64 (b c:QuadByte): int64 :=
  match b, c with (b0, b1, b2, b3), (c0, c1, c2, c3) =>
  Int64.repr
   (       Byte.unsigned c3 +
    2^8  * Byte.unsigned c2 +
    2^16 * Byte.unsigned c1 +
    2^24 * Byte.unsigned c0 +
    2^32 * Byte.unsigned b3 +
    2^40 * Byte.unsigned b2 +
    2^48 * Byte.unsigned b1 +
    2^56 * Byte.unsigned b0
    )
  end.

Definition dl64_spec :=
  DECLARE _dl64
   WITH x : val, B:QuadByte, C: QuadByte
   PRE [ _x OF tptr tuchar ]
      PROP ()
      LOCAL (temp _x x)
      SEP (data_at Tsh (tarray tuchar 8) (QuadByte2ValList B++QuadByte2ValList C) x)
  POST [ tulong ] 
     PROP ()
     LOCAL (temp ret_temp (Vlong (bigendian64 B C)))
     SEP (data_at Tsh (tarray tuchar 8) (QuadByte2ValList B++QuadByte2ValList C) x).

Definition bigendian64_invert (w:int64) : QuadByte * QuadByte:=
    let w3 := Int64.unsigned w in
  let b3 := w3 / (2^56) in 
    let w2 := Z.modulo w3 (2^56) in
  let b2 := w2 / (2^48) in 
    let w1 := Z.modulo w2 (2^48) in
  let b1 := w1 / (2^40) in 
    let w0 := Z.modulo w1 (2^40) in
  let b0 := w0 / (2^32) in 
    let u3 := Z.modulo w0 (2^32) in
  let c3 := u3 / (2^24) in 
    let u2 := Z.modulo u3 (2^24) in
  let c2 := u2 / (2^16) in 
    let u1 := Z.modulo u2 (2^16) in
  let c1 := u1 / (2^8) in
    let c0 := Z.modulo u1 (2^8) in
  ((Byte.repr b3, Byte.repr b2, Byte.repr b1, Byte.repr b0), 
   (Byte.repr c3, Byte.repr c2, Byte.repr c1, Byte.repr c0)).

Lemma bigendian64_inv: forall b c: QuadByte, bigendian64_invert (bigendian64 b c) = (b,c).

Definition ts64_spec :=
  DECLARE _ts64
   WITH x : val, u:int64
   PRE [ _x OF tptr tuchar, _u OF tulong ]
      PROP ()
      LOCAL (temp _x x; temp _u (Vlong u))
      SEP (data_at_ Tsh (tarray tuchar 8) x)
  POST [ tvoid ] 
     PROP ()
     LOCAL ()
     SEP (let (B, C) := bigendian64_invert u in
          data_at Tsh (tarray tuchar 8) (QuadByte2ValList B++QuadByte2ValList C) x).

Definition crypto_core_salsa20_spec :=
  DECLARE _crypto_core_salsa20_tweet
   WITH c : val, k:val,
        nonce:val, out:val,
        data : SixteenByte * SixteenByte * (SixteenByte * SixteenByte)
   PRE [ _out OF tptr tuchar,
         _in OF tptr tuchar,
         _k OF tptr tuchar,
         _c OF tptr tuchar ]
      PROP ()
      LOCAL (temp _in nonce; temp _out out;
             temp _c c; temp _k k)
      SEP ( CoreInSEP data (nonce, c, k);
            data_at_ Tsh (tarray tuchar 64) out)
  POST [ tint ]
       EX res:_,
       PROP (Snuffle20 (prepare_data data) = Some res)
       LOCAL (temp ret_temp (Vint (Int.repr 0)))
       SEP (CoreInSEP data (nonce, c, k);
            data_at Tsh (tarray tuchar 64) (QuadChunks2ValList (map littleendian_invert res)) out).

Definition hSalsaOut x :=
           QuadByte2ValList (littleendian_invert (Znth 0  x)) ++
           QuadByte2ValList (littleendian_invert (Znth 5  x)) ++
           QuadByte2ValList (littleendian_invert (Znth 10 x)) ++
           QuadByte2ValList (littleendian_invert (Znth 15 x)) ++
           QuadByte2ValList (littleendian_invert (Znth 6  x)) ++
           QuadByte2ValList (littleendian_invert (Znth 7  x)) ++
           QuadByte2ValList (littleendian_invert (Znth 8  x)) ++
           QuadByte2ValList (littleendian_invert (Znth 9  x)).

Definition crypto_core_hsalsa20_spec :=
  DECLARE _crypto_core_hsalsa20_tweet
   WITH c : val, k:val,
        nonce:val, out:val, OUT: list val,
        data : SixteenByte * SixteenByte * (SixteenByte * SixteenByte)
   PRE [ _out OF tptr tuchar,
         _in OF tptr tuchar,
         _k OF tptr tuchar,
         _c OF tptr tuchar ]
      PROP ()
      LOCAL (temp _in nonce; temp _out out;
             temp _c c; temp _k k)
      SEP (CoreInSEP data (nonce, c, k);
           data_at Tsh (tarray tuchar 32) OUT out)
  POST [ tint ]
       EX res:list int,
       PROP (Snuffle 20 (prepare_data data) = Some res)
       LOCAL (temp ret_temp (Vint (Int.repr 0)))
       SEP (CoreInSEP data (nonce, c, k); data_at Tsh (tarray tuchar 32) (hSalsaOut res) out).

Parameter SIGMA: SixteenByte.
Definition Sigma_vector : val -> mpred :=
  data_at Tsh (tarray tuchar 16) (SixteenByte2ValList SIGMA).

Fixpoint ZZ (zbytes: list byte) (n: nat): int * list byte :=
  match n with
   O => (Int.one, zbytes)
  | S k => match ZZ zbytes k with (u,zb) =>
             let v := (Int.unsigned u + (Byte.unsigned (Znth (Z.of_nat k+8) zb)))
             in (Int.shru (Int.repr v) (Int.repr 8),
                 upd_Znth (Z.of_nat k+8) zb (Byte.repr (Z.modulo v 256))) end

  end.

Fixpoint ZCont (r: nat) (zcont: list byte): list byte :=
  match r with
     O => zcont
   | S n => let zb := ZCont n zcont in
            let zz := ZZ zb (8:nat) in snd zz
  end.

Lemma ZCont0 bytes: ZCont O bytes = bytes. reflexivity. Qed.

Definition bytes_at x q i mbytes :=
match x with
  Vint _ => list_repeat (Z.to_nat i) (Byte.zero)
| _ => sublist q (q+i) mbytes
end.

Lemma Zlength_bytes_at x q i mbytes : 0<=q -> 0 <= i ->
  q + i <= Zlength mbytes -> Zlength (bytes_at x q i mbytes) = i.

Definition bxorlist := combinelist _ Byte.xor.
Definition Bl2VL (l: list byte) := map Vint (map Int.repr (map Byte.unsigned l)).

Definition message_at (mCont: list byte) (m:val): mpred :=
  match m with
    Vint i => !!(i=Int.zero) && emp
  | Vptr b z => data_at Tsh (tarray tuchar (Zlength mCont)) (Bl2VL mCont) m
  | _ => FF
  end.

Inductive CONTENT SIGMA K (mInit:val) (mCont zbytes:list byte): nat -> list byte -> list byte -> Prop :=
  CONT_zero: CONTENT SIGMA K mInit mCont  zbytes O zbytes nil
| CONT_succ: forall n zN resN ,
             CONTENT SIGMA K mInit mCont zbytes n zN resN ->
             forall d,
             SixteenByte2ValList d = Bl2VL (ZCont n zbytes) ->
             forall snuff srbytes Xor,
             Snuffle20 (prepare_data (d, SIGMA, K)) = Some snuff ->
             QuadChunks2ValList (map littleendian_invert snuff) =
                map Vint (map Int.repr (map Byte.unsigned srbytes)) ->
             bxorlist (bytes_at mInit (Z.of_nat n * 64) 64 mCont) srbytes = Some Xor ->
             CONTENT SIGMA K mInit mCont zbytes (S n) (snd (ZZ zN (8:nat))) (resN++Xor).

Lemma CONT_Zlength SIGMA K mInit mCont zbytes:
  forall n zB x,
   CONTENT SIGMA K mInit mCont zbytes n zB x ->
   Zlength x = (Z.of_nat n * 64)%Z.

Lemma CONTCONT SIGMA K mInit mCont zbytes:
  forall n zB x,
   CONTENT SIGMA K mInit mCont zbytes n zB x ->
   ZCont n zbytes = zB.

Lemma ZZ_Zlength: forall n zbytes u U, ZZ zbytes n = (u,U) ->
      Zlength zbytes=16 -> Z.of_nat n <= 8 -> Zlength U = 16.

Lemma Zlength_ZCont: forall n zbytes, Zlength zbytes = 16 -> Zlength (ZCont n zbytes) = 16.

Lemma SixteenByte2ValList_exists bytes: Zlength bytes = 16 ->
  exists d, SixteenByte2ValList d = map Vint (map Int.repr (map Byte.unsigned bytes)).

Definition ContSpec bInit SIGMA K mInit mCont zbytes  srbytes :=
    let n:= (Int64.unsigned bInit) / 64 in
    if zeq ((Int64.unsigned bInit) mod 64) 0
    then exists zbytesR, CONTENT SIGMA K mInit mCont zbytes (Z.to_nat n) zbytesR srbytes
    else exists zN resN d snuff bytes lastbytes,
         CONTENT SIGMA K mInit mCont zbytes (Z.to_nat n) zN resN /\
             SixteenByte2ValList d = Bl2VL (ZCont (Z.to_nat n) zbytes) /\
             Snuffle20 (prepare_data (d, SIGMA, K)) = Some snuff /\
             QuadChunks2ValList (map littleendian_invert snuff) =
                map Vint (map Int.repr (map Byte.unsigned bytes)) /\
             bxorlist (bytes_at mInit (n * 64) ((Int64.unsigned bInit) mod 64) mCont)
                                (sublist 0 ((Int64.unsigned bInit) mod 64) bytes) = Some lastbytes /\
              srbytes = (resN++lastbytes).

Definition crypto_stream_xor_postsep b (Nonce:SixteenByte) K mCont cLen nonce c m :=
  (if Int64.eq b Int64.zero
   then data_at_ Tsh (Tarray tuchar cLen noattr) c
   else (EX COUT:_, !!(exists zbytes, match Nonce with (Nnc0, Nnc1, _, _) =>
                SixteenByte2ValList
                  (Nnc0, Nnc1, (Byte.zero, Byte.zero, Byte.zero, Byte.zero),
                           (Byte.zero, Byte.zero, Byte.zero, Byte.zero)) =
                map Vint (map Int.repr (map Byte.unsigned zbytes))
                /\  ContSpec b SIGMA K m mCont zbytes COUT end)
           && data_at Tsh (Tarray tuchar cLen noattr) (Bl2VL COUT) c))
                    * SByte Nonce nonce
                    * message_at mCont m.

Definition crypto_stream_salsa20_xor_spec :=
  DECLARE _crypto_stream_salsa20_tweet_xor
   WITH c : val, k:val, m:val, nonce:val, b:int64,
        Nonce : SixteenByte, K: SixteenByte * SixteenByte,
        mCont: list byte, gv: globals
   PRE [ _c OF tptr tuchar, _m OF tptr tuchar, _b OF tulong,
         _n OF tptr tuchar, _k OF tptr tuchar]
      PROP (Zlength mCont = Int64.unsigned b)
      LOCAL (temp _c c; temp _m m; temp _b (Vlong b);
             temp _n nonce; temp _k k; gvars gv)
      SEP ( SByte Nonce nonce;
            data_at_ Tsh (Tarray tuchar (Int64.unsigned b) noattr) c;
            ThirtyTwoByte K k;
            Sigma_vector (gv _sigma);
            message_at mCont m
            )
  POST [ tint ]
       PROP ()
       LOCAL (temp ret_temp (Vint (Int.repr 0)))
       SEP (Sigma_vector (gv _sigma); ThirtyTwoByte K k;
            crypto_stream_xor_postsep b Nonce K mCont (Int64.unsigned b) nonce c m).

Definition f_crypto_stream_xsalsa20_tweet_xor_spec := 
  DECLARE _crypto_stream_salsa20_tweet_xor
   WITH c : val, k:val, nonce:val, m:val, d:int64, mCont: list byte,
        Nonce : SixteenByte, Nonce2 : SixteenByte, K: SixteenByte * SixteenByte,
        gv: globals
   PRE [ _c OF tptr tuchar, _m OF tptr tuchar,  _d OF tulong,
         _n OF tptr tuchar, _k OF tptr tuchar]
      PROP (Zlength mCont = Int64.unsigned d)
      LOCAL (temp _c c; temp _m m; temp _d (Vlong d);
             temp _n nonce; temp _k k; gvars gv)
      SEP ( SByte Nonce nonce; SByte Nonce2 (offset_val 16 nonce);
            data_at_ Tsh (Tarray tuchar (Int64.unsigned d) noattr) c;
            ThirtyTwoByte K k;
            message_at mCont m;
            Sigma_vector (gv _sigma)
            )
  POST [ tint ]
       PROP ()
       LOCAL (temp ret_temp (Vint (Int.repr 0)))
       SEP (Sigma_vector (gv _sigma);
            EX HSalsaRes:_, crypto_stream_xor_postsep d Nonce2 HSalsaRes
              mCont (Int64.unsigned d)
              (offset_val 16 nonce) c m;
            data_at Tsh (Tarray tuchar 16 noattr) (SixteenByte2ValList Nonce) nonce;
            ThirtyTwoByte K k).

Definition f_crypto_stream_xsalsa20_tweet_spec :=
  DECLARE _crypto_stream_xsalsa20_tweet
   WITH c : val, k:val, nonce:val, d:int64,
        Nonce : SixteenByte, Nonce2 : SixteenByte, K: SixteenByte * SixteenByte,
        gv: globals
   PRE [ _c OF tptr tuchar,  _d OF tulong,
         _n OF tptr tuchar, _k OF tptr tuchar]
      PROP ()
      LOCAL (temp _c c;  temp _d (Vlong d);
             temp _n nonce; temp _k k; gvars gv)
      SEP ( SByte Nonce nonce; SByte Nonce2 (offset_val 16 nonce);
            data_at_ Tsh (Tarray tuchar (Int64.unsigned d) noattr) c;
            ThirtyTwoByte K k;
            Sigma_vector (gv _sigma)
            )
  POST [ tint ]
       PROP ()
       LOCAL (temp ret_temp (Vint (Int.repr 0)))
       SEP (Sigma_vector (gv _sigma);
            EX HSalsaRes:_, crypto_stream_xor_postsep d Nonce2 HSalsaRes
              (list_repeat (Z.to_nat (Int64.unsigned d)) Byte.zero) (Int64.unsigned d)
              (offset_val 16 nonce) c nullval;
            data_at Tsh (Tarray tuchar 16 noattr) (SixteenByte2ValList Nonce) nonce;
            ThirtyTwoByte K k).

Definition f_crypto_stream_salsa20_tweet_spec := 
  DECLARE _crypto_stream_salsa20_tweet
   WITH c : val, k:val, nonce:val, d:int64,
        Nonce : SixteenByte, K: SixteenByte * SixteenByte,
         gv: globals
   PRE [ _c OF tptr tuchar,  _d OF tulong,
         _n OF tptr tuchar, _k OF tptr tuchar]
      PROP ()
      LOCAL (temp _c c;  temp _d (Vlong d);
             temp _n nonce; temp _k k; gvars gv)
      SEP ( SByte Nonce nonce;
            data_at_ Tsh (Tarray tuchar (Int64.unsigned d) noattr) c;
            ThirtyTwoByte K k;
            Sigma_vector (gv _sigma)
            )
  POST [ tint ] 
       PROP ()
       LOCAL (temp ret_temp (Vint (Int.repr 0)))
       SEP (Sigma_vector (gv _sigma);
            ThirtyTwoByte K k;
            crypto_stream_xor_postsep d Nonce K (list_repeat (Z.to_nat (Int64.unsigned d)) Byte.zero) (Int64.unsigned d) nonce c nullval). 

Definition vn_spec :=
  DECLARE _vn
  WITH x:val, y:val, n:Z, xsh: share, ysh: share, xcont:list byte, ycont:list byte
  PRE [_x OF tptr tuchar, _y OF tptr tuchar, _n OF tint]
    PROP (readable_share xsh; readable_share ysh; 0<=n<= Int.max_unsigned)
    LOCAL (temp _x x; temp _y y; temp _n (Vint (Int.repr n)))
    SEP (data_at xsh (Tarray tuchar n noattr) (map Vint (map Int.repr (map Byte.unsigned xcont))) x;
         data_at ysh (Tarray tuchar n noattr) (map Vint (map Int.repr (map Byte.unsigned ycont))) y)
  POST [tint]
    PROP ()
    LOCAL (temp ret_temp (Vint (Int.repr (if list_eq_dec Byte.eq_dec xcont ycont then 0 else -1))))
    SEP (data_at xsh (Tarray tuchar n noattr) (map Vint (map Int.repr (map Byte.unsigned xcont))) x;
         data_at ysh (Tarray tuchar n noattr) (map Vint (map Int.repr (map Byte.unsigned ycont))) y). 
    
Definition verify16_spec :=
  DECLARE _crypto_verify_16_tweet
  WITH x:val, y:val, n:Z, xsh: share, ysh: share, xcont:list byte, ycont:list byte
  PRE [_x OF tptr tuchar, _y OF tptr tuchar]
    PROP (readable_share xsh; readable_share ysh)
    LOCAL (temp _x x; temp _y y)
    SEP (data_at xsh (Tarray tuchar 16 noattr) (map Vint (map Int.repr (map Byte.unsigned xcont))) x;
         data_at ysh (Tarray tuchar 16 noattr) (map Vint (map Int.repr (map Byte.unsigned ycont))) y)
  POST [tint]
    PROP ()
    LOCAL (temp ret_temp (Vint (Int.repr (if list_eq_dec Byte.eq_dec xcont ycont then 0 else -1))))
    SEP (data_at xsh (Tarray tuchar 16 noattr) (map Vint (map Int.repr (map Byte.unsigned xcont))) x;
         data_at ysh (Tarray tuchar 16 noattr) (map Vint (map Int.repr (map Byte.unsigned ycont))) y).
       
Definition verify32_spec :=
  DECLARE _crypto_verify_32_tweet
  WITH x:val, y:val, n:Z, xsh: share, ysh: share, xcont:list byte, ycont:list byte
  PRE [_x OF tptr tuchar, _y OF tptr tuchar]
    PROP (readable_share xsh; readable_share ysh)
    LOCAL (temp _x x; temp _y y)
    SEP (data_at xsh (Tarray tuchar 32 noattr) (map Vint (map Int.repr (map Byte.unsigned xcont))) x;
         data_at ysh (Tarray tuchar 32 noattr) (map Vint (map Int.repr (map Byte.unsigned ycont))) y)
  POST [tint]
    PROP ()
    LOCAL (temp ret_temp (Vint (Int.repr (if list_eq_dec Byte.eq_dec xcont ycont then 0 else -1))))
    SEP (data_at xsh (Tarray tuchar 32 noattr) (map Vint (map Int.repr (map Byte.unsigned xcont))) x;
         data_at ysh (Tarray tuchar 32 noattr) (map Vint (map Int.repr (map Byte.unsigned ycont))) y).       

Definition SalsaVarSpecs : varspecs := (_sigma, tarray tuchar 16)::nil.

Definition SalsaFunSpecs : funspecs := 
  ltac:(with_library prog (core_spec :: ld32_spec :: L32_spec::st32_spec::dl64_spec::ts64_spec::
                           crypto_core_salsa20_spec::crypto_core_hsalsa20_spec::
                           crypto_stream_salsa20_xor_spec::f_crypto_stream_salsa20_tweet_spec::
                           verify32_spec::verify16_spec::vn_spec::nil)). *)

Require Import tweetnacl20140427.verif_fcore_jbody.
(* tweetnacl20140427.verif_fcore_jbody:
Require Import Recdef.
Require Import VST.floyd.proofauto.
Local Open Scope logic.
Require Import List. Import ListNotations.
Require Import sha.general_lemmas.

Require Import tweetnacl20140427.split_array_lemmas.
Require Import ZArith.
Require Import tweetnacl20140427.tweetNaclBase.
Require Import tweetnacl20140427.Salsa20.
Require Import tweetnacl20140427.verif_salsa_base.
Require Import tweetnacl20140427.tweetnaclVerifiableC.
Require Import tweetnacl20140427.spec_salsa. Opaque Snuffle.Snuffle.
Require Import VST.floyd.library.

Ltac canon_load_result ::= idtac.

Opaque littleendian.
    Opaque littleendian_invert. Opaque Snuffle20. Opaque prepare_data.
    Opaque QuadByte2ValList. Opaque fcore_result.

Definition wlistJ' (wlist:list val) (j: Z) (t0 t1 t2 t3:int) (l: list val): Prop :=
  Zlength l = 16 /\
  l = upd_Znth (4 * j + (j + 3) mod 4)
       (upd_Znth (4 * j + (j + 2) mod 4)
         (upd_Znth (4 * j + (j + 1) mod 4)
          (upd_Znth (4 * j + (j + 0) mod 4) wlist (Vint t0))
          (Vint t1)) (Vint t2)) (Vint t3).

Fixpoint WLIST' (wlist : list val) (tlist: list int) (j:Z) m l :=
  match m with
    O => l=wlist
  | S m' => exists l' tm,
            Zlength l = Zlength wlist /\
            WLIST' wlist tlist j m' l' /\
            Znth (Z.of_nat m') (map Vint tlist) = Vint tm /\
            l = upd_Znth (4*j+ ((j+Z.of_nat m') mod 4)) l' (Vint tm)
  end.

Lemma WLIST'_length wlist tlist j : forall m l, WLIST' wlist tlist j m l -> Zlength l=Zlength wlist.

Definition Wcopyspec (t0 t1 t2 t3: int):=
(Int.xor t0
        (Int.rol
           (Int.add
              (Int.xor t3
                 (Int.rol
                    (Int.add
                       (Int.xor t2
                          (Int.rol
                             (Int.add
                                (Int.xor t1
                                   (Int.rol (Int.add t0 t3) (Int.repr 7))) t0)
                             (Int.repr 9)))
                       (Int.xor t1 (Int.rol (Int.add t0 t3) (Int.repr 7))))
                    (Int.repr 13)))
              (Int.xor t2
                 (Int.rol
                    (Int.add
                       (Int.xor t1 (Int.rol (Int.add t0 t3) (Int.repr 7))) t0)
                    (Int.repr 9)))) (Int.repr 18)),
  Int.xor t1 (Int.rol (Int.add t0 t3) (Int.repr 7)),
  Int.xor t2
       (Int.rol
          (Int.add (Int.xor t1 (Int.rol (Int.add t0 t3) (Int.repr 7))) t0)
          (Int.repr 9)),
  Int.xor t3
       (Int.rol
          (Int.add
             (Int.xor t2
                (Int.rol
                   (Int.add
                      (Int.xor t1 (Int.rol (Int.add t0 t3) (Int.repr 7))) t0)
                   (Int.repr 9)))
             (Int.xor t1 (Int.rol (Int.add t0 t3) (Int.repr 7))))
          (Int.repr 13))).

Lemma SixteenWR_Znth_int' s i:
  0 <= i < 16 -> exists ii : int, Znth i (SixteenWordRep s) = Vint ii.

Definition array_copy1_statement :=
  (Sfor (Sset _m (Econst_int (Int.repr 0) tint))
     (Ebinop Olt (Etempvar _m tint) (Econst_int (Int.repr 4) tint) tint)
     (Ssequence
        (Sset _t'33
           (Ederef
              (Ebinop Oadd (Evar _x (tarray tuint 16))
                 (Ebinop Omod
                    (Ebinop Oadd
                       (Ebinop Omul (Econst_int (Int.repr 5) tint)
                          (Etempvar _j tint) tint)
                       (Ebinop Omul (Econst_int (Int.repr 4) tint)
                          (Etempvar _m tint) tint) tint)
                    (Econst_int (Int.repr 16) tint) tint) (tptr tuint)) tuint))
        (Sassign
           (Ederef
              (Ebinop Oadd (Evar _t (tarray tuint 4)) (Etempvar _m tint)
                 (tptr tuint)) tuint) (Etempvar _t'33 tuint)))
     (Sset _m
        (Ebinop Oadd (Etempvar _m tint) (Econst_int (Int.repr 1) tint) tint))).
Lemma array_copy1: forall (Espec: OracleKind) j t x (xs:list int)
  (J:0<=j<4),
 semax (func_tycontext f_core SalsaVarSpecs SalsaFunSpecs nil)
  (PROP  ()
   LOCAL  (temp _j (Vint (Int.repr j));

Definition Jbody_statement :=
  (Ssequence
     (Sfor (Sset _m (Econst_int (Int.repr 0) tint))
        (Ebinop Olt (Etempvar _m tint) (Econst_int (Int.repr 4) tint) tint)
        (Ssequence
           (Sset _t'33
              (Ederef
                 (Ebinop Oadd (Evar _x (tarray tuint 16))
                    (Ebinop Omod
                       (Ebinop Oadd
                          (Ebinop Omul (Econst_int (Int.repr 5) tint)
                             (Etempvar _j tint) tint)
                          (Ebinop Omul (Econst_int (Int.repr 4) tint)
                             (Etempvar _m tint) tint) tint)
                       (Econst_int (Int.repr 16) tint) tint) (tptr tuint))
                 tuint))
           (Sassign
              (Ederef
                 (Ebinop Oadd (Evar _t (tarray tuint 4)) (Etempvar _m tint)
                    (tptr tuint)) tuint) (Etempvar _t'33 tuint)))
        (Sset _m
           (Ebinop Oadd (Etempvar _m tint) (Econst_int (Int.repr 1) tint)
              tint)))
     (Ssequence
        (Ssequence
           (Ssequence
              (Sset _t'31
                 (Ederef
                    (Ebinop Oadd (Evar _t (tarray tuint 4))
                       (Econst_int (Int.repr 0) tint) (tptr tuint)) tuint))
              (Ssequence
                 (Sset _t'32
                    (Ederef
                       (Ebinop Oadd (Evar _t (tarray tuint 4))
                          (Econst_int (Int.repr 3) tint) (tptr tuint)) tuint))
                 (Scall (Some _t'5)
                    (Evar _L32
                       (Tfunction (Tcons tuint (Tcons tint Tnil)) tuint
                          cc_default))
                    [Ebinop Oadd (Etempvar _t'31 tuint)
                       (Etempvar _t'32 tuint) tuint;
                    Econst_int (Int.repr 7) tint])))
           (Ssequence
              (Sset _t'30
                 (Ederef
                    (Ebinop Oadd (Evar _t (tarray tuint 4))
                       (Econst_int (Int.repr 1) tint) (tptr tuint)) tuint))
              (Sassign
                 (Ederef
                    (Ebinop Oadd (Evar _t (tarray tuint 4))
                       (Econst_int (Int.repr 1) tint) (tptr tuint)) tuint)
                 (Ebinop Oxor (Etempvar _t'30 tuint) (Etempvar _t'5 tuint)
                    tuint))))
        (Ssequence
           (Ssequence
              (Ssequence
                 (Sset _t'28
                    (Ederef
                       (Ebinop Oadd (Evar _t (tarray tuint 4))
                          (Econst_int (Int.repr 1) tint) (tptr tuint)) tuint))
                 (Ssequence
                    (Sset _t'29
                       (Ederef
                          (Ebinop Oadd (Evar _t (tarray tuint 4))
                             (Econst_int (Int.repr 0) tint) (tptr tuint))
                          tuint))
                    (Scall (Some _t'6)
                       (Evar _L32
                          (Tfunction (Tcons tuint (Tcons tint Tnil)) tuint
                             cc_default))
                       [Ebinop Oadd (Etempvar _t'28 tuint)
                          (Etempvar _t'29 tuint) tuint;
                       Econst_int (Int.repr 9) tint])))
              (Ssequence
                 (Sset _t'27
                    (Ederef
                       (Ebinop Oadd (Evar _t (tarray tuint 4))
                          (Econst_int (Int.repr 2) tint) (tptr tuint)) tuint))
                 (Sassign
                    (Ederef
                       (Ebinop Oadd (Evar _t (tarray tuint 4))
                          (Econst_int (Int.repr 2) tint) (tptr tuint)) tuint)
                    (Ebinop Oxor (Etempvar _t'27 tuint) (Etempvar _t'6 tuint)
                       tuint))))
           (Ssequence
              (Ssequence
                 (Ssequence
                    (Sset _t'25
                       (Ederef
                          (Ebinop Oadd (Evar _t (tarray tuint 4))
                             (Econst_int (Int.repr 2) tint) (tptr tuint))
                          tuint))
                    (Ssequence
                       (Sset _t'26
                          (Ederef
                             (Ebinop Oadd (Evar _t (tarray tuint 4))
                                (Econst_int (Int.repr 1) tint) (tptr tuint))
                             tuint))
                       (Scall (Some _t'7)
                          (Evar _L32
                             (Tfunction (Tcons tuint (Tcons tint Tnil)) tuint
                                cc_default))
                          [Ebinop Oadd (Etempvar _t'25 tuint)
                             (Etempvar _t'26 tuint) tuint;
                          Econst_int (Int.repr 13) tint])))
                 (Ssequence
                    (Sset _t'24
                       (Ederef
                          (Ebinop Oadd (Evar _t (tarray tuint 4))
                             (Econst_int (Int.repr 3) tint) (tptr tuint))
                          tuint))
                    (Sassign
                       (Ederef
                          (Ebinop Oadd (Evar _t (tarray tuint 4))
                             (Econst_int (Int.repr 3) tint) (tptr tuint))
                          tuint)
                       (Ebinop Oxor (Etempvar _t'24 tuint)
                          (Etempvar _t'7 tuint) tuint))))
              (Ssequence
                 (Ssequence
                    (Ssequence
                       (Sset _t'22
                          (Ederef
                             (Ebinop Oadd (Evar _t (tarray tuint 4))
                                (Econst_int (Int.repr 3) tint) (tptr tuint))
                             tuint))
                       (Ssequence
                          (Sset _t'23
                             (Ederef
                                (Ebinop Oadd (Evar _t (tarray tuint 4))
                                   (Econst_int (Int.repr 2) tint)
                                   (tptr tuint)) tuint))
                          (Scall (Some _t'8)
                             (Evar _L32
                                (Tfunction (Tcons tuint (Tcons tint Tnil))
                                   tuint cc_default))
                             [Ebinop Oadd (Etempvar _t'22 tuint)
                                (Etempvar _t'23 tuint) tuint;
                             Econst_int (Int.repr 18) tint])))
                    (Ssequence
                       (Sset _t'21
                          (Ederef
                             (Ebinop Oadd (Evar _t (tarray tuint 4))
                                (Econst_int (Int.repr 0) tint) (tptr tuint))
                             tuint))
                       (Sassign
                          (Ederef
                             (Ebinop Oadd (Evar _t (tarray tuint 4))
                                (Econst_int (Int.repr 0) tint) (tptr tuint))
                             tuint)
                          (Ebinop Oxor (Etempvar _t'21 tuint)
                             (Etempvar _t'8 tuint) tuint))))
                 (Sfor (Sset _m (Econst_int (Int.repr 0) tint))
                    (Ebinop Olt (Etempvar _m tint)
                       (Econst_int (Int.repr 4) tint) tint)
                    (Ssequence
                       (Sset _t'20
                          (Ederef
                             (Ebinop Oadd (Evar _t (tarray tuint 4))
                                (Etempvar _m tint) (tptr tuint)) tuint))
                       (Sassign
                          (Ederef
                             (Ebinop Oadd (Evar _w (tarray tuint 16))
                                (Ebinop Oadd
                                   (Ebinop Omul
                                      (Econst_int (Int.repr 4) tint)
                                      (Etempvar _j tint) tint)
                                   (Ebinop Omod
                                      (Ebinop Oadd (Etempvar _j tint)
                                         (Etempvar _m tint) tint)
                                      (Econst_int (Int.repr 4) tint) tint)
                                   tint) (tptr tuint)) tuint)
                          (Etempvar _t'20 tuint)))
                    (Sset _m
                       (Ebinop Oadd (Etempvar _m tint)
                          (Econst_int (Int.repr 1) tint) tint)))))))).

Lemma Jbody (Espec : OracleKind) FR c k h nonce out w x y t i j xs
  (I : 0 <= i < 20)
  (J : 0 <= j < 4)
  wlist
  t0 t1 t2 t3
  (T0: Znth ((5*j+4*0) mod 16) (map Vint xs) = Vint t0)
  (T1: Znth ((5*j+4*1) mod 16) (map Vint  xs) = Vint t1)
  (T2: Znth ((5*j+4*2) mod 16) (map Vint xs) = Vint t2)
  (T3: Znth ((5*j+4*3) mod 16) (map Vint xs) = Vint t3):
@semax CompSpecs Espec
  (func_tycontext f_core SalsaVarSpecs SalsaFunSpecs nil)
  (PROP  ()
   LOCAL  (temp _j (Vint (Int.repr j)); temp _i (Vint (Int.repr i)); *)

Opaque Snuffle.Snuffle.

Lemma SnuffleS i l: Snuffle (S i) l = bind (Snuffle i l) (Snuffle 1). reflexivity. Qed.

Fixpoint WcontI (xs: list int) (j:nat) (l:list val):Prop :=
   match j with O => Zlength l = 16
   | (S n) => Zlength l = 16 /\
              exists t0 t1 t2 t3,
              Znth ((5 * (Z.of_nat n) + 4 * 0) mod 16) (map Vint xs) = Vint t0 /\
              Znth ((5 * (Z.of_nat n) + 4 * 1) mod 16) (map Vint xs) = Vint t1 /\
              Znth ((5 * (Z.of_nat n) + 4 * 2) mod 16) (map Vint xs) = Vint t2 /\
              Znth ((5 * (Z.of_nat n) + 4 * 3) mod 16) (map Vint xs) = Vint t3 /\
              exists wl, WcontI xs n wl /\
                match Wcopyspec t0 t1 t2 t3 with
                 (s0,s1,s2,s3) => wlistJ' wl (Z.of_nat n) s0 s1 s2 s3 l
                end
  end.

Lemma WcontI_Zlength xs j l: WcontI xs j l -> Zlength l=16.
Proof. intros. destruct j; eapply H. Qed.

Lemma WWI r w (W: WcontI r 4 w) (R:Zlength r = 16):
      exists wi, w=map Vint wi /\ snuffleRound r = Some wi.
Proof.
apply listD16 in R.
destruct R as [x0 [x1 [x2 [x3 [x4 [x5 [x6 [x7
              [x8 [x9 [x10 [x11 [x12 [x13 [x14 [x15 XX]]]]]]]]]]]]]]]]. subst r.
destruct W as [HW H1].
destruct H1 as [t0 [t1 [t2 [t3 [T0 [T1 [T2 [T3 [w1 [[_ H1] W1]]]]]]]]]]. simpl in T0, T1, T2, T3.
rewrite Z.mod_small in T0. 2: omega.
rewrite Zmod_eq in T1. 2: omega.
rewrite Zmod_eq in T2. 2: omega.
rewrite Zmod_eq in T3. 2: omega. simpl in T0, T1, T2, T3.
destruct H1 as [t4 [t5 [t6 [t7 [T4 [T5 [T6 [T7 [w2 [[_ H1] W2]]]]]]]]]]. simpl in T4, T5, T6, T7.
rewrite Zmod_eq in T4. 2: omega.
rewrite Zmod_eq in T5. 2: omega.
rewrite Zmod_eq in T6. 2: omega.
rewrite Zmod_eq in T7. 2: omega. simpl in T4, T5, T6, T7.
destruct H1 as [t8 [t9 [t10 [t11 [T8 [T9 [T10 [T11 [w3 [[_ H1] W3]]]]]]]]]]. simpl in T8, T9, T10, T11.
rewrite Z.mod_small in T8. 2: omega.
rewrite Z.mod_small in T9. 2: omega.
rewrite Zmod_eq in T10. 2: omega.
rewrite Zmod_eq in T11. 2: omega. simpl in T8, T9, T10, T11.
destruct H1 as [t12 [t13 [t14 [t15 [T12 [T13 [T14 [T15 [w4 [L4 W4]]]]]]]]]]. simpl in T12, T13, T14, T15.
rewrite Z.mod_small in T12. 2: omega.
rewrite Z.mod_small in T13. 2: omega.
rewrite Z.mod_small in T14. 2: omega.
rewrite Z.mod_small in T15. 2: omega.
unfold Znth in *. simpl in  T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15.
symmetry in T0; inv T0. symmetry in T1; inv T1. symmetry in T2; inv T2. symmetry in T3; inv T3.
symmetry in T4; inv T4. symmetry in T5; inv T5. symmetry in T6; inv T6. symmetry in T7; inv T7.
symmetry in T8; inv T8. symmetry in T9; inv T9. symmetry in T10; inv T10. symmetry in T11; inv T11.
symmetry in T12; inv T12. symmetry in T13; inv T13. symmetry in T14; inv T14. symmetry in T15; inv T15.
red in L4.
simpl in W4.
remember (Int.xor x4 (Int.rol (Int.add x0 x12) (Int.repr 7))) as z1.
remember (Int.xor x8 (Int.rol (Int.add z1 x0) (Int.repr 9))) as z2.
remember (Int.xor x12 (Int.rol (Int.add z2 z1) (Int.repr 13))) as z3.
remember (Int.xor x0 (Int.rol (Int.add z3 z2) (Int.repr 18))) as z0.
apply listD16 in L4.
destruct L4 as [y0 [y1 [y2 [y3 [y4 [y5 [y6 [y7
               [y8 [y9 [y10 [y11 [y12 [y13 [y14 [y15 XX]]]]]]]]]]]]]]]]. subst w4.
destruct W4 as [_ W4]; simpl in W4.

unfold upd_Znth, sublist in W4; simpl in W4. subst w3.
simpl in W3.
remember (Int.xor x9 (Int.rol (Int.add x5 x1) (Int.repr 7))) as z6.
remember (Int.xor x13 (Int.rol (Int.add z6 x5) (Int.repr 9))) as z7.
remember (Int.xor x1 (Int.rol (Int.add z7 z6) (Int.repr 13))) as z4.
remember (Int.xor x5 (Int.rol (Int.add z4 z7) (Int.repr 18))) as z5.
destruct W3 as [_ W3]; simpl in W3.
unfold upd_Znth, sublist in W3; simpl in W3. subst w2.
destruct W2 as [_ W2]. simpl in W2.
remember (Int.xor x14 (Int.rol (Int.add x10 x6) (Int.repr 7))) as z11.
remember (Int.xor x2 (Int.rol (Int.add z11 x10) (Int.repr 9))) as z8.
remember (Int.xor x6 (Int.rol (Int.add z8 z11) (Int.repr 13))) as z9.
remember (Int.xor x10 (Int.rol (Int.add z9 z8) (Int.repr 18))) as z10.
unfold upd_Znth, sublist in W2; simpl in W2. subst w1.
destruct W1 as [_ W1]; simpl in W1.
remember (Int.xor x3 (Int.rol (Int.add x15 x11) (Int.repr 7))) as z12.
remember (Int.xor x7 (Int.rol (Int.add z12 x15) (Int.repr 9))) as z13.
remember (Int.xor x11 (Int.rol (Int.add z13 z12) (Int.repr 13))) as z14.
remember (Int.xor x15 (Int.rol (Int.add z14 z13) (Int.repr 18))) as z15.
unfold upd_Znth, sublist in W1; simpl in W1. subst w. clear HW.
exists [z0; z1; z2; z3; z4; z5; z6; z7;
        z8; z9; z10; z11; z12; z13; z14; z15].
split. reflexivity.
rewrite Int.add_commut in Heqz0, Heqz2, Heqz3, Heqz4, Heqz5, Heqz7, Heqz8,
  Heqz9, Heqz10, Heqz13, Heqz14, Heqz15.
subst z0 z1 z2 z3 z4 z5 z6 z7 z8 z9 z10 z11 z12 z13 z14 z15. reflexivity.
Qed.

Definition array_copy3_statement:=
Sfor (Sset _m (Econst_int (Int.repr 0) tint))
     (Ebinop Olt (Etempvar _m tint) (Econst_int (Int.repr 16) tint) tint)
     (Ssequence
        (Sset _t'19
           (Ederef
              (Ebinop Oadd (Evar _w (tarray tuint 16)) (Etempvar _m tint)
                 (tptr tuint)) tuint))
        (Sassign
           (Ederef
              (Ebinop Oadd (Evar _x (tarray tuint 16)) (Etempvar _m tint)
                 (tptr tuint)) tuint) (Etempvar _t'19 tuint)))
     (Sset _m
        (Ebinop Oadd (Etempvar _m tint) (Econst_int (Int.repr 1) tint) tint)).

Lemma array_copy3 Espec:
forall FR c k h nonce out
       i w x y t (xlist wlist:list val)
       (WZ: forall m, 0<=m<16 -> exists mval, Znth m wlist =Vint mval),
@semax CompSpecs Espec
  (func_tycontext f_core SalsaVarSpecs SalsaFunSpecs nil)
  (PROP  ()
   LOCAL  (temp _j (Vint (Int.repr 4)); temp _i (Vint (Int.repr i)); lvar _t (tarray tuint 4) t;
   lvar _y (tarray tuint 16) y; lvar _x (tarray tuint 16) x;
   lvar _w (tarray tuint 16) w; temp _in nonce; temp _out out; temp _c c;
   temp _k k; temp _h (Vint (Int.repr h)))
   SEP  (FR; data_at Tsh (tarray tuint 16) wlist w;
         data_at Tsh (tarray tuint 16) xlist x)) 
 array_copy3_statement
  (normal_ret_assert
  (PROP  ()
   LOCAL  (temp _j (Vint (Int.repr 4)); temp _i (Vint (Int.repr i)); lvar _t (tarray tuint 4) t;
      lvar _y (tarray tuint 16) y; lvar _x (tarray tuint 16) x;
      lvar _w (tarray tuint 16) w; temp _in nonce; temp _out out; temp _c c;
      temp _k k; temp _h (Vint (Int.repr h)))
   SEP  (FR; data_at Tsh (tarray tuint 16) wlist w;
         data_at Tsh (tarray tuint 16) wlist x))).
Proof. intros. abbreviate_semax.
Time assert_PROP (Zlength wlist = 16 /\ Zlength xlist = 16) as WXL by entailer!. 
destruct WXL as [WL XL].
unfold array_copy3_statement.
Time forward_for_simple_bound 16 (EX m:Z,
  (PROP  ()
   LOCAL  (temp _j (Vint (Int.repr 4)); temp _i (Vint (Int.repr i)); lvar _t (tarray tuint 4) t;
   lvar _y (tarray tuint 16) y; lvar _x (tarray tuint 16) x;
   lvar _w (tarray tuint 16) w; temp _in nonce; temp _out out; temp _c c;
   temp _k k; temp _h (Vint (Int.repr h)))
   SEP  (FR; data_at Tsh (tarray tuint 16) wlist w;
         EX mlist:_, !!(forall mm, 0<=mm<m -> Znth mm mlist = Znth mm wlist)
                && data_at Tsh (tarray tuint 16) mlist x))).
  
{ Exists xlist. Time entailer!.  intros; omega. }
{ Intros mlist. rename H into M. rename i0 into m. rename H0 into HM.
  destruct (WZ _ M) as [mval MVAL].
  freeze [0;2] FR1.
  Time forward; change (@Znth val Vundef) with (@Znth val _); rewrite MVAL. 
  Time solve[entailer!]. 
  thaw FR1.
  Time assert_PROP (Zlength mlist = 16) as ML by entailer!. 
  Time forward. 
   { Exists (upd_Znth m mlist (Vint mval)).
     Time entailer!. 
     intros mm ?.
     destruct (zeq mm m); subst.
     + rewrite MVAL, upd_Znth_same; trivial. omega.
     + rewrite <- HM. 2: omega.
       apply upd_Znth_diff; trivial; omega. }
}
{ Time entailer!. 
  Intros mlist.
  assert_PROP (Zlength mlist = 16) as ML by entailer.
  apply derives_refl'. f_equal.
  eapply Znth_extensional. omega.
  intros kk K. apply H2. omega. }
Time Qed. 

Definition f_core_loop3_statement :=
Sfor (Sset _i (Econst_int (Int.repr 0) tint))
     (Ebinop Olt (Etempvar _i tint) (Econst_int (Int.repr 20) tint) tint)
     (Ssequence
        (Sfor (Sset _j (Econst_int (Int.repr 0) tint))
           (Ebinop Olt (Etempvar _j tint) (Econst_int (Int.repr 4) tint) tint)
           (Ssequence
              (Sfor (Sset _m (Econst_int (Int.repr 0) tint))
                 (Ebinop Olt (Etempvar _m tint)
                    (Econst_int (Int.repr 4) tint) tint)
                 (Ssequence
                    (Sset _t'33
                       (Ederef
                          (Ebinop Oadd (Evar _x (tarray tuint 16))
                             (Ebinop Omod
                                (Ebinop Oadd
                                   (Ebinop Omul
                                      (Econst_int (Int.repr 5) tint)
                                      (Etempvar _j tint) tint)
                                   (Ebinop Omul
                                      (Econst_int (Int.repr 4) tint)
                                      (Etempvar _m tint) tint) tint)
                                (Econst_int (Int.repr 16) tint) tint)
                             (tptr tuint)) tuint))
                    (Sassign
                       (Ederef
                          (Ebinop Oadd (Evar _t (tarray tuint 4))
                             (Etempvar _m tint) (tptr tuint)) tuint)
                       (Etempvar _t'33 tuint)))
                 (Sset _m
                    (Ebinop Oadd (Etempvar _m tint)
                       (Econst_int (Int.repr 1) tint) tint)))
              (Ssequence
                 (Ssequence
                    (Ssequence
                       (Sset _t'31
                          (Ederef
                             (Ebinop Oadd (Evar _t (tarray tuint 4))
                                (Econst_int (Int.repr 0) tint) (tptr tuint))
                             tuint))
                       (Ssequence
                          (Sset _t'32
                             (Ederef
                                (Ebinop Oadd (Evar _t (tarray tuint 4))
                                   (Econst_int (Int.repr 3) tint)
                                   (tptr tuint)) tuint))
                          (Scall (Some _t'5)
                             (Evar _L32
                                (Tfunction (Tcons tuint (Tcons tint Tnil))
                                   tuint cc_default))
                             [Ebinop Oadd (Etempvar _t'31 tuint)
                                (Etempvar _t'32 tuint) tuint;
                             Econst_int (Int.repr 7) tint])))
                    (Ssequence
                       (Sset _t'30
                          (Ederef
                             (Ebinop Oadd (Evar _t (tarray tuint 4))
                                (Econst_int (Int.repr 1) tint) (tptr tuint))
                             tuint))
                       (Sassign
                          (Ederef
                             (Ebinop Oadd (Evar _t (tarray tuint 4))
                                (Econst_int (Int.repr 1) tint) (tptr tuint))
                             tuint)
                          (Ebinop Oxor (Etempvar _t'30 tuint)
                             (Etempvar _t'5 tuint) tuint))))
                 (Ssequence
                    (Ssequence
                       (Ssequence
                          (Sset _t'28
                             (Ederef
                                (Ebinop Oadd (Evar _t (tarray tuint 4))
                                   (Econst_int (Int.repr 1) tint)
                                   (tptr tuint)) tuint))
                          (Ssequence
                             (Sset _t'29
                                (Ederef
                                   (Ebinop Oadd (Evar _t (tarray tuint 4))
                                      (Econst_int (Int.repr 0) tint)
                                      (tptr tuint)) tuint))
                             (Scall (Some _t'6)
                                (Evar _L32
                                   (Tfunction (Tcons tuint (Tcons tint Tnil))
                                      tuint cc_default))
                                [Ebinop Oadd (Etempvar _t'28 tuint)
                                   (Etempvar _t'29 tuint) tuint;
                                Econst_int (Int.repr 9) tint])))
                       (Ssequence
                          (Sset _t'27
                             (Ederef
                                (Ebinop Oadd (Evar _t (tarray tuint 4))
                                   (Econst_int (Int.repr 2) tint)
                                   (tptr tuint)) tuint))
                          (Sassign
                             (Ederef
                                (Ebinop Oadd (Evar _t (tarray tuint 4))
                                   (Econst_int (Int.repr 2) tint)
                                   (tptr tuint)) tuint)
                             (Ebinop Oxor (Etempvar _t'27 tuint)
                                (Etempvar _t'6 tuint) tuint))))
                    (Ssequence
                       (Ssequence
                          (Ssequence
                             (Sset _t'25
                                (Ederef
                                   (Ebinop Oadd (Evar _t (tarray tuint 4))
                                      (Econst_int (Int.repr 2) tint)
                                      (tptr tuint)) tuint))
                             (Ssequence
                                (Sset _t'26
                                   (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                         (Econst_int (Int.repr 1) tint)
                                         (tptr tuint)) tuint))
                                (Scall (Some _t'7)
                                   (Evar _L32
                                      (Tfunction
                                         (Tcons tuint (Tcons tint Tnil))
                                         tuint cc_default))
                                   [Ebinop Oadd (Etempvar _t'25 tuint)
                                      (Etempvar _t'26 tuint) tuint;
                                   Econst_int (Int.repr 13) tint])))
                          (Ssequence
                             (Sset _t'24
                                (Ederef
                                   (Ebinop Oadd (Evar _t (tarray tuint 4))
                                      (Econst_int (Int.repr 3) tint)
                                      (tptr tuint)) tuint))
                             (Sassign
                                (Ederef
                                   (Ebinop Oadd (Evar _t (tarray tuint 4))
                                      (Econst_int (Int.repr 3) tint)
                                      (tptr tuint)) tuint)
                                (Ebinop Oxor (Etempvar _t'24 tuint)
                                   (Etempvar _t'7 tuint) tuint))))
                       (Ssequence
                          (Ssequence
                             (Ssequence
                                (Sset _t'22
                                   (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                         (Econst_int (Int.repr 3) tint)
                                         (tptr tuint)) tuint))
                                (Ssequence
                                   (Sset _t'23
                                      (Ederef
                                         (Ebinop Oadd
                                            (Evar _t (tarray tuint 4))
                                            (Econst_int (Int.repr 2) tint)
                                            (tptr tuint)) tuint))
                                   (Scall (Some _t'8)
                                      (Evar _L32
                                         (Tfunction
                                            (Tcons tuint (Tcons tint Tnil))
                                            tuint cc_default))
                                      [Ebinop Oadd (Etempvar _t'22 tuint)
                                         (Etempvar _t'23 tuint) tuint;
                                      Econst_int (Int.repr 18) tint])))
                             (Ssequence
                                (Sset _t'21
                                   (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                         (Econst_int (Int.repr 0) tint)
                                         (tptr tuint)) tuint))
                                (Sassign
                                   (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                         (Econst_int (Int.repr 0) tint)
                                         (tptr tuint)) tuint)
                                   (Ebinop Oxor (Etempvar _t'21 tuint)
                                      (Etempvar _t'8 tuint) tuint))))
                          (Sfor (Sset _m (Econst_int (Int.repr 0) tint))
                             (Ebinop Olt (Etempvar _m tint)
                                (Econst_int (Int.repr 4) tint) tint)
                             (Ssequence
                                (Sset _t'20
                                   (Ederef
                                      (Ebinop Oadd (Evar _t (tarray tuint 4))
                                         (Etempvar _m tint) (tptr tuint))
                                      tuint))
                                (Sassign
                                   (Ederef
                                      (Ebinop Oadd
                                         (Evar _w (tarray tuint 16))
                                         (Ebinop Oadd
                                            (Ebinop Omul
                                               (Econst_int (Int.repr 4) tint)
                                               (Etempvar _j tint) tint)
                                            (Ebinop Omod
                                               (Ebinop Oadd
                                                  (Etempvar _j tint)
                                                  (Etempvar _m tint) tint)
                                               (Econst_int (Int.repr 4) tint)
                                               tint) tint) (tptr tuint))
                                      tuint) (Etempvar _t'20 tuint)))
                             (Sset _m
                                (Ebinop Oadd (Etempvar _m tint)
                                   (Econst_int (Int.repr 1) tint) tint))))))))
           (Sset _j
              (Ebinop Oadd (Etempvar _j tint) (Econst_int (Int.repr 1) tint)
                 tint)))
        (Sfor (Sset _m (Econst_int (Int.repr 0) tint))
           (Ebinop Olt (Etempvar _m tint) (Econst_int (Int.repr 16) tint)
              tint)
           (Ssequence
              (Sset _t'19
                 (Ederef
                    (Ebinop Oadd (Evar _w (tarray tuint 16))
                       (Etempvar _m tint) (tptr tuint)) tuint))
              (Sassign
                 (Ederef
                    (Ebinop Oadd (Evar _x (tarray tuint 16))
                       (Etempvar _m tint) (tptr tuint)) tuint)
                 (Etempvar _t'19 tuint)))
           (Sset _m
              (Ebinop Oadd (Etempvar _m tint) (Econst_int (Int.repr 1) tint)
                 tint))))
     (Sset _i
        (Ebinop Oadd (Etempvar _i tint) (Econst_int (Int.repr 1) tint) tint)).

Lemma f_core_loop3: forall (Espec : OracleKind) FR
c k h nonce out w x y t (xI:list int),
@semax CompSpecs Espec
  (func_tycontext f_core SalsaVarSpecs SalsaFunSpecs nil)
  (PROP  ()
   LOCAL  (temp _i (Vint (Int.repr 16)); lvar _t (tarray tuint 4) t;
   lvar _y (tarray tuint 16) y; lvar _x (tarray tuint 16) x;
   lvar _w (tarray tuint 16) w; temp _in nonce; temp _out out; temp _c c;
   temp _k k; temp _h (Vint (Int.repr h)))
   SEP  (FR; data_at_ Tsh (tarray tuint 4) t;
         data_at_ Tsh (tarray tuint 16) w;
         data_at Tsh (tarray tuint 16) (map Vint xI) x))
 f_core_loop3_statement
  (normal_ret_assert
  (PROP  ()
   LOCAL  (temp _i (Vint (Int.repr 20)); lvar _t (tarray tuint 4) t; lvar _y (tarray tuint 16) y;
       lvar _x (tarray tuint 16) x; lvar _w (tarray tuint 16) w; temp _in nonce;
       temp _out out; temp _c c; temp _k k; temp _h (Vint (Int.repr h)))
   SEP (FR; data_at_ Tsh (tarray tuint 4) t; data_at_ Tsh (tarray tuint 16) w;
        EX r:_, !!(Snuffle 20 xI = Some r) &&
           data_at Tsh (tarray tuint 16) (map Vint r) x))).
Proof. intros. abbreviate_semax.
unfold f_core_loop3_statement.
freeze [0;1;2] FR1.
Time assert_PROP (Zlength (map Vint xI) = 16) as XIZ by entailer!. 
thaw FR1.
rewrite Zlength_map in XIZ.
drop_LOCAL 0%nat.
Time forward_for_simple_bound 20 (EX i:Z,
  (PROP  ()
   LOCAL  (lvar _t (tarray tuint 4) t;
   lvar _y (tarray tuint 16) y; lvar _x (tarray tuint 16) x;
   lvar _w (tarray tuint 16) w; temp _in nonce; temp _out out; temp _c c;
   temp _k k; temp _h (Vint (Int.repr h)))
   SEP  (FR; data_at_ Tsh (tarray tuint 4) t; data_at_ Tsh (tarray tuint 16) w;
         EX r:_, !!(Snuffle (Z.to_nat i) xI = Some r) &&
             data_at Tsh (tarray tuint 16) (map Vint r) x))). 
{ Exists xI. Time entailer!.  }

{ rename H into I. Intros r. rename H into R.
  assert (XI: length xI = 16%nat). eapply (Zlength_length _ _ 16). omega. trivial.
  assert (RL:= Snuffle_length _ _ _ R XI).
  assert (RZL: Zlength r = 16). rewrite Zlength_correct, RL; reflexivity.

  Time forward_for_simple_bound 4 (EX j:Z,
  (PROP  ()
   LOCAL  (temp _i (Vint (Int.repr i)); lvar _t (tarray tuint 4) t;
   lvar _y (tarray tuint 16) y; lvar _x (tarray tuint 16) x;
   lvar _w (tarray tuint 16) w; temp _in nonce; temp _out out; temp _c c;
   temp _k k; temp _h (Vint (Int.repr h)))
   SEP  (FR; data_at_ Tsh (tarray tuint 4) t;
      EX l:_, !!(WcontI r (Z.to_nat j) l) && data_at Tsh (tarray tuint 16) l w;
      data_at Tsh (tarray tuint 16) (map Vint r) x))). 
  { Time entailer!.  Exists (list_repeat 16 Vundef). Time entailer!.  }
  { rename H into J. rename i0 into j.
    Intros wlist. rename H into WCONT.
    destruct (Znth_mapVint r ((5 * j + 4 * 0) mod 16)) as [t0 T0].
      rewrite RZL; apply Z_mod_lt; omega.
    destruct (Znth_mapVint r ((5 * j + 4 * 1) mod 16)) as [t1 T1].
      rewrite RZL; apply Z_mod_lt; omega.
    destruct (Znth_mapVint r ((5 * j + 4 * 2) mod 16)) as [t2 T2].
      rewrite RZL; apply Z_mod_lt; omega.
    destruct (Znth_mapVint r ((5 * j + 4 * 3) mod 16)) as [t3 T3].
      rewrite RZL; apply Z_mod_lt; omega. 
    eapply semax_post_flipped'.
    apply (Jbody _ FR c k h nonce out w x y t i j r I J wlist _ _ _ _ T0 T1 T2 T3).
    Intros W. Exists W.
    Time entailer!.  
    rewrite Z.add_comm, Z2Nat.inj_add; try omega.
    assert (X: (Z.to_nat 1 + Z.to_nat j = S (Z.to_nat j))%nat) by reflexivity.
    rewrite X. simpl. split. assumption.
    exists t0, t1, t2, t3. simpl in T0, T1, T2, T3. rewrite Z2Nat.id, T0, T1, T2, T3.
    repeat split; trivial.
    exists wlist. split; trivial. omega. }

  Intros wlist. rename H into HW.
  destruct (WWI _ _ HW RZL) as [wints [WI SNUFF]]. subst wlist.
  freeze [0;1] FR2.
  eapply semax_post_flipped'.
  apply (array_copy3 _ (FRZL FR2) c k h nonce out
                  i w x y t (map Vint r) (map Vint wints)); trivial.
           intros. apply Znth_mapVint.
              destruct (snuffleRound_length _ _ SNUFF) as [WL _].
              rewrite Zlength_correct, WL; simpl; omega.
  Exists wints. rewrite Z.add_comm, Z2Nat.inj_add; try omega.
  Time entailer!. 
  rewrite SnuffleS, R; trivial.
  thaw FR2; cancel. }
 apply ENTAIL_refl.
Time Qed. 