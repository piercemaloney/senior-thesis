From Categories Require Import Category.Main.
(* Categories.Category.Main:
From Categories Require Export Category.Category.
From Categories Require Export Category.Morph.
From Categories Require Export Category.Opposite.
From Categories Require Export Category.SubCategory.
From Categories Require Export Category.Composable_Chain. *)

From Categories Require Import Coq_Cats.Coq_Cat.
(* Categories.Coq_Cats.Coq_Cat:
From Categories Require Import Essentials.Notations.
From Categories Require Import Essentials.Types.
From Categories Require Import Essentials.Facts_Tactics.
From Categories Require Import Category.Main.

Notation Coq_Cat U :=
{|
  Obj := U;

  Hom := (fun A B => A → B);

  compose := fun A B C (g : A → B) (h : B → C) => fun (x : A) => h (g x);

  id := fun A => fun x => x
|}. *)

  

Program Definition Set_Cat : Category := Coq_Cat Set.



