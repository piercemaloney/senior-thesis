
Require Import Functions.
(* Functions:
Section Mappings.
Variable X Y : Set.
Variable f : X -> Y.
Definition Injective := forall x x' : X, f x = f x' -> x = x'.
Definition Surjective := forall y : Y, exists x : X, y = f x.
End Mappings.

Notation One_one := (Injective _ _) (only parsing).
Notation Onto := (Surjective _ _) (only parsing).

Section Finiteness.
Variable X : Set.
Definition Finite := forall f : X -> X, Injective _ _ f -> Surjective _ _ f.
End Finiteness.

Section Composition.
Variable X Y Z : Set.
Variable f : X -> Y.
Variable g : Y -> Z.
Definition comp (x : X) := g (f x).
End Composition.

Notation "f 'o' g" := (comp _ _ _ f g) (at level 20, right associativity).

Hint Unfold Injective Surjective comp.

Section Preservation.
Variable X Y Z : Set.
Variable f : X -> Y.
Variable g : Y -> Z.

Lemma Injections_compose :
 Injective _ _ f -> Injective _ _ g -> Injective _ _ (f o g).

Lemma Surjections_right : Surjective _ _ (f o g) -> Surjective _ _ g.

Lemma Surjections_compose :
 Surjective _ _ f -> Surjective _ _ g -> Surjective _ _ (f o g).

End Preservation. *)

Parameter Black White : Set. 

Parameter BW : Black -> White. 
Axiom BW_One_one : Injective _ _ BW.

Axiom Finite_Board : Finite Black.

Parameter Domino : White -> Black.
Axiom Domino_one_one : Injective _ _ Domino.

Theorem Domino_covers_Black : Surjective _ _ Domino.
Proof.
apply Surjections_right with (f := BW).
apply (Finite_Board (BW o Domino)).
apply Injections_compose.
exact BW_One_one.
exact Domino_one_one.
Qed.

