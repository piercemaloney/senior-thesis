
Require Export preuve2.
(* preuve2:
Require Export preuve1.

Section Three.
Hypothesis alpha_irr : forall n p : Z, (alpha * IZR p)%R <> IZR n.
Hypothesis prop_alpha : (0 < alpha)%R /\ (alpha < 1)%R.
Hypothesis prop_N : forall N : nat, N >= 2.

Lemma three_gap1 :
 forall N n : nat, 0 < n -> n < N - first N -> after N n = n + first N.

Lemma three_gap2 :
 forall N n : nat,
 N - first N <= n -> n < last N -> after N n = n + first N - last N.

Lemma three_gap3 :
 forall N n : nat, last N <= n -> n < N -> after N n = n - last N.

End Three. *)

Section gap.
Variable N n : nat.
Hypothesis alpha_irr : forall n p : Z, (alpha * IZR p)%R <> IZR n.
Hypothesis prop_alpha : (0 < alpha)%R /\ (alpha < 1)%R.
Hypothesis prop_N : forall N : nat, N >= 2.
Hypothesis Hn : 0 < n /\ n < N.

Definition succes := after N n.

Definition num1 := n + first N.
Definition num2 := n + first N - last N.
Definition num3 := n - last N.

Theorem three_gap : succes = num1 \/ succes = num2 \/ succes = num3.

generalize (inser2_trans_lt 0 n (last N) (N - first N) N Hn).
intro; elim H; intros.
elim a; intros y0; elim y0; intros.
left; apply (three_gap1 alpha_irr prop_alpha prop_N N n H0 H1).
right; left; apply (three_gap2 alpha_irr prop_alpha prop_N N n H0 H1).
elim b; intros.
right; right; apply (three_gap3 alpha_irr prop_alpha prop_N N n H0 H1).
Qed.

End gap.