

Require Export  general_tactics.



Parameter Point : Set.



Require Export Classical.



Parameter Cong : Point -> Point -> Point -> Point -> Prop.



Parameter Bet : Point -> Point -> Point -> Prop.



Definition Col (A B C : Point) : Prop :=

  Bet A B C \/ Bet B C A \/ Bet C A B.



Ltac cases_col A B C := elim (classic (Col A B C));intros.



Axiom between_identity : forall A B, Bet A B A -> A=B.



Axiom cong_pseudo_reflexivity : forall A B : Point, Cong A B B A.



Axiom cong_identity : forall A B C : Point, Cong A B C C -> A = B.



Axiom cong_inner_transitivity : forall A B C D E F : Point, 

   Cong A B C D -> Cong A B E F -> Cong C D E F.



Axiom inner_pasch : forall A B C P Q : Point,

      Bet A P C -> Bet B Q C ->

      exists x, Bet P x B /\ Bet Q x A.



Axiom euclid : forall A B C D T : Point,

    Bet A D T -> Bet B D C -> A<>D ->

    exists x, exists y,

    Bet A B x /\ Bet A C y /\ Bet x T y.



Axiom five_segments : forall A A' B B' C C' D D' : Point,

    Cong A B A' B' ->

    Cong B C B' C' ->

    Cong A D A' D' ->

    Cong B D B' D' ->

    Bet A B C -> Bet A' B' C' -> A <> B -> Cong C D C' D'.



Axiom segment_construction : forall A B C D : Point, 

    exists E : Point, Bet A B E /\ Cong B E C D.



Axiom lower_dim :

    exists A, exists B, exists C, ~ Col A B C.



Axiom upper_dim : forall A B C P Q : Point,

    P <> Q -> Cong A P A Q -> Cong B P B Q -> Cong C P C Q ->

    Col A B C.



Axiom continuity :

    forall X Y : Point -> Prop,

    (exists A : Point, (forall x y : Point, X x -> Y y -> Bet A x y)) ->

    exists B : Point, (forall x y : Point, X x -> Y y -> Bet x B y).



Hint Resolve segment_construction five_segments inner_pasch euclid : Tarski.

Hint Resolve cong_pseudo_reflexivity cong_identity between_identity : Tarski.

Hint Resolve cong_inner_transitivity  : Tarski.



Ltac eTarski := eauto with Tarski.

Ltac Tarski := auto with Tarski.



Lemma eq_dec_points : forall A B:Point, A=B \/ ~ A=B.

Proof.

intros.

apply classic.

Qed.



Ltac cases_equality A B := elim (eq_dec_points A B);intros.

