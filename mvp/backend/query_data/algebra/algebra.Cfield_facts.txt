
Set Automatic Coercions Import.
Set Implicit Arguments.
Unset Strict Implicit.
Require Export Field_facts.
(* Field_facts:
Set Implicit Arguments.
Unset Strict Implicit.
Require Export Field_cat.
Require Export Ring_facts.

Section Lemmas1.
Variable K : FIELD.

Definition field_inverse (x : K) : K := Ap (field_inverse_map K) x.

Definition field_div (x y : K) : K := ring_mult x (field_inverse y).

Lemma FIELD_inverse_r :
 forall x : K,
 ~ Equal x (monoid_unit K) ->
 Equal (ring_mult x (field_inverse x)) (ring_unit K).

Lemma FIELD_inverse_l :
 forall x : K,
 ~ Equal x (monoid_unit K) ->
 Equal (ring_mult (field_inverse x) x) (ring_unit K).

Lemma FIELD_unit_non_zero : ~ Equal (ring_unit K) (monoid_unit K).

Lemma FIELD_comp :
 forall x x' : K, Equal x x' -> Equal (field_inverse x) (field_inverse x').
Hint Resolve FIELD_comp FIELD_inverse_r FIELD_inverse_l FIELD_unit_non_zero:
  algebra.

Lemma FIELD_unit_inverse : Equal (field_inverse (ring_unit K)) (ring_unit K).
Hint Resolve FIELD_unit_inverse: algebra.

Lemma FIELD_reg_left :
 forall x y z : K,
 ~ Equal x (monoid_unit K) ->
 Equal (ring_mult x y) (ring_mult x z) -> Equal y z.

Lemma FIELD_reg_right :
 forall x y z : K,
 ~ Equal x (monoid_unit K) ->
 Equal (ring_mult y x) (ring_mult z x) -> Equal y z.

Lemma FIELD_inverse_non_zero :
 forall x : K,
 ~ Equal x (monoid_unit K) -> ~ Equal (field_inverse x) (monoid_unit K).
Hint Resolve FIELD_inverse_non_zero: algebra.

Lemma FIELD_inverse_inverse :
 forall x : K,
 ~ Equal x (monoid_unit K) -> Equal (field_inverse (field_inverse x)) x.
Hint Resolve FIELD_inverse_inverse: algebra.

Lemma FIELD_integral_domain_l :
 forall x y : K,
 ~ Equal (ring_mult x y) (monoid_unit K) -> ~ Equal x (monoid_unit K).

Lemma FIELD_integral_domain_r :
 forall x y : K,
 ~ Equal (ring_mult x y) (monoid_unit K) -> ~ Equal y (monoid_unit K).

Lemma FIELD_law_inverse :
 forall x y : K,
 Equal (ring_mult x y) (ring_unit K) -> Equal (field_inverse x) y.

Lemma FIELD_inverse_law :
 forall x y : K,
 ~ Equal x (monoid_unit K) ->
 ~ Equal y (monoid_unit K) ->
 Equal (field_inverse (ring_mult x y))
   (ring_mult (field_inverse y) (field_inverse x)).
Hint Resolve FIELD_inverse_law: algebra.

Lemma FIELD_x_div_x :
 forall x : K,
 ~ Equal x (monoid_unit K) -> Equal (field_div x x) (ring_unit K).
Hint Resolve FIELD_x_div_x: algebra.

Lemma FIELD_simpl_r :
 forall x y : K,
 ~ Equal y (monoid_unit K) -> Equal (ring_mult (field_div x y) y) x.
Hint Resolve FIELD_simpl_r: algebra.

Lemma FIELD_one_div_x :
 forall x : K,
 ~ Equal x (monoid_unit K) ->
 Equal (field_div (ring_unit K) x) (field_inverse x).
Hint Resolve FIELD_one_div_x: algebra.

Lemma FIELD_one_div_xy :
 forall x y : K,
 ~ Equal x (monoid_unit K) ->
 ~ Equal y (monoid_unit K) ->
 Equal (field_div (ring_unit K) (ring_mult x y))
   (ring_mult (field_div (ring_unit K) y) (field_div (ring_unit K) x)).
Hint Resolve FIELD_one_div_xy: algebra.

Lemma FIELD_one_div_div :
 forall x y : K,
 ~ Equal x (monoid_unit K) ->
 ~ Equal y (monoid_unit K) ->
 Equal (field_div (ring_unit K) (field_div x y)) (field_div y x).
Hint Resolve FIELD_one_div_div: algebra.

Lemma FIELD_div_div :
 forall x y z : K,
 ~ Equal y (monoid_unit K) ->
 ~ Equal z (monoid_unit K) ->
 Equal (field_div x (field_div y z)) (field_div (ring_mult x z) y).
Hint Resolve FIELD_div_div: algebra.
Comments "Normalisation.".

Lemma FIELD_mult_div_l :
 forall x y z : K,
 Equal (ring_mult x (field_div y z)) (field_div (ring_mult x y) z).
Hint Resolve FIELD_mult_div_l: algebra.

Lemma FIELD_div_div2 :
 forall x y z : K,
 ~ Equal y (monoid_unit K) ->
 ~ Equal z (monoid_unit K) ->
 Equal (field_div (field_div x y) z) (field_div x (ring_mult z y)).

Lemma FIELD_inv_div :
 forall x y : K,
 ~ Equal x (monoid_unit K) ->
 ~ Equal y (monoid_unit K) ->
 Equal (field_inverse (field_div x y)) (field_div y x).
End Lemmas1.
Hint Resolve FIELD_inverse_r FIELD_inverse_l FIELD_unit_non_zero FIELD_comp
  FIELD_unit_inverse FIELD_reg_left FIELD_reg_right FIELD_inverse_non_zero
  FIELD_inverse_inverse FIELD_integral_domain_l FIELD_integral_domain_r
  FIELD_law_inverse FIELD_inverse_law FIELD_x_div_x FIELD_simpl_r
  FIELD_one_div_x FIELD_one_div_xy FIELD_one_div_div FIELD_div_div
  FIELD_mult_div_l FIELD_div_div2 FIELD_inv_div: algebra. *)
Require Export Cfield_cat.
(* Cfield_cat:
Set Implicit Arguments.
Unset Strict Implicit.
Require Export Ring_cat.
Require Export Field_cat.

Record cfield : Type := 
  {cfield_ring : cring; cfield_on_def :> field_on cfield_ring}.
Coercion cfield_ring : cfield >-> cring.

Definition CFIELD := full_subcat (C:=CRING) (C':=cfield) cfield_ring. *)

Section Lemmas1.
Variable K : CFIELD.

Lemma CFIELD_com : forall x y : K, Equal (ring_mult x y) (ring_mult y x).
exact (cring_com_prf K).
Qed.
Hint Immediate CFIELD_com: algebra.

Lemma CFIELD_inverse_law2 :
 forall x y : K,
 ~ Equal x (monoid_unit K) ->
 ~ Equal y (monoid_unit K) ->
 Equal (field_inverse (ring_mult x y))
   (ring_mult (field_inverse x) (field_inverse y)).
intros x y H' H'0; try assumption.
apply Trans with (ring_mult (field_inverse y) (field_inverse x):K);
 auto with algebra.
Qed.
Hint Resolve CFIELD_inverse_law2: algebra.

Lemma CFIELD_simpl_l :
 forall x y : K,
 ~ Equal y (monoid_unit K) -> Equal (ring_mult y (field_div x y)) x.
intros x y H'; try assumption.
apply Trans with (ring_mult (field_div x y) y:K); auto with algebra.
Qed.
Hint Resolve CFIELD_simpl_l: algebra.
Comments "Normalisation.".

Lemma CFIELD_mult4 :
 forall a b c d : K,
 Equal (ring_mult (ring_mult a b) (ring_mult c d))
   (ring_mult (ring_mult a c) (ring_mult b d)).
exact (CRING_mult4 (R1:=K)).
Qed.
Hint Resolve CRING_mult4: algebra.

Lemma CFIELD_mult3 :
 forall x y z : K,
 Equal (ring_mult x (ring_mult y z)) (ring_mult y (ring_mult x z)).
exact (CRING_mult3 (R1:=K)).
Qed.
Hint Resolve CFIELD_mult3: algebra.

Lemma CFIELD_mult3bis :
 forall x y z : K,
 Equal (ring_mult (ring_mult x y) z) (ring_mult (ring_mult x z) y).
exact (CRING_mult3bis (R1:=K)).
Qed.
Hint Resolve CFIELD_mult3bis: algebra.

Lemma CFIELD_mult_div_r :
 forall x y z : K,
 Equal (ring_mult (field_div y z) x) (field_div (ring_mult y x) z).
unfold field_div in |- *.
auto with algebra.
Qed.
End Lemmas1.
Hint Resolve CFIELD_inverse_law2 CFIELD_simpl_l CFIELD_mult4 CFIELD_mult3
  CFIELD_mult3bis CFIELD_mult_div_r: algebra.
Hint Immediate CFIELD_com: algebra.
