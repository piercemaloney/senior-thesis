{
    "json_file_path": "data/chinese/Nat_complements.json",
    "query_context_path": "/app/query_data/chinese/chinese.Nat_complements.txt",
    "state": "FAILURE",
    "model": "llemma-base",
    "eval_model": "gpt-4",
    "eval_strategy": "SELECTION_INSTRUCT",
    "search_strategy": "GREEDY",
    "num_generate_queries": 2,
    "num_evaluate_queries": 1,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (n m : nat) (_ : lt m n), @eq nat (Init.Nat.pred (Init.Nat.sub n m)) (Init.Nat.sub n (S m))"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros; elim minus_n_Sm; auto with arith.",
                "fg_goals": [],
                "bg_goals": [],
                "eval_score": -Infinity,
                "cost": 0.0,
                "f_score": 0.0,
                "children": []
            },
            {
                "tactic": "simple induction 1; simpl in |- *; auto with arith.",
                "fg_goals": [
                    "forall (m0 : nat) (_ : le (S m) m0) (_ : @eq nat (Init.Nat.pred (Init.Nat.sub m0 m)) (Init.Nat.sub m0 (S m))), @eq nat (Init.Nat.pred match m with | O => S m0 | S l => Init.Nat.sub m0 l end) (Init.Nat.sub m0 m)",
                    "@eq nat (Init.Nat.pred match m with | O => S m | S l => Init.Nat.sub m l end) (Init.Nat.sub m m)"
                ],
                "bg_goals": [],
                "eval_score": 0.0,
                "cost": 0.0,
                "f_score": 0.0,
                "children": [
                    {
                        "tactic": "intros; rewrite H; auto with arith.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    },
                    {
                        "tactic": "intros; rewrite (minus_n_n m); auto with arith.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": null
}