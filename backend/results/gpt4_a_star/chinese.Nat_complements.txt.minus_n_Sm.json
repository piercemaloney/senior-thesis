{
    "json_file_path": "data/chinese/Nat_complements.json",
    "query_context_path": "/app/query_data/chinese/chinese.Nat_complements.txt",
    "state": "TIMEOUT",
    "model": "gpt-4",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 12,
    "num_evaluate_queries": 16,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (n m : nat) (_ : lt m n), @eq nat (Init.Nat.pred (Init.Nat.sub n m)) (Init.Nat.sub n (S m))"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "induction n as [|n' IH].",
                "fg_goals": [
                    "forall (m : nat) (_ : lt m (S n')), @eq nat (Init.Nat.pred (Init.Nat.sub (S n') m)) (Init.Nat.sub (S n') (S m))",
                    "forall (m : nat) (_ : lt m O), @eq nat (Init.Nat.pred (Init.Nat.sub O m)) (Init.Nat.sub O (S m))"
                ],
                "bg_goals": [],
                "eval_score": 0.1,
                "cost": 0.2,
                "f_score": 1.1,
                "children": [
                    {
                        "tactic": "intros m Hlt.",
                        "fg_goals": [
                            "forall (m : nat) (_ : lt m (S n')), @eq nat (Init.Nat.pred (Init.Nat.sub (S n') m)) (Init.Nat.sub (S n') (S m))",
                            "@eq nat (Init.Nat.pred (Init.Nat.sub O m)) (Init.Nat.sub O (S m))"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.1,
                        "cost": 0.4,
                        "f_score": 1.3,
                        "children": [
                            {
                                "tactic": "exfalso; lia.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            },
                            {
                                "tactic": "inversion Hlt.",
                                "fg_goals": [
                                    "forall (m : nat) (_ : lt m (S n')), @eq nat (Init.Nat.pred (Init.Nat.sub (S n') m)) (Init.Nat.sub (S n') (S m))"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.1,
                                "cost": 0.6000000000000001,
                                "f_score": 1.5,
                                "children": [
                                    {
                                        "tactic": "intros; destruct m.",
                                        "fg_goals": [
                                            "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') (S m))) (Init.Nat.sub (S n') (S (S m)))",
                                            "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') O)) (Init.Nat.sub (S n') (S O))"
                                        ],
                                        "bg_goals": [],
                                        "eval_score": 0.3,
                                        "cost": 0.8,
                                        "f_score": 1.5,
                                        "children": [
                                            {
                                                "tactic": "simpl.",
                                                "fg_goals": [
                                                    "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') (S m))) (Init.Nat.sub (S n') (S (S m)))",
                                                    "@eq nat n' (Init.Nat.sub n' O)"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.3,
                                                "cost": 1.0,
                                                "f_score": 1.7,
                                                "children": [
                                                    {
                                                        "tactic": "rewrite Nat.sub_0_r.",
                                                        "fg_goals": [
                                                            "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') (S m))) (Init.Nat.sub (S n') (S (S m)))",
                                                            "@eq nat n' n'"
                                                        ],
                                                        "bg_goals": [],
                                                        "eval_score": 0.85,
                                                        "cost": 1.2,
                                                        "f_score": 1.35,
                                                        "children": [
                                                            {
                                                                "tactic": "apply Nat.pred_succ.",
                                                                "fg_goals": [
                                                                    "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') (S m))) (Init.Nat.sub (S n') (S (S m)))"
                                                                ],
                                                                "bg_goals": [],
                                                                "eval_score": 0.7,
                                                                "cost": 1.4,
                                                                "f_score": 1.7,
                                                                "children": [
                                                                    {
                                                                        "tactic": "simpl; apply IHn'.",
                                                                        "fg_goals": [],
                                                                        "bg_goals": [],
                                                                        "eval_score": -Infinity,
                                                                        "cost": 0.0,
                                                                        "f_score": 0.0,
                                                                        "children": []
                                                                    },
                                                                    {
                                                                        "tactic": "destruct m; simpl in *.",
                                                                        "fg_goals": [
                                                                            "@eq nat (Init.Nat.pred (Init.Nat.sub n' (S m))) (Init.Nat.sub n' (S (S m)))",
                                                                            "@eq nat (Init.Nat.pred (Init.Nat.sub n' O)) (Init.Nat.sub n' (S O))"
                                                                        ],
                                                                        "bg_goals": [],
                                                                        "eval_score": 0.6,
                                                                        "cost": 1.5999999999999999,
                                                                        "f_score": 2.0,
                                                                        "children": []
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "tactic": "reflexivity.",
                                                                "fg_goals": [
                                                                    "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') (S m))) (Init.Nat.sub (S n') (S (S m)))"
                                                                ],
                                                                "bg_goals": [],
                                                                "eval_score": 0.7,
                                                                "cost": 1.4,
                                                                "f_score": 1.7,
                                                                "children": [
                                                                    {
                                                                        "tactic": "simpl.",
                                                                        "fg_goals": [
                                                                            "@eq nat (Init.Nat.pred (Init.Nat.sub n' m)) (Init.Nat.sub n' (S m))"
                                                                        ],
                                                                        "bg_goals": [],
                                                                        "eval_score": 0.7,
                                                                        "cost": 1.5999999999999999,
                                                                        "f_score": 1.9,
                                                                        "children": []
                                                                    },
                                                                    {
                                                                        "tactic": "rewrite IH.",
                                                                        "fg_goals": [],
                                                                        "bg_goals": [],
                                                                        "eval_score": -Infinity,
                                                                        "cost": 0.0,
                                                                        "f_score": 0.0,
                                                                        "children": []
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "tactic": "auto with arith.",
                                                        "fg_goals": [
                                                            "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') (S m))) (Init.Nat.sub (S n') (S (S m)))"
                                                        ],
                                                        "bg_goals": [],
                                                        "eval_score": 0.7,
                                                        "cost": 1.2,
                                                        "f_score": 1.5,
                                                        "children": [
                                                            {
                                                                "tactic": "simpl in IH; apply IH.",
                                                                "fg_goals": [
                                                                    "lt m n'"
                                                                ],
                                                                "bg_goals": [],
                                                                "eval_score": 0.7,
                                                                "cost": 1.4,
                                                                "f_score": 1.7,
                                                                "children": []
                                                            },
                                                            {
                                                                "tactic": "rewrite Nat.sub_succ.",
                                                                "fg_goals": [
                                                                    "@eq nat (Init.Nat.pred (Nat.sub n' m)) (Init.Nat.sub (S n') (S (S m)))"
                                                                ],
                                                                "bg_goals": [],
                                                                "eval_score": 0.7,
                                                                "cost": 1.4,
                                                                "f_score": 1.7,
                                                                "children": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "tactic": "rewrite <- minus_n_O.",
                                                "fg_goals": [
                                                    "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') (S m))) (Init.Nat.sub (S n') (S (S m)))",
                                                    "@eq nat (Init.Nat.pred (S n')) (Init.Nat.sub (S n') (S O))"
                                                ],
                                                "bg_goals": [],
                                                "eval_score": 0.4,
                                                "cost": 1.0,
                                                "f_score": 1.6,
                                                "children": [
                                                    {
                                                        "tactic": "simpl.",
                                                        "fg_goals": [
                                                            "@eq nat (Init.Nat.pred (Init.Nat.sub (S n') (S m))) (Init.Nat.sub (S n') (S (S m)))",
                                                            "@eq nat n' (Init.Nat.sub n' O)"
                                                        ],
                                                        "bg_goals": [],
                                                        "eval_score": 0.4,
                                                        "cost": 1.2,
                                                        "f_score": 1.7999999999999998,
                                                        "children": []
                                                    },
                                                    {
                                                        "tactic": "rewrite <- minus_n_O.",
                                                        "fg_goals": [],
                                                        "bg_goals": [],
                                                        "eval_score": -Infinity,
                                                        "cost": 0.0,
                                                        "f_score": 0.0,
                                                        "children": []
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "tactic": "apply IHn'.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": -Infinity,
                                        "cost": 0.0,
                                        "f_score": 0.0,
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "tactic": "contradiction.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            },
            {
                "tactic": "intros m Hlt.",
                "fg_goals": [
                    "forall _ : lt Hlt m, @eq nat (Init.Nat.pred (Init.Nat.sub m Hlt)) (Init.Nat.sub m (S Hlt))"
                ],
                "bg_goals": [],
                "eval_score": 0.1,
                "cost": 0.2,
                "f_score": 1.1,
                "children": [
                    {
                        "tactic": "rewrite <- minus_n_O.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    },
                    {
                        "tactic": "omega.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": null
}