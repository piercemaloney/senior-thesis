{
    "json_file_path": "data/coq-library-undecidability/PCP/PCP_CFP.json",
    "query_context_path": "/app/query_data/coq-library-undecidability/coq-library-undecidability.PCP.PCP_CFP.txt",
    "state": "PROVING",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "SELECTION_INSTRUCT",
    "search_strategy": "GREEDY",
    "num_generate_queries": 2,
    "num_evaluate_queries": 1,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall _ : @incl (prod (PCP.string nat) (list nat)) A (gamma B), @incl (prod (PCP.string nat) (list nat)) (gamma A) B"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros H.",
                "fg_goals": [
                    "@incl (prod (PCP.string nat) (list nat)) (gamma A) B"
                ],
                "bg_goals": [],
                "eval_score": 0.0,
                "cost": 0.0,
                "f_score": 0.0,
                "children": []
            },
            {
                "tactic": "induction A as [ | (x,y) ]; cbn.",
                "fg_goals": [
                    "forall _ : @incl (prod (PCP.string nat) (list nat)) (@cons (prod (PCP.string nat) (list nat)) (@pair (PCP.string nat) (list nat) x y) A) (gamma B), @incl (prod (PCP.string nat) (list nat)) (@cons (prod (PCP.string nat) (list nat)) (@pair (PCP.string nat) (list nat) x (@rev nat y)) (@map (prod (PCP.string nat) (list nat)) (prod (PCP.string nat) (list nat)) (fun '(pair x y) => @pair (PCP.string nat) (list nat) x (@rev nat y)) A)) B",
                    "forall _ : @incl (prod (PCP.string nat) (list nat)) (@nil (prod (PCP.string nat) (list nat))) (gamma B), @incl (prod (PCP.string nat) (list nat)) (@nil (prod (PCP.string nat) (list nat))) B"
                ],
                "bg_goals": [],
                "eval_score": 0.0,
                "cost": 0.0,
                "f_score": 0.0,
                "children": [
                    {
                        "tactic": "- intros _; constructor.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": null
}