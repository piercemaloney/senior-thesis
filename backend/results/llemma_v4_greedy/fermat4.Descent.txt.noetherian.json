{
    "json_file_path": "data/fermat4/Descent.json",
    "query_context_path": "/app/query_data/fermat4/fermat4.Descent.txt",
    "state": "SUCCESS",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "SELECTION_INSTRUCT",
    "search_strategy": "GREEDY",
    "num_generate_queries": 2,
    "num_evaluate_queries": 1,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (P : forall _ : prod nat nat, Prop) (_ : forall (z : prod nat nat) (_ : forall (y : prod nat nat) (_ : lt (Init.Nat.add (@fst nat nat y) (@snd nat nat y)) (Init.Nat.add (@fst nat nat z) (@snd nat nat z))), P y), P z) (x : prod nat nat), P x"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "intros P H x.",
                "fg_goals": [
                    "P x"
                ],
                "bg_goals": [],
                "eval_score": 0.0,
                "cost": 0.0,
                "f_score": 0.0,
                "children": [
                    {
                        "tactic": "apply (well_founded_induction_type R_noet_wf); auto.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            },
            {
                "tactic": "intros P H x; apply (well_founded_induction_type R_noet_wf x H).",
                "fg_goals": [],
                "bg_goals": [],
                "eval_score": -Infinity,
                "cost": 0.0,
                "f_score": 0.0,
                "children": []
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "intros P H x.",
        "apply (well_founded_induction_type R_noet_wf); auto."
    ]
}