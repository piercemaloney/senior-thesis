{
    "json_file_path": "data/chinese/Nat_complements.json",
    "query_context_path": "/app/query_data/chinese/chinese.Nat_complements.txt",
    "state": "TIMEOUT",
    "model": "llemma-base",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 12,
    "num_evaluate_queries": 20,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "forall (n m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "simple induction n; simple induction m.",
                "fg_goals": [
                    "forall (n : nat) (_ : forall _ : lt (S n0) n, lt O (Init.Nat.sub n (S n0))) (_ : lt (S n0) (S n)), lt O (Init.Nat.sub (S n) (S n0))",
                    "forall _ : lt (S n0) O, lt O (Init.Nat.sub O (S n0))",
                    "forall (n : nat) (_ : forall _ : lt O n, lt O (Init.Nat.sub n O)) (_ : lt O (S n)), lt O (Init.Nat.sub (S n) O)",
                    "forall _ : lt O O, lt O (Init.Nat.sub O O)"
                ],
                "bg_goals": [],
                "eval_score": 0.1,
                "cost": 0.2,
                "f_score": 1.1,
                "children": [
                    {
                        "tactic": "intros; inversion H0.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": -Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    },
                    {
                        "tactic": "intros; auto with arith.",
                        "fg_goals": [
                            "forall (n : nat) (_ : forall _ : lt (S n0) n, lt O (Init.Nat.sub n (S n0))) (_ : lt (S n0) (S n)), lt O (Init.Nat.sub (S n) (S n0))",
                            "forall _ : lt (S n0) O, lt O (Init.Nat.sub O (S n0))",
                            "forall (n : nat) (_ : forall _ : lt O n, lt O (Init.Nat.sub n O)) (_ : lt O (S n)), lt O (Init.Nat.sub (S n) O)"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.1,
                        "cost": 0.4,
                        "f_score": 1.3,
                        "children": [
                            {
                                "tactic": "intros; inversion H0.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": 0.4,
                                "cost": 0.6000000000000001,
                                "f_score": 1.2000000000000002,
                                "children": [
                                    {
                                        "tactic": "intros; inversion H0.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": 0.3,
                                        "cost": 0.8,
                                        "f_score": 1.5,
                                        "children": []
                                    },
                                    {
                                        "tactic": "intros; inversion H0; auto with arith.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": 0.7,
                                        "cost": 0.8,
                                        "f_score": 1.1,
                                        "children": [
                                            {
                                                "tactic": "intros; apply lt_O_minus; auto with arith.",
                                                "fg_goals": [],
                                                "bg_goals": [],
                                                "eval_score": 0.5,
                                                "cost": 1.0,
                                                "f_score": 1.5,
                                                "children": []
                                            },
                                            {
                                                "tactic": "intros; inversion H0.",
                                                "fg_goals": [],
                                                "bg_goals": [],
                                                "eval_score": 0.7,
                                                "cost": 1.0,
                                                "f_score": 1.3,
                                                "children": [
                                                    {
                                                        "tactic": "intros; inversion H0.",
                                                        "fg_goals": [],
                                                        "bg_goals": [],
                                                        "eval_score": 0.4,
                                                        "cost": 1.2,
                                                        "f_score": 1.7999999999999998,
                                                        "children": []
                                                    },
                                                    {
                                                        "tactic": "intros; inversion H1.",
                                                        "fg_goals": [],
                                                        "bg_goals": [],
                                                        "eval_score": 0.3,
                                                        "cost": 1.2,
                                                        "f_score": 1.9,
                                                        "children": []
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "tactic": "intros; apply lt_minus1; auto with arith.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": 0.5,
                                "cost": 0.6000000000000001,
                                "f_score": 1.1,
                                "children": [
                                    {
                                        "tactic": "intros; apply lt_O_minus; auto with arith.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": 0.4,
                                        "cost": 0.8,
                                        "f_score": 1.4,
                                        "children": []
                                    },
                                    {
                                        "tactic": "intros; simpl in |- *; apply lt_O_minus; auto with arith.",
                                        "fg_goals": [],
                                        "bg_goals": [],
                                        "eval_score": 0.6,
                                        "cost": 0.8,
                                        "f_score": 1.2000000000000002,
                                        "children": [
                                            {
                                                "tactic": "intros; simpl in |- *; apply lt_O_minus; auto with arith.",
                                                "fg_goals": [],
                                                "bg_goals": [],
                                                "eval_score": 0.3,
                                                "cost": 1.0,
                                                "f_score": 1.7,
                                                "children": []
                                            },
                                            {
                                                "tactic": "intros; simpl in |- *; apply lt_n_S; auto with arith.",
                                                "fg_goals": [],
                                                "bg_goals": [],
                                                "eval_score": 0.7,
                                                "cost": 1.0,
                                                "f_score": 1.3,
                                                "children": [
                                                    {
                                                        "tactic": "Qed.",
                                                        "fg_goals": [],
                                                        "bg_goals": [],
                                                        "eval_score": 0.9,
                                                        "cost": 1.2,
                                                        "f_score": 1.2999999999999998,
                                                        "children": []
                                                    },
                                                    {
                                                        "tactic": "intros; simpl in |- *; apply lt_n_S; auto with arith.",
                                                        "fg_goals": [],
                                                        "bg_goals": [],
                                                        "eval_score": 0.6,
                                                        "cost": 1.2,
                                                        "f_score": 1.6,
                                                        "children": []
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "tactic": "intros; elim (le_or_lt m n); auto with arith.",
                "fg_goals": [
                    "forall _ : lt n m, lt O (Init.Nat.sub m n)",
                    "forall _ : le m n, lt O (Init.Nat.sub m n)"
                ],
                "bg_goals": [],
                "eval_score": 0.2,
                "cost": 0.2,
                "f_score": 1.0,
                "children": [
                    {
                        "tactic": "intros; absurd (n <= m); auto with arith.",
                        "fg_goals": [
                            "forall _ : lt n m, lt O (Init.Nat.sub m n)",
                            "not (le n m)"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.1,
                        "cost": 0.4,
                        "f_score": 1.3,
                        "children": [
                            {
                                "tactic": "intros; apply le_not_lt; auto with arith.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            },
                            {
                                "tactic": "intros; absurd (n < m); auto with arith.",
                                "fg_goals": [
                                    "forall _ : lt n m, lt O (Init.Nat.sub m n)"
                                ],
                                "bg_goals": [],
                                "eval_score": 0.1,
                                "cost": 0.6000000000000001,
                                "f_score": 1.5,
                                "children": []
                            }
                        ]
                    },
                    {
                        "tactic": "intros; absurd (m - n = 0); auto with arith.",
                        "fg_goals": [
                            "forall _ : lt n m, lt O (Init.Nat.sub m n)",
                            "@eq nat (Init.Nat.sub m n) O",
                            "not (@eq nat (Init.Nat.sub m n) O)"
                        ],
                        "bg_goals": [],
                        "eval_score": 0.7,
                        "cost": 0.4,
                        "f_score": 0.7000000000000001,
                        "children": [
                            {
                                "tactic": "Qed.",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            },
                            {
                                "tactic": "Qed .",
                                "fg_goals": [],
                                "bg_goals": [],
                                "eval_score": -Infinity,
                                "cost": 0.0,
                                "f_score": 0.0,
                                "children": []
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": null
}