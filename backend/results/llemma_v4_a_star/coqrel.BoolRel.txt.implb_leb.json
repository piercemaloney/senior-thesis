{
    "json_file_path": "data/coqrel/BoolRel.json",
    "query_context_path": "/app/query_data/coqrel/coqrel.BoolRel.txt",
    "state": "SUCCESS",
    "model": "llemma-v4-finetuned",
    "eval_model": "gpt-4",
    "eval_strategy": "ZERO_TO_ONE_INSTRUCT",
    "search_strategy": "A_STAR",
    "num_generate_queries": 2,
    "num_evaluate_queries": 2,
    "tree": {
        "tactic": "Proof.",
        "fg_goals": [
            "@Related (forall (_ : bool) (_ : bool), bool) (forall (_ : bool) (_ : bool), bool) implb implb (@arrow_rel bool bool (forall _ : bool, bool) (forall _ : bool, bool) (@flip bool bool Prop leb) (@arrow_rel bool bool bool bool leb leb))"
        ],
        "bg_goals": [],
        "eval_score": 0.0,
        "cost": 0.0,
        "f_score": 0.0,
        "children": [
            {
                "tactic": "unfold implb.",
                "fg_goals": [
                    "@Related (forall (_ : bool) (_ : bool), bool) (forall (_ : bool) (_ : bool), bool) (fun b1 b2 : bool => if b1 then b2 else true) (fun b1 b2 : bool => if b1 then b2 else true) (@arrow_rel bool bool (forall _ : bool, bool) (forall _ : bool, bool) (@flip bool bool Prop leb) (@arrow_rel bool bool bool bool leb leb))"
                ],
                "bg_goals": [],
                "eval_score": 0.8,
                "cost": 0.2,
                "f_score": 0.39999999999999997,
                "children": []
            },
            {
                "tactic": "unfold implb, flip.",
                "fg_goals": [
                    "@Related (forall (_ : bool) (_ : bool), bool) (forall (_ : bool) (_ : bool), bool) (fun b1 b2 : bool => if b1 then b2 else true) (fun b1 b2 : bool => if b1 then b2 else true) (@arrow_rel bool bool (forall _ : bool, bool) (forall _ : bool, bool) (fun x y : bool => leb y x) (@arrow_rel bool bool bool bool leb leb))"
                ],
                "bg_goals": [],
                "eval_score": 0.9,
                "cost": 0.2,
                "f_score": 0.3,
                "children": [
                    {
                        "tactic": "rauto.",
                        "fg_goals": [],
                        "bg_goals": [],
                        "eval_score": Infinity,
                        "cost": 0.0,
                        "f_score": 0.0,
                        "children": []
                    }
                ]
            }
        ]
    },
    "successful_tactic_path": [
        "Proof.",
        "unfold implb, flip.",
        "rauto."
    ]
}